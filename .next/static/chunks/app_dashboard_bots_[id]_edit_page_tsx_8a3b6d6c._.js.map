{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/app/dashboard/bots/%5Bid%5D/edit/page.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\"use client\";\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { DashboardLayout } from \"@/components/dashboard-layout\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  ArrowLeft,\n  Loader2,\n  Trash2,\n  Plus,\n  Save,\n  Sparkles,\n  Send,\n  MessageSquare,\n  Menu,\n  X,\n  FilePen,\n} from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport { ProductModal } from \"@/components/product-modal\";\nimport { FunctionModal } from \"@/components/functions/function-modal\";\nimport { ChatWidgetCustomization } from \"@/components/chat_cuztomization/chat-widget-customization\";\nimport { useChatAssistantStore } from \"@/store/chatAsistantStore\";\nimport { useSession } from \"next-auth/react\";\nimport { useProductStore } from \"@/store/ProductStore\";\nimport { cn, parseProductString } from \"@/lib/utils\";\nimport {\n  type AssistantFunction,\n  useFunctionsStore,\n} from \"@/store/functionsStore\";\nimport { useChatStore } from \"@/store/chatControlStore\";\nimport AdvancedBotTasks from \"@/components/functions/automatizaciones-admin\";\n\ninterface BotData {\n  id: string;\n  name: string;\n  type: string;\n  status: string;\n  description: string;\n  welcomeMessage: string;\n  primaryColor: string;\n  faqs: Array<{ question: string; answer: string; category: string }>;\n  products: Array<{\n    name: string;\n    price: string;\n    description: string;\n    available: boolean;\n    stock?: string;\n  }>;\n  whatsappNumber?: string;\n  apiKey?: string;\n  useCase?: string;\n  businessDescription?: string;\n  chatSettings?: {\n    title?: string;\n    subtitle?: string;\n    primaryColor?: string;\n    buttonColor?: string;\n    bubbleColor?: string;\n    userBubbleColor?: string;\n    headerStyle?: \"gradient\" | \"solid\";\n    logo?: string;\n    showLogo?: boolean;\n    position?: \"right\" | \"left\";\n    initialMessage?: string;\n    placeholderText?: string;\n    userTextColor?: string;\n    botTextColor?: string;\n  };\n}\n\nexport default function EditBotPage({\n  params,\n}: {\n  params: Promise<{ id: string }>;\n}) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [bot, setBot] = useState<BotData | null>(null);\n  const [isProductModalOpen, setIsProductModalOpen] = useState(false);\n  const [isGeneratingFaqs, setIsGeneratingFaqs] = useState(false);\n  const [isChatPreviewOpen, setIsChatPreviewOpen] = useState(false);\n  const [isFunctionModalOpen, setIsFunctionModalOpen] = useState(false);\n  const [isChatTestOpen, setIsChatTestOpen] = useState(false);\n  const { getAssistantById, assistant, createFaq, deleteFaq, updateFaq } =\n    useChatAssistantStore();\n  const {\n    fetchFunctions,\n    functions,\n    addFunction,\n    deleteFunction,\n    updateFunction,\n  } = useFunctionsStore(); // Añadir updateFunction\n  const { fetchProducts, products, updateProduct } = useProductStore();\n  const [temporalMessage, setTemporalMessage] = useState(\"\");\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedChatId, setSelectedChatId] = useState(\"1\");\n  const [chatTiitle, setChatTitle] = useState(\n    \"Selecciona un Chat o Inicia uno nuevo\"\n  );\n  const {\n    startChat,\n    sendMessage,\n    currentChat,\n    fetchChat,\n    chats,\n    fetchUserChats,\n  } = useChatStore();\n  const [errorBot, setErrorBot] = useState(true);\n  const { data: session } = useSession();\n  const { id } = React.use(params);\n  const [editingFaqs, setEditingFaqs] = useState(() => assistant?.faqs || []);\n  const [localProducts, setLocalProducts] = useState(\n    products.map((product) => {\n      const parsed = parseProductString(product.name);\n      return {\n        ...product,\n        name: parsed.name,\n        price: parsed.price,\n        description: parsed.description,\n        stock: parsed.stock,\n      };\n    })\n  );\n\n  // Nuevo estado para la función que se está editando\n  const [editingFunction, setEditingFunction] = useState<\n    AssistantFunction | undefined\n  >(undefined);\n\n  useEffect(() => {\n    setLocalProducts(\n      products.map((product) => {\n        const parsed = parseProductString(product.name);\n        return {\n          ...product,\n          name: parsed.name,\n          price: parsed.price,\n          description: parsed.description,\n          stock: parsed.stock,\n        };\n      })\n    );\n  }, [products]);\n\n  useEffect(() => {\n    setEditingFaqs(assistant?.faqs || []);\n  }, [assistant]);\n\n  type TestMessage = {\n    id: string;\n    content: string;\n    sender: \"bot\" | \"user\";\n    timestamp: Date;\n  };\n\n  const [testMessages, setTestMessages] = useState<TestMessage[]>([\n    {\n      id: \"1\",\n      content: assistant?.welcome_message || \"Hola Como puedo ayudarte?\",\n      sender: \"bot\",\n      timestamp: new Date(),\n    },\n  ]);\n  const [testInput, setTestInput] = useState(\"\");\n  const router = useRouter();\n  const { toast } = useToast();\n  const { t, language } = useLanguage();\n\n  // Simulate fetching bot data\n  useEffect(() => {\n    setIsLoading(true);\n    const getBotData = async () => {\n      if (id === undefined) {\n        setIsLoading(false);\n        return;\n      }\n      if (!session?.binding_id) {\n        toast({\n          title: \"Error\",\n          description: \"Intenta Cerrar sesión y volver a ingresar.\",\n        });\n      } else {\n        await getAssistantById(id, session.binding_id);\n        await fetchProducts(session.binding_id, id);\n        await fetchFunctions(session.binding_id, id);\n        await fetchUserChats(session.binding_id);\n        console.log(assistant);\n        setErrorBot(false);\n      }\n      setIsLoading(false);\n    };\n    getBotData();\n  }, [\n    session,\n    id,\n    getAssistantById,\n    fetchProducts,\n    fetchFunctions,\n    fetchUserChats,\n  ]); // Añadir fetchFunctions y fetchUserChats a las dependencias\n\n  const handleAddFunction = async (functionData: AssistantFunction) => {\n    if (!session?.binding_id) {\n      toast({\n        title: \"Error\",\n        description:\n          \"La session no funciono intenta Cerrar Session y volver a ingresar\",\n      });\n      return;\n    }\n    try {\n      const data = await addFunction(session?.binding_id, id, functionData);\n      toast({\n        title: \"Info\",\n        description: data.message,\n      });\n      console.log(data);\n      await fetchFunctions(session.binding_id, id); // Refrescar la lista de funciones\n    } catch (error: unknown) {\n      const message = error instanceof Error ? error.message : String(error);\n      toast({\n        title: \"Error\",\n        description: `${message.replace(/\\.*$/, \"\")}.`,\n      });\n    }\n  };\n\n  // Nueva función para manejar la edición de una función\n  const handleEditFunction = async (updatedFunctionData: AssistantFunction) => {\n    if (!session?.binding_id || !updatedFunctionData.id) {\n      toast({\n        title: \"Error\",\n        description:\n          \"La sesión no funcionó o el ID de la función no está disponible. Intenta cerrar sesión y volver a ingresar.\",\n      });\n      return;\n    }\n    try {\n      const data = await updateFunction(\n        session.binding_id,\n        id,\n        updatedFunctionData.id,\n        updatedFunctionData\n      );\n      toast({\n        title: \"Éxito\",\n        description: data.message,\n      });\n      console.log(data);\n      await fetchFunctions(session.binding_id, id); // Refrescar la lista de funciones\n    } catch (error: unknown) {\n      const message = error instanceof Error ? error.message : String(error);\n      toast({\n        title: \"Error\",\n        description: `Error al editar la función: ${message.replace(\n          /\\.*$/,\n          \"\"\n        )}.`,\n      });\n    } finally {\n      setEditingFunction(undefined); // Limpiar la función en edición\n      setIsFunctionModalOpen(false); // Cerrar el modal\n    }\n  };\n\n  const handleRemoveFunction = async (function_id: string | undefined) => {\n    if (!session?.binding_id) {\n      toast({\n        title: \"Error\",\n        description:\n          \"La session no funciono intenta Cerrar Session y volver a ingresar\",\n      });\n      return;\n    }\n    if (!function_id) {\n      toast({\n        title: \"Error\",\n        description: \"No se obtuvo el id de la funcion\",\n      });\n      return;\n    }\n    try {\n      const data = await deleteFunction(session?.binding_id, id, function_id);\n      toast({\n        title: \"Info\",\n        description: data.message,\n      });\n      console.log(data);\n      await fetchFunctions(session.binding_id, id); // Refrescar la lista de funciones\n    } catch (error: unknown) {\n      const message = error instanceof Error ? error.message : String(error);\n      toast({\n        title: \"Error\",\n        description: `${message.replace(/\\.*$/, \"\")}.`,\n      });\n    }\n  };\n\n  // ✅ SOLUCIÓN: Función corregida para manejar el mensaje temporal\n  const handleSendTestMessage = async () => {\n    if (!testInput.trim()) return;\n    // 🔥 CLAVE: Guardar el mensaje ANTES de limpiar el input\n    const messageToSend = testInput.trim();\n    setTemporalMessage(messageToSend); // Mostrar inmediatamente\n    setTestInput(\"\"); // Limpiar el input\n    if (!session?.binding_id || !assistant?._id) {\n      toast({\n        title: \"Error\",\n        description: \"Intenta Cerrar sesión y volver a ingresar.\",\n      });\n      return;\n    }\n    try {\n      // Si es un nuevo chat, créalo\n      if (selectedChatId === \"1\") {\n        const data = await startChat({\n          userId: session?.binding_id,\n          assistant_id: assistant?._id,\n          promt: messageToSend, // Usar el mensaje guardado\n        });\n        const response = data as unknown as { chat_id: string };\n        const chatId = response.chat_id;\n        setSelectedChatId(chatId);\n        await fetchChat(chatId);\n        await fetchUserChats(session.binding_id);\n      } else {\n        await sendMessage({\n          chatId: selectedChatId,\n          assistant_id: assistant?._id,\n          role: \"user\",\n          content: messageToSend, // Usar el mensaje guardado\n        });\n      }\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Error al enviar el mensaje\",\n      });\n    } finally {\n      // Limpiar el mensaje temporal después de que se procese\n      setTimeout(() => {\n        setTemporalMessage(\"\");\n      }, 1000);\n    }\n  };\n\n  const handleSave = async () => {\n    setIsSaving(true);\n    // Simulate saving\n    setTimeout(() => {\n      setIsSaving(false);\n      toast({\n        title: \"Changes saved\",\n        description: \"Your bot has been updated successfully.\",\n      });\n    }, 1500);\n  };\n\n  const handleAddFaq = () => {\n    const HandleFaq = async () => {\n      if (!session?.binding_id) {\n        toast({\n          title: \"Error\",\n          description: \"Intenta Cerrar sesión y volver a ingresar.\",\n        });\n      } else {\n        await createFaq({\n          user_id: session?.binding_id,\n          assistant_id: id,\n          faqs: [\n            {\n              question: \"\",\n              answer: \"\",\n              category: \"\",\n            },\n          ],\n        });\n        await getAssistantById(id, session.binding_id);\n      }\n      toast({\n        title: \"Exito\",\n        description: \"Pregunta Lista para editar\",\n      });\n    };\n    HandleFaq();\n  };\n\n  const handleLocalChange = (index: number, field: string, value: string) => {\n    setEditingFaqs((prev) => {\n      const updated = [...prev];\n      updated[index] = { ...updated[index], [field]: value };\n      return updated;\n    });\n  };\n\n  const handleSaveFaq = (index: number) => {\n    const updatedFaq = editingFaqs[index];\n    const handleUpdate = async () => {\n      if (!session?.binding_id || !updatedFaq._id) {\n        toast({\n          title: \"Error\",\n          description: \"Intenta Cerrar sesión y volver a ingresar.\",\n        });\n      } else {\n        updateFaq({\n          user_id: session.binding_id,\n          assistant_id: id,\n          faqId: updatedFaq._id,\n          update: {\n            question: updatedFaq.question,\n            answer: updatedFaq.answer,\n            category: updatedFaq.category,\n          },\n        });\n        await getAssistantById(id, session.binding_id);\n        toast({\n          title: \"Exito\",\n          description: \"El FAQ se edito correctamente\",\n        });\n      }\n    };\n    handleUpdate();\n  };\n\n  const handleRemoveFaq = (index: number) => {\n    const handleRemove = async () => {\n      if (!session?.binding_id || !assistant?.faqs[index]._id) {\n        toast({\n          title: \"Error\",\n          description: \"Intenta Cerrar sesión y volver a ingresar.\",\n        });\n        return;\n      } else {\n        await deleteFaq({\n          user_id: session?.binding_id,\n          assistant_id: id,\n          faqId: assistant?.faqs[index]._id,\n        });\n        toast({\n          title: \"Success\",\n          description: \"Se ha eliminado la pregunta frecuente correctamente.\",\n        });\n      }\n      await getAssistantById(id, session.binding_id);\n    };\n    handleRemove();\n  };\n\n  const handleAddProduct = (product: any, method: \"manual\" | \"api\") => {\n    if (!bot) return;\n    if (method === \"manual\") {\n      setBot({\n        ...bot,\n        products: [...bot.products, product],\n      });\n    } else {\n      // En un caso real, aquí se procesaría la configuración de la API\n      toast({\n        title: language === \"en\" ? \"API Connected\" : \"API Conectada\",\n        description:\n          language === \"en\"\n            ? \"Your product API has been connected successfully. Products will be imported automatically.\"\n            : \"Tu API de productos ha sido conectada exitosamente. Los productos se importarán automáticamente.\",\n      });\n    }\n  };\n\n  const handleRemoveProduct = (index: number) => {\n    if (!bot) return;\n    const updatedProducts = bot.products.filter((_, i) => i !== index);\n    setBot({ ...bot, products: updatedProducts });\n  };\n\n  const handleGenerateCode = () => {\n    toast({\n      title: \"Code generated\",\n      description: \"The code has been copied to your clipboard.\",\n    });\n  };\n\n  const handleGenerateFaqs = () => {\n    if (!bot || !bot.businessDescription) {\n      toast({\n        title:\n          language === \"en\" ? \"Missing information\" : \"Información faltante\",\n        description:\n          language === \"en\"\n            ? \"Please provide a business description to generate FAQs.\"\n            : \"Por favor proporciona una descripción del negocio para generar preguntas frecuentes.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    setIsGeneratingFaqs(true);\n    // Simulate generating FAQs with AI\n    setTimeout(() => {\n      const generatedFaqs = [\n        {\n          question:\n            language === \"en\"\n              ? \"What makes your products unique?\"\n              : \"¿Qué hace que tus productos sean únicos?\",\n          answer:\n            language === \"en\"\n              ? \"Our products are designed with cutting-edge technology and user-centric approach, making them intuitive and powerful.\"\n              : \"Nuestros productos están diseñados con tecnología de vanguardia y un enfoque centrado en el usuario, haciéndolos intuitivos y potentes.\",\n          category: \"Products\",\n        },\n        {\n          question:\n            language === \"en\"\n              ? \"Do you offer customer support?\"\n              : \"¿Ofrecen soporte al cliente?\",\n          answer:\n            language === \"en\"\n              ? \"Yes, we provide 24/7 customer support through various channels including chat, email, and phone.\"\n              : \"Sí, proporcionamos soporte al cliente 24/7 a través de varios canales, incluyendo chat, correo electrónico y teléfono.\",\n          category: \"Support\",\n        },\n        {\n          question:\n            language === \"en\"\n              ? \"What payment methods do you accept?\"\n              : \"¿Qué métodos de pago aceptan?\",\n          answer:\n            language === \"en\"\n              ? \"We accept all major credit cards, PayPal, and bank transfers. For enterprise clients, we also offer invoicing options.\"\n              : \"Aceptamos todas las tarjetas de crédito principales, PayPal y transferencias bancarias. Para clientes empresariales, también ofrecemos opciones de facturación.\",\n          category: \"Billing\",\n        },\n      ];\n      if (bot) {\n        setBot({\n          ...bot,\n          faqs: [...bot.faqs, ...generatedFaqs],\n        });\n      }\n      setIsGeneratingFaqs(false);\n      toast({\n        title:\n          language === \"en\"\n            ? \"FAQs Generated\"\n            : \"Preguntas Frecuentes Generadas\",\n        description:\n          language === \"en\"\n            ? \"AI has generated new FAQs based on your business description.\"\n            : \"La IA ha generado nuevas preguntas frecuentes basadas en la descripción de tu negocio.\",\n      });\n    }, 2000);\n  };\n\n  const handleUpdateChatSettings = (settings: BotData[\"chatSettings\"]) => {\n    if (!bot) return;\n    setBot({\n      ...bot,\n      chatSettings: settings,\n    });\n  };\n\n  function adjustColor(hex: string, amount: number) {\n    return (\n      \"#\" +\n      hex\n        .replace(/^#/, \"\")\n        .replace(/../g, (color) =>\n          (\n            \"0\" +\n            Math.min(\n              255,\n              Math.max(0, Number.parseInt(color, 16) + amount)\n            ).toString(16)\n          ).substr(-2)\n        )\n    );\n  }\n\n  if (!assistant) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex h-full items-center justify-center\">\n          <div className=\"text-center\">\n            <h2 className=\"text-xl font-bold tracking-tight\">Bot not found</h2>\n            <p className=\"text-muted-foreground\">\n              The bot you&apos;re looking for doesn&apos;t exist or you\n              don&apos;t have access.\n            </p>\n            <Button\n              className=\"mt-4\"\n              onClick={() => router.push(\"/dashboard/bots\")}\n            >\n              Back to Bots\n            </Button>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (errorBot) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex h-full items-center justify-center\">\n          <div className=\"text-center\">\n            <h2 className=\"text-xl font-bold tracking-tight\">\n              Error con la sesión\n            </h2>\n            <p className=\"text-muted-foreground\">\n              Hubo un error con tu sesión. Por favor, cierra sesión y vuelve a\n              ingresar.\n            </p>\n            <Button\n              className=\"mt-4\"\n              onClick={() => router.push(\"/api/auth/signout\")}\n            >\n              Cerrar sesión\n            </Button>\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"flex flex-col gap-4 p-2 sm:p-4 md:gap-8 md:p-8\">\n        <div className=\"flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={() => router.back()}\n              type=\"button\"\n            >\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Back</span>\n            </Button>\n            <div>\n              <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                <h1 className=\"text-2xl sm:text-3xl font-bold tracking-tight\">\n                  {assistant?.name}\n                </h1>\n                <Badge\n                  variant={\n                    assistant?.status === \"online\"\n                      ? \"default\"\n                      : assistant.status === \"maintenance\"\n                      ? \"outline\"\n                      : \"secondary\"\n                  }\n                >\n                  {assistant &&\n                    assistant.status.charAt(0).toUpperCase() +\n                      assistant.status.slice(1)}\n                </Badge>\n              </div>\n              <p className=\"text-muted-foreground text-sm\">\n                Manage your chatbot settings, FAQs, and products.\n              </p>\n            </div>\n          </div>\n          <div className=\"flex flex-col sm:flex-row gap-2 w-full sm:w-auto\">\n            <Button\n              variant=\"outline\"\n              onClick={() =>\n                router.push(`/dashboard/bots/${assistant?._id}/preview`)\n              }\n              type=\"button\"\n              className=\"w-full sm:w-auto\"\n            >\n              Preview\n            </Button>\n            <Button\n              onClick={handleSave}\n              disabled={isSaving}\n              type=\"button\"\n              className=\"w-full sm:w-auto\"\n            >\n              {isSaving ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </>\n              )}\n            </Button>\n          </div>\n        </div>\n        <Tabs defaultValue=\"basic\" className=\"space-y-4\">\n          {/* Mobile-optimized TabsList */}\n          <div className=\"w-full overflow-hidden\">\n            <TabsList className=\"w-full h-auto p-1 grid grid-cols-3 md:grid-cols-6 gap-0.5 bg-muted rounded-lg\">\n              <TabsTrigger\n                value=\"basic\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Basic\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"faqs\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                FAQs\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"products\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Products\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"functions\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Servicios Tecnicos\n              </TabsTrigger>\n\n              <TabsTrigger\n                value=\"chat-customization\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Chat\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"test-chat\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Test\n              </TabsTrigger>\n            </TabsList>\n          </div>\n          <TabsContent value=\"basic\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Bot Information</CardTitle>\n                <CardDescription>\n                  Basic information about your chatbot.\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bot-name\">Bot Name</Label>\n                  <Input\n                    id=\"bot-name\"\n                    value={assistant.name}\n                    onChange={(e) => assistant.name !== e.target.value}\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bot-description\">Description</Label>\n                  <Textarea\n                    id=\"bot-description\"\n                    value={assistant.description}\n                    onChange={(e) => assistant?.description !== e.target.value}\n                    className=\"min-h-[100px]\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"welcome-message\">Welcome Message</Label>\n                  <Textarea\n                    id=\"welcome-message\"\n                    value={assistant.welcome_message}\n                    onChange={(e) =>\n                      assistant.welcome_message !== e.target.value\n                    }\n                    className=\"min-h-[100px]\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bot-status\">Status</Label>\n                  <Select\n                    value={assistant.status}\n                    onValueChange={(value) => console.log(value)}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"online\">Online</SelectItem>\n                      <SelectItem value=\"offline\">Offline</SelectItem>\n                      <SelectItem value=\"maintenance\">Maintenance</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                {assistant.type === \"whatsapp\" && (\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"whatsapp-number\">\n                      WhatsApp Business Number\n                    </Label>\n                    <Input\n                      id=\"whatsapp-number\"\n                      value={\"\"}\n                      onChange={(e) => console.log(e.target.value)}\n                      placeholder=\"+1234567890\"\n                    />\n                  </div>\n                )}\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"primary-color\">Primary Color</Label>\n                  <div className=\"flex gap-2\">\n                    <Input\n                      id=\"primary-color\"\n                      type=\"color\"\n                      value={\"\"}\n                      onChange={(e) => console.log(e)}\n                      className=\"w-12 h-10 p-1\"\n                    />\n                    <Input\n                      id=\"primary-color-hex\"\n                      value={\"\"}\n                      onChange={(e) => console.log(e.target.value)}\n                      className=\"flex-1\"\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n          <TabsContent value=\"faqs\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n                <div>\n                  <CardTitle>Frequently Asked Questions</CardTitle>\n                  <CardDescription>\n                    Add questions and answers that your chatbot will respond to.\n                  </CardDescription>\n                </div>\n                <div className=\"flex flex-col sm:flex-row gap-2 w-full sm:w-auto\">\n                  <Button\n                    onClick={handleAddFaq}\n                    className=\"gap-1 w-full sm:w-auto\"\n                    type=\"button\"\n                  >\n                    <Plus className=\"h-4 w-4\" />\n                    Add FAQ\n                  </Button>\n                  <Button\n                    onClick={handleGenerateFaqs}\n                    variant=\"outline\"\n                    className=\"gap-1 w-full sm:w-auto bg-transparent\"\n                    disabled={isGeneratingFaqs}\n                    type=\"button\"\n                  >\n                    {isGeneratingFaqs ? (\n                      <>\n                        <Loader2 className=\"h-4 w-4 animate-spin\" />\n                        Generating...\n                      </>\n                    ) : (\n                      <>\n                        <Sparkles className=\"h-4 w-4\" />\n                        Generate FAQs\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-4\">\n                  <Label htmlFor=\"business-description\">\n                    Business Description\n                  </Label>\n                  <Textarea\n                    id=\"business-description\"\n                    value={\"\"}\n                    onChange={(e) => console.log(e.target.value)}\n                    placeholder={\n                      language === \"en\"\n                        ? \"Provide a clear description of your business to help generate relevant FAQs...\"\n                        : \"Proporciona una descripción clara de tu negocio para ayudar a generar preguntas frecuentes relevantes...\"\n                    }\n                    className=\"min-h-[100px]\"\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    {language === \"en\"\n                      ? \"A detailed description helps our AI generate more accurate and relevant FAQs for your business.\"\n                      : \"Una descripción detallada ayuda a nuestra IA a generar preguntas frecuentes más precisas y relevantes para tu negocio.\"}\n                  </p>\n                </div>\n                <Accordion type=\"multiple\" className=\"space-y-4\">\n                  {assistant &&\n                    editingFaqs.map((faq, index) => (\n                      <AccordionItem\n                        key={faq._id}\n                        value={`faq-${index}`}\n                        className=\"border rounded-md p-5\"\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <AccordionTrigger className=\"hover:no-underline flex-1 text-left\">\n                            {faq.question || \"New FAQ Item\"}\n                          </AccordionTrigger>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleRemoveFaq(index);\n                            }}\n                            className=\"h-8 w-8 text-muted-foreground hover:text-destructive flex-shrink-0\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Remove FAQ</span>\n                          </Button>\n                        </div>\n                        <AccordionContent className=\"space-y-4 p-2\">\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`faq-category-${index}`}>Tag</Label>\n                            <Input\n                              id={`faq-category-${index}`}\n                              value={faq.category}\n                              onChange={(e) =>\n                                handleLocalChange(\n                                  index,\n                                  \"category\",\n                                  e.target.value\n                                )\n                              }\n                              placeholder=\"Category\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`faq-question-${index}`}>\n                              Question\n                            </Label>\n                            <Input\n                              id={`faq-question-${index}`}\n                              value={faq.question}\n                              onChange={(e) =>\n                                handleLocalChange(\n                                  index,\n                                  \"question\",\n                                  e.target.value\n                                )\n                              }\n                              placeholder=\"What are your business hours?\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`faq-answer-${index}`}>\n                              Answer\n                            </Label>\n                            <Textarea\n                              id={`faq-answer-${index}`}\n                              value={faq.answer}\n                              onChange={(e) =>\n                                handleLocalChange(\n                                  index,\n                                  \"answer\",\n                                  e.target.value\n                                )\n                              }\n                              placeholder=\"Our business hours are Monday to Friday, 9am to 5pm.\"\n                              className=\"min-h-[100px]\"\n                            />\n                          </div>\n                          <Button\n                            onClick={() => handleSaveFaq(index)}\n                            className=\"w-full\"\n                            type=\"button\"\n                          >\n                            Save\n                          </Button>\n                        </AccordionContent>\n                      </AccordionItem>\n                    ))}\n                </Accordion>\n                {bot && bot.faqs.length === 0 && (\n                  <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                    <p className=\"text-muted-foreground\">No FAQs added yet.</p>\n                    <Button\n                      onClick={handleAddFaq}\n                      variant=\"outline\"\n                      className=\"mt-4 gap-1 bg-transparent\"\n                      type=\"button\"\n                    >\n                      <Plus className=\"h-4 w-4\" />\n                      Add Your First FAQ\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n          <TabsContent value=\"products\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n                <div>\n                  <CardTitle>Products & Services</CardTitle>\n                  <CardDescription>\n                    Add products or services that your chatbot can recommend.\n                  </CardDescription>\n                </div>\n                <Button\n                  onClick={() => setIsProductModalOpen(true)}\n                  className=\"gap-1 w-full sm:w-auto\"\n                  type=\"button\"\n                >\n                  <Plus className=\"h-4 w-4\" />\n                  Add Product\n                </Button>\n              </CardHeader>\n              <CardContent>\n                <Accordion type=\"multiple\" className=\"space-y-4\">\n                  {assistant &&\n                    localProducts.map((product, index) => (\n                      <AccordionItem\n                        key={product._id}\n                        value={`product-${index}`}\n                        className=\"border rounded-md p-2\"\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <AccordionTrigger className=\"hover:no-underline flex-1 text-left\">\n                            <div className=\"truncate\">\n                              {product.name || \"New Product\"}\n                              {product.price && ` - ${product.price}`}\n                              {product.stock == 0\n                                ? \"\"\n                                : product.stock && ` (Stock: ${product.stock})`}\n                            </div>\n                          </AccordionTrigger>\n                          <Button\n                            variant=\"ghost\"\n                            size=\"icon\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              handleRemoveProduct(index);\n                            }}\n                            className=\"h-8 w-8 text-muted-foreground hover:text-destructive flex-shrink-0\"\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                            <span className=\"sr-only\">Remove Product</span>\n                          </Button>\n                        </div>\n                        <AccordionContent className=\"space-y-4 pt-2\">\n                          <div className=\"grid gap-4 md:grid-cols-2\">\n                            <div className=\"space-y-2\">\n                              <Label htmlFor={`product-name-${index}`}>\n                                Product Name\n                              </Label>\n                              <Input\n                                id={`product-name-${index}`}\n                                value={product.name}\n                                onChange={(e) => {\n                                  const updated = [...localProducts];\n                                  updated[index].name = e.target.value;\n                                  setLocalProducts(updated);\n                                }}\n                              />\n                            </div>\n                            <div className=\"space-y-2\">\n                              <Label htmlFor={`product-price-${index}`}>\n                                Price\n                              </Label>\n                              <Input\n                                id={`product-price-${index}`}\n                                value={product.price}\n                                onChange={(e) => {\n                                  const updated = [...localProducts];\n                                  updated[index].price = e.target.value;\n                                  setLocalProducts(updated);\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`product-description-${index}`}>\n                              Description\n                            </Label>\n                            <Textarea\n                              id={`product-description-${index}`}\n                              value={product.description}\n                              onChange={(e) => {\n                                const updated = [...localProducts];\n                                updated[index].description = e.target.value;\n                                setLocalProducts(updated);\n                              }}\n                              className=\"min-h-[100px]\"\n                            />\n                          </div>\n                          <div className=\"grid gap-4 md:grid-cols-2\">\n                            <div className=\"flex items-center space-x-2\">\n                              <Switch\n                                id={`product-available-${index}`}\n                                checked={product.available}\n                                onCheckedChange={(checked) => {\n                                  const updated = [...localProducts];\n                                  updated[index].available = checked;\n                                  setLocalProducts(updated);\n                                }}\n                              />\n                              <Label htmlFor={`product-available-${index}`}>\n                                Available\n                              </Label>\n                            </div>\n                            <div className=\"space-y-2\">\n                              <Label htmlFor={`product-stock-${index}`}>\n                                Stock (Optional)\n                              </Label>\n                              <Input\n                                id={`product-stock-${index}`}\n                                type=\"number\"\n                                min=\"0\"\n                                value={product.stock || \"\"}\n                                onChange={(e) => {\n                                  const updated = [...localProducts];\n                                  updated[index].stock = Number.parseInt(\n                                    e.target.value,\n                                    10\n                                  );\n                                  setLocalProducts(updated);\n                                }}\n                              />\n                            </div>\n                          </div>\n                          <Button\n                            onClick={() => {\n                              updateProduct(\n                                product._id,\n                                {\n                                  name: product.name,\n                                  price: product.price,\n                                  description: product.description,\n                                  stock: product.stock,\n                                  available: product.available,\n                                  tags: [],\n                                },\n                                session?.binding_id || \"\"\n                              );\n                              return toast({\n                                title: \"Exito\",\n                                description:\n                                  \"Se Guardaron los cambios del Producto\",\n                              });\n                            }}\n                            className=\"w-full\"\n                            type=\"button\"\n                          >\n                            Guardar Cambios\n                          </Button>\n                        </AccordionContent>\n                      </AccordionItem>\n                    ))}\n                </Accordion>\n                {assistant && products.length === 0 && (\n                  <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                    <p className=\"text-muted-foreground\">\n                      No products added yet.\n                    </p>\n                    <Button\n                      onClick={() => setIsProductModalOpen(true)}\n                      variant=\"outline\"\n                      className=\"mt-4 gap-1\"\n                      type=\"button\"\n                    >\n                      <Plus className=\"h-4 w-4\" />\n                      Add Your First Product\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n          <TabsContent value=\"functions\" className=\"space-y-4\">\n            <Card>\n              <Tabs defaultValue=\"functions-list\">\n                <TabsList className=\"w-full h-auto p-1 grid grid-cols-2 md:grid-cols-2 gap-0.5 bg-muted rounded-lg\">\n                  <TabsTrigger value=\"functions-list\">Funciones</TabsTrigger>\n                  <TabsTrigger value=\"autimatizaciones\">\n                    Automtizaciones\n                  </TabsTrigger>\n                </TabsList>\n                <CardContent>\n                  <TabsContent value=\"functions-list\">\n                    <Card>\n                      <CardHeader className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n                        <div className=\"my-5\">\n                          <CardTitle>Bot Functions & Services</CardTitle>\n                          <CardDescription>\n                            Add custom functions and services that your bot can\n                            execute.\n                          </CardDescription>\n                        </div>\n                        <Button\n                          onClick={() => {\n                            setEditingFunction(undefined); // Asegurarse de que es para añadir\n                            setIsFunctionModalOpen(true);\n                          }}\n                          className=\"gap-1 w-full sm:w-auto\"\n                          type=\"button\"\n                        >\n                          <Plus className=\"h-4 w-4\" />\n                          Add Function\n                        </Button>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-4\">\n                          {functions.length > 0 ? (\n                            <Accordion type=\"multiple\" className=\"space-y-4\">\n                              {functions.map((func, index) => (\n                                <AccordionItem\n                                  key={func._id || index} // Usar _id si está disponible, sino index\n                                  value={`function-${index}`}\n                                  className=\"border rounded-md p-2\"\n                                >\n                                  <div className=\"flex items-center justify-between\">\n                                    <AccordionTrigger className=\"hover:no-underline flex-1 text-left\">\n                                      <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                                        <Badge\n                                          variant={\n                                            func.type === \"api\"\n                                              ? \"default\"\n                                              : \"secondary\"\n                                          }\n                                        >\n                                          {func.type === \"api\"\n                                            ? \"API\"\n                                            : \"Custom\"}\n                                        </Badge>\n                                        <span className=\"truncate\">\n                                          {func.name}\n                                        </span>\n                                      </div>\n                                    </AccordionTrigger>\n                                    <div>\n                                      <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          setEditingFunction(func); // Establecer la función a editar\n                                          setIsFunctionModalOpen(true); // Abrir el modal\n                                        }}\n                                        className=\"h-8 w-8 text-muted-foreground hover:text-green-700 flex-shrink-0\"\n                                        type=\"button\"\n                                      >\n                                        <FilePen className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">\n                                          Edit Function\n                                        </span>\n                                      </Button>\n                                      <Button\n                                        variant=\"ghost\"\n                                        size=\"icon\"\n                                        onClick={(e) => {\n                                          e.stopPropagation();\n                                          handleRemoveFunction(func._id); // Usar _id para eliminar\n                                        }}\n                                        className=\"h-8 w-8 text-muted-foreground hover:text-destructive flex-shrink-0\"\n                                        type=\"button\"\n                                      >\n                                        <Trash2 className=\"h-4 w-4\" />\n                                        <span className=\"sr-only\">\n                                          Remove Function\n                                        </span>\n                                      </Button>\n                                    </div>\n                                  </div>\n                                  <AccordionContent className=\"space-y-4 pt-2\">\n                                    <div className=\"space-y-2\">\n                                      <p className=\"text-sm text-muted-foreground\">\n                                        {func.description}\n                                      </p>\n                                      {func.hasApi && func.api && (\n                                        <div className=\"space-y-2\">\n                                          <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                                            <Badge variant=\"outline\">\n                                              {func.api.method}\n                                            </Badge>\n                                            <code className=\"text-xs bg-muted px-2 py-1 rounded break-all\">\n                                              {func.api.url}\n                                            </code>\n                                          </div>\n                                          {func.api.parameters &&\n                                            func.api.parameters.length > 0 && (\n                                              <div>\n                                                <p className=\"text-sm font-medium mb-1\">\n                                                  Parameters:\n                                                </p>\n                                                <div className=\"flex flex-wrap gap-1\">\n                                                  {func.api.parameters.map(\n                                                    (\n                                                      param: {\n                                                        name: string;\n                                                        type: string;\n                                                        required?: boolean;\n                                                      },\n                                                      paramIndex: number\n                                                    ) => (\n                                                      <Badge\n                                                        key={paramIndex}\n                                                        variant=\"outline\"\n                                                        className=\"text-xs\"\n                                                      >\n                                                        {param.name} (\n                                                        {param.type})\n                                                        {param.required && \"*\"}\n                                                      </Badge>\n                                                    )\n                                                  )}\n                                                </div>\n                                              </div>\n                                            )}\n                                        </div>\n                                      )}\n                                      {func.type === \"custom\" && (\n                                        <div className=\"bg-muted p-3 rounded-md\">\n                                          <p className=\"text-xs font-medium mb-1\">\n                                            Custom Code:\n                                          </p>\n                                          <pre className=\"text-xs overflow-x-auto whitespace-pre-wrap\">\n                                            {func.code?.substring(0, 200)}\n                                            {func.code &&\n                                              func.code.length > 200 &&\n                                              \"...\"}\n                                          </pre>\n                                        </div>\n                                      )}\n                                    </div>\n                                  </AccordionContent>\n                                </AccordionItem>\n                              ))}\n                            </Accordion>\n                          ) : (\n                            <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                              <p className=\"text-muted-foreground\">\n                                No functions added yet.\n                              </p>\n                              <Button\n                                onClick={() => {\n                                  setEditingFunction(undefined); // Asegurarse de que es para añadir\n                                  setIsFunctionModalOpen(true);\n                                }}\n                                variant=\"outline\"\n                                className=\"mt-4 gap-1\"\n                                type=\"button\"\n                              >\n                                <Plus className=\"h-4 w-4\" />\n                                Add Your First Function\n                              </Button>\n                            </div>\n                          )}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </TabsContent>\n                  <TabsContent value=\"autimatizaciones\">\n                    <AdvancedBotTasks />\n                  </TabsContent>\n                </CardContent>\n              </Tabs>\n            </Card>\n          </TabsContent>\n          <TabsContent value=\"chat-customization\" className=\"space-y-4\">\n            <ChatWidgetCustomization\n              language={language as \"en\" | \"es\"}\n              chatSettings={\n                bot && bot.chatSettings\n                  ? {\n                      ...bot.chatSettings,\n                      title: bot.chatSettings.title ?? \"\",\n                      subtitle: bot.chatSettings.subtitle ?? \"\",\n                      primaryColor: bot.chatSettings.primaryColor ?? \"#4f46e5\",\n                      buttonColor: bot.chatSettings.buttonColor ?? \"#4f46e5\",\n                      bubbleColor: bot.chatSettings.bubbleColor ?? \"#f9fafb\",\n                      userBubbleColor:\n                        bot.chatSettings.userBubbleColor ?? \"#000000\",\n                      headerStyle: bot.chatSettings.headerStyle ?? \"gradient\",\n                      showLogo: bot.chatSettings.showLogo ?? true,\n                      position: bot.chatSettings.position ?? \"right\",\n                      initialMessage: bot.chatSettings.initialMessage ?? \"\",\n                      placeholderText: bot.chatSettings.placeholderText ?? \"\",\n                      userTextColor:\n                        bot.chatSettings.userTextColor ?? \"#ffffff\",\n                      botTextColor: bot.chatSettings.botTextColor ?? \"#000000\",\n                    }\n                  : {\n                      title: \"\",\n                      subtitle: \"\",\n                      primaryColor: \"#4f46e5\",\n                      buttonColor: \"#4f46e5\",\n                      bubbleColor: \"#f9fafb\",\n                      userBubbleColor: \"#000000\",\n                      headerStyle: \"gradient\",\n                      logo: \"\",\n                      showLogo: true,\n                      position: \"right\",\n                      initialMessage: \"\",\n                      placeholderText: \"\",\n                      userTextColor: \"#ffffff\",\n                      botTextColor: \"#000000\",\n                    }\n              }\n              onSettingsChange={handleUpdateChatSettings}\n            />\n          </TabsContent>\n          <TabsContent value=\"test-chat\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Test Your Bot</CardTitle>\n                <CardDescription>\n                  Test your bot's responses and functionality in real-time.\n                  Manage multiple chat sessions.\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"p-0\">\n                <div className=\"flex h-[600px]\">\n                  {/* Sidebar */}\n                  <div\n                    className={cn(\n                      \"border-r bg-gray-50 dark:bg-gray-900 transition-all duration-300\",\n                      sidebarOpen ? \"w-80\" : \"w-0 overflow-hidden\"\n                    )}\n                  >\n                    <div className=\"p-4 border-b\">\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <h3 className=\"font-semibold text-sm\">Chat Sessions</h3>\n                        <Button\n                          onClick={() => setSidebarOpen(false)}\n                          size=\"sm\"\n                          variant=\"ghost\"\n                          className=\"lg:hidden\"\n                        >\n                          <X className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                      <Button\n                        onClick={async () => {\n                          setSelectedChatId(\"1\");\n                          setTemporalMessage(\"\");\n                          fetchChat(\"1\");\n                        }}\n                        size=\"sm\"\n                        className=\"w-full bg-transparent\"\n                        variant=\"outline\"\n                      >\n                        <Plus className=\"h-4 w-4 mr-2\" />\n                        New Chat\n                      </Button>\n                    </div>\n                    <div className=\"overflow-y-auto h-[calc(100%-80px)]\">\n                      {chats.map((chat, index) => {\n                        return (\n                          <button\n                            key={chat.id}\n                            onClick={() => {\n                              fetchChat(chat.id);\n                            }}\n                            className={cn(\n                              \"w-full text-left px-4 py-3 transition-colors border-b\",\n                              selectedChatId === chat.id\n                                ? \"bg-slate-100 font-semibold\"\n                                : \"bg-white hover:bg-slate-100\"\n                            )}\n                          >\n                            <div className=\"flex flex-col w-full\">\n                              <p className=\"text-sm text-gray-900 truncate\">\n                                🗨️ Chat {index + 1}\n                              </p>\n                              <span className=\"text-xs text-gray-500 truncate\">\n                                {chat.lastActivity || \"No recent activity\"}\n                              </span>\n                            </div>\n                          </button>\n                        );\n                      })}\n                    </div>\n                  </div>\n                  {/* Main Chat Area */}\n                  <div className=\"flex-1 flex flex-col\">\n                    {/* Mobile sidebar toggle */}\n                    {!sidebarOpen && (\n                      <div className=\"p-2 border-b lg:hidden\">\n                        <Button\n                          onClick={() => setSidebarOpen(true)}\n                          size=\"sm\"\n                          variant=\"ghost\"\n                        >\n                          <Menu className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    )}\n                    {/* Chat Header */}\n                    <div\n                      className=\"p-4 border-b\"\n                      style={{\n                        background:\n                          bot && bot.chatSettings?.headerStyle === \"gradient\"\n                            ? `linear-gradient(to right, ${\n                                bot.chatSettings.primaryColor\n                              }, ${adjustColor(\n                                bot.chatSettings.primaryColor || \"#4f46e5\",\n                                -30\n                              )})`\n                            : (bot && bot.chatSettings?.primaryColor) ||\n                              \"#4f46e5\",\n                      }}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        {bot && bot.chatSettings?.showLogo && (\n                          <div className=\"bg-white/20 rounded-full p-2\">\n                            <MessageSquare className=\"h-5 w-5 text-white\" />\n                          </div>\n                        )}\n                        <div>\n                          <h3 className=\"font-medium text-white\">\n                            {chatTiitle}\n                          </h3>\n                          <p className=\"text-sm text-gray-200\">\n                            {(bot && bot.chatSettings?.subtitle) ||\n                              \"Testing Mode\"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Chat Messages */}\n                    <div className=\"flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 dark:bg-gray-950\">\n                      <div className=\" flex justify-start\">\n                        <div className=\"mr-2 flex-shrink-0\">\n                          <div\n                            className=\"rounded-full h-8 w-8 flex items-center justify-center\"\n                            style={{\n                              background:\n                                (bot && bot.chatSettings?.primaryColor) ||\n                                \"#4f46e5\",\n                            }}\n                          >\n                            <MessageSquare className=\"h-4 w-4 text-white\" />\n                          </div>\n                        </div>\n                        <div\n                          className={`max-w-[80%] sm:max-w-[70%] p-3 rounded-lg`}\n                          style={{\n                            background:\n                              (bot && bot.chatSettings?.bubbleColor) ||\n                              \"#f9fafb\",\n                            color: \"#000\",\n                          }}\n                        >\n                          <p className=\"text-sm\">{assistant.welcome_message}</p>\n                        </div>\n                      </div>\n                      {currentChat?.messages.map((message, index) => {\n                        return (\n                          <div\n                            key={index}\n                            className={`flex ${\n                              message.role === \"user\"\n                                ? \"justify-end\"\n                                : \"justify-start\"\n                            }`}\n                          >\n                            {message.role == \"assistant\" && (\n                              <div className=\"mr-2 flex-shrink-0\">\n                                <div\n                                  className=\"rounded-full h-8 w-8 flex items-center justify-center\"\n                                  style={{\n                                    background:\n                                      (bot && bot.chatSettings?.primaryColor) ||\n                                      \"#4f46e5\",\n                                  }}\n                                >\n                                  <MessageSquare className=\"h-4 w-4 text-white\" />\n                                </div>\n                              </div>\n                            )}\n                            <div\n                              className={`max-w-[80%] sm:max-w-[70%] p-3 rounded-lg`}\n                              style={{\n                                background:\n                                  message.role === \"user\"\n                                    ? (bot &&\n                                        bot.chatSettings?.userBubbleColor) ||\n                                      \"#000000\"\n                                    : (bot && bot.chatSettings?.bubbleColor) ||\n                                      \"#f9fafb\",\n                                color:\n                                  message.role === \"user\" ? \"#fff\" : \"#000\",\n                              }}\n                            >\n                              <p className=\"text-sm\">{message.content}</p>\n                              <p className=\"text-xs mt-1 text-muted-foreground italic\">\n                                {message.createdAt &&\n                                  new Date(message.createdAt).toLocaleString(\n                                    \"es-EC\",\n                                    {\n                                      weekday: \"short\",\n                                      hour: \"2-digit\",\n                                      minute: \"2-digit\",\n                                      day: \"2-digit\",\n                                      month: \"short\",\n                                    }\n                                  )}\n                              </p>\n                            </div>\n                            {message.role === \"user\" && (\n                              <div className=\"ml-2 flex-shrink-0\">\n                                <div className=\"bg-gray-300 dark:bg-gray-700 rounded-full h-8 w-8 flex items-center justify-center\">\n                                  <span className=\"text-xs font-medium text-gray-800 dark:text-white\">\n                                    You\n                                  </span>\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        );\n                      })}\n                      {/* ✅ MENSAJE TEMPORAL MEJORADO */}\n                      {temporalMessage && (\n                        <div className=\"flex justify-end\">\n                          <div\n                            className=\"max-w-[80%] sm:max-w-[70%] p-3 rounded-lg opacity-70\"\n                            style={{\n                              background:\n                                (bot && bot.chatSettings?.userBubbleColor) ||\n                                \"#000000\",\n                              color: \"#fff\",\n                            }}\n                          >\n                            <p className=\"text-sm\">{temporalMessage}</p>\n                            <p className=\"text-xs mt-1 opacity-60\">\n                              Enviando...\n                            </p>\n                          </div>\n                          <div className=\"ml-2 flex-shrink-0\">\n                            <div className=\"bg-gray-300 dark:bg-gray-700 rounded-full h-8 w-8 flex items-center justify-center\">\n                              <span className=\"text-xs font-medium text-gray-800 dark:text-white\">\n                                You\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                    {/* Chat Input */}\n                    <div className=\"p-4 border-t bg-background\">\n                      <div className=\"flex gap-2\">\n                        <Input\n                          value={testInput}\n                          onChange={(e) => setTestInput(e.target.value)}\n                          placeholder={\n                            (bot && bot.chatSettings?.placeholderText) ||\n                            \"Type your message...\"\n                          }\n                          className=\"flex-1\"\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              e.preventDefault();\n                              handleSendTestMessage();\n                            }\n                          }}\n                        />\n                        <Button\n                          type=\"button\"\n                          onClick={handleSendTestMessage}\n                          disabled={!testInput.trim()}\n                          style={{\n                            background:\n                              (bot && bot.chatSettings?.buttonColor) ||\n                              \"#4f46e5\",\n                          }}\n                          className=\"text-white\"\n                        >\n                          <Send className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n      <ProductModal\n        open={isProductModalOpen}\n        onOpenChange={setIsProductModalOpen}\n        onAddProduct={handleAddProduct}\n      />\n      <FunctionModal\n        open={isFunctionModalOpen}\n        onOpenChange={setIsFunctionModalOpen}\n        onAddFunction={handleAddFunction}\n        editFunction={editingFunction}\n        onEditFunction={handleEditFunction}\n        language={language}\n      />\n    </DashboardLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}