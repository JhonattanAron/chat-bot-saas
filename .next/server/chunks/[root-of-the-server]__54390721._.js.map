{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/app/api/products-tasks/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\n\r\nconst NEST_API_URL = process.env.NEST_API_URL || \"http://localhost:8080\";\r\n\r\n// GET /api/products-tasks?user_id=xxx  --> findAll\r\nexport async function GET(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const user_id = searchParams.get(\"user_id\");\r\n  const assistant_id = searchParams.get(\"assistant_id\");\r\n  const id = searchParams.get(\"id\");\r\n\r\n  try {\r\n    // Si hay id, busca uno solo (findOne)\r\n    if (id) {\r\n      const response = await fetch(`${NEST_API_URL}/products/${id}`);\r\n      const data = await response.json();\r\n      return NextResponse.json(data, { status: response.status });\r\n    }\r\n\r\n    // Si no hay id, busca todos (findAll)\r\n    if (!user_id || !assistant_id) {\r\n      return NextResponse.json(\r\n        { error: \"Missing user_id query parameter\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n    const response = await fetch(\r\n      `${NEST_API_URL}/products?user_id=${encodeURIComponent(\r\n        user_id\r\n      )}&assistant_id=${encodeURIComponent(assistant_id)}`\r\n    );\r\n    const data = await response.json();\r\n    return NextResponse.json(data, { status: response.status });\r\n  } catch {\r\n    return NextResponse.json(\r\n      { error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// PUT /api/products-tasks?id=xxx\r\nexport async function PUT(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const id = searchParams.get(\"id\");\r\n  const user_id = searchParams.get(\"user_id\");\r\n  if (!id || !user_id) {\r\n    return NextResponse.json(\r\n      { error: \"Missing id query parameter\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  try {\r\n    const body = await req.json();\r\n    const response = await fetch(\r\n      `${NEST_API_URL}/products/${id}?user_id=${encodeURIComponent(user_id)}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return NextResponse.json(data, { status: response.status });\r\n  } catch {\r\n    return NextResponse.json(\r\n      { error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE /api/products-tasks?id=xxx\r\nexport async function DELETE(req: NextRequest) {\r\n  const { searchParams } = new URL(req.url);\r\n  const id = searchParams.get(\"id\");\r\n  if (!id) {\r\n    return NextResponse.json(\r\n      { error: \"Missing id query parameter\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n  try {\r\n    const response = await fetch(`${NEST_API_URL}/products/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    const data = await response.json();\r\n    return NextResponse.json(data, { status: response.status });\r\n  } catch {\r\n    return NextResponse.json(\r\n      { error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;;AAEA,MAAM,eAAe,QAAQ,GAAG,CAAC,YAAY,IAAI;AAG1C,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,MAAM,eAAe,aAAa,GAAG,CAAC;IACtC,MAAM,KAAK,aAAa,GAAG,CAAC;IAE5B,IAAI;QACF,sCAAsC;QACtC,IAAI,IAAI;YACN,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,EAAE,IAAI;YAC7D,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;gBAAE,QAAQ,SAAS,MAAM;YAAC;QAC3D;QAEA,sCAAsC;QACtC,IAAI,CAAC,WAAW,CAAC,cAAc;YAC7B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAkC,GAC3C;gBAAE,QAAQ;YAAI;QAElB;QACA,MAAM,WAAW,MAAM,MACrB,GAAG,aAAa,kBAAkB,EAAE,mBAClC,SACA,cAAc,EAAE,mBAAmB,eAAe;QAEtD,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ,SAAS,MAAM;QAAC;IAC3D,EAAE,OAAM;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,IAAI,GAAgB;IACxC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,KAAK,aAAa,GAAG,CAAC;IAC5B,MAAM,UAAU,aAAa,GAAG,CAAC;IACjC,IAAI,CAAC,MAAM,CAAC,SAAS;QACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;IACA,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,WAAW,MAAM,MACrB,GAAG,aAAa,UAAU,EAAE,GAAG,SAAS,EAAE,mBAAmB,UAAU,EACvE;YACE,QAAQ;YACR,SAAS;gBAAE,gBAAgB;YAAmB;YAC9C,MAAM,KAAK,SAAS,CAAC;QACvB;QAEF,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ,SAAS,MAAM;QAAC;IAC3D,EAAE,OAAM;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,OAAO,GAAgB;IAC3C,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;IACxC,MAAM,KAAK,aAAa,GAAG,CAAC;IAC5B,IAAI,CAAC,IAAI;QACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;IACA,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,UAAU,EAAE,IAAI,EAAE;YAC7D,QAAQ;QACV;QACA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ,SAAS,MAAM;QAAC;IAC3D,EAAE,OAAM;QACN,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}