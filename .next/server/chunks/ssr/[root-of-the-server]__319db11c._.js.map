{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,kKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,kKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,kKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,kKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;kCAET,8OAAC,kKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;oBAE3B;;;;;;;;;;;;;AAIP,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,kKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/mode-toggle.tsx"],"sourcesContent":["\"use client\"\nimport { Moon, Sun } from \"lucide-react\"\nimport { useTheme } from \"next-themes\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\n\nexport function ModeToggle() {\n  const { setTheme } = useTheme()\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onClick={() => setTheme(\"light\")}>Light</DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"dark\")}>Dark</DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"system\")}>System</DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAEA;AACA;AALA;;;;;;AAOO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAE5B,qBACE,8OAAC,qIAAA,CAAA,eAAY;;0BACX,8OAAC,qIAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,8OAAC,2HAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,MAAK;;sCAC7B,8OAAC,gMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;sCACf,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAG9B,8OAAC,qIAAA,CAAA,sBAAmB;gBAAC,OAAM;;kCACzB,8OAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAU;;;;;;kCACpD,8OAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAS;;;;;;kCACnD,8OAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAW;;;;;;;;;;;;;;;;;;AAI7D","debugId":null}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uaACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/token-counter-compact.tsx"],"sourcesContent":["\"use client\"\n\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { Zap } from \"lucide-react\"\n\ninterface TokenCounterCompactProps {\n  inputTokens: number\n  outputTokens: number\n  maxTokens: number\n}\n\nexport function TokenCounterCompact({ inputTokens, outputTokens, maxTokens }: TokenCounterCompactProps) {\n  const totalTokens = inputTokens + outputTokens\n  const percentage = (totalTokens / maxTokens) * 100\n\n  const getVariant = () => {\n    if (percentage >= 90) return \"destructive\"\n    if (percentage >= 70) return \"outline\"\n    return \"secondary\"\n  }\n\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <div className=\"flex items-center gap-1 cursor-help\">\n            <Zap className=\"h-4 w-4 text-primary\" />\n            <Badge variant={getVariant()} className=\"text-xs px-2 py-0 h-5\">\n              {Math.round(percentage)}%\n            </Badge>\n          </div>\n        </TooltipTrigger>\n        <TooltipContent side=\"bottom\" className=\"flex flex-col gap-1 p-2\">\n          <div className=\"text-xs font-medium\">Token Usage</div>\n          <div className=\"grid grid-cols-2 gap-x-3 gap-y-1 text-xs\">\n            <span className=\"text-muted-foreground\">Input:</span>\n            <span className=\"text-right\">{inputTokens.toLocaleString()}</span>\n            <span className=\"text-muted-foreground\">Output:</span>\n            <span className=\"text-right\">{outputTokens.toLocaleString()}</span>\n            <span className=\"text-muted-foreground\">Total:</span>\n            <span className=\"text-right\">{totalTokens.toLocaleString()}</span>\n            <span className=\"text-muted-foreground\">Limit:</span>\n            <span className=\"text-right\">{maxTokens.toLocaleString()}</span>\n          </div>\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYO,SAAS,oBAAoB,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAA4B;IACpG,MAAM,cAAc,cAAc;IAClC,MAAM,aAAa,AAAC,cAAc,YAAa;IAE/C,MAAM,aAAa;QACjB,IAAI,cAAc,IAAI,OAAO;QAC7B,IAAI,cAAc,IAAI,OAAO;QAC7B,OAAO;IACT;IAEA,qBACE,8OAAC,4HAAA,CAAA,kBAAe;kBACd,cAAA,8OAAC,4HAAA,CAAA,UAAO;;8BACN,8OAAC,4HAAA,CAAA,iBAAc;oBAAC,OAAO;8BACrB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;0CACf,8OAAC,0HAAA,CAAA,QAAK;gCAAC,SAAS;gCAAc,WAAU;;oCACrC,KAAK,KAAK,CAAC;oCAAY;;;;;;;;;;;;;;;;;;8BAI9B,8OAAC,4HAAA,CAAA,iBAAc;oBAAC,MAAK;oBAAS,WAAU;;sCACtC,8OAAC;4BAAI,WAAU;sCAAsB;;;;;;sCACrC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,YAAY,cAAc;;;;;;8CACxD,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,aAAa,cAAc;;;;;;8CACzD,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,YAAY,cAAc;;;;;;8CACxD,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,UAAU,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlE","debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/dashboard-layout.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\"use client\";\n\nimport type React from \"react\";\nimport { Globe, Check } from \"lucide-react\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Bot,\n  LayoutDashboard,\n  Settings,\n  HelpCircle,\n  BarChart3,\n  Bell,\n  LogOut,\n  Menu,\n  X,\n  Search,\n} from \"lucide-react\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { Input } from \"@/components/ui/input\";\nimport { ModeToggle } from \"@/components/mode-toggle\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TokenCounterCompact } from \"@/components/token-counter-compact\";\nimport { signOut, useSession } from \"next-auth/react\";\nimport Image from \"next/image\";\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function DashboardLayout({ children }: DashboardLayoutProps) {\n  const { data: session } = useSession();\n  const pathname = usePathname();\n  const router = useRouter();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [hasNotifications, setHasNotifications] = useState(true);\n  const { t, language, setLanguage } = useLanguage();\n\n  const [tokenUsage, setTokenUsage] = useState({\n    input: 1250,\n    output: 890,\n    maxTokens: 10000,\n  });\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const langParam = urlParams.get(\"lang\");\n\n    if (langParam === \"en\" || langParam === \"es\") {\n      setLanguage(langParam);\n    } else if (language !== \"es\") {\n      setLanguage(\"es\");\n    }\n  }, []);\n\n  const changeLanguageWithUrl = (lang: \"en\" | \"es\") => {\n    setLanguage(lang);\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(\"lang\", lang);\n    const newUrl = `${window.location.pathname}?${urlParams.toString()}`;\n    window.history.pushState({}, \"\", newUrl);\n  };\n  console.log(session);\n\n  const routes = [\n    {\n      href: \"/dashboard\",\n      label: t(\"dashboard\"),\n      icon: LayoutDashboard,\n      active: pathname === \"/dashboard\",\n    },\n    {\n      href: \"/dashboard/bots\",\n      label: t(\"myBots\"),\n      icon: Bot,\n      active:\n        pathname === \"/dashboard/bots\" ||\n        pathname.startsWith(\"/dashboard/bots/\"),\n    },\n    {\n      href: \"/dashboard/analytics\",\n      label: t(\"analytics\"),\n      icon: BarChart3,\n      active: pathname === \"/dashboard/analytics\",\n    },\n    {\n      href: \"/dashboard/settings\",\n      label: t(\"settings\"),\n      icon: Settings,\n      active: pathname === \"/dashboard/settings\",\n    },\n    {\n      href: \"/dashboard/help\",\n      label: t(\"helpSupport\"),\n      icon: HelpCircle,\n      active: pathname === \"/dashboard/help\",\n    },\n  ];\n\n  const notifications = [\n    {\n      id: 1,\n      title: \"Factura pendiente\",\n      description:\n        \"Tienes una factura pendiente de $7.00 para el plan Profesional\",\n      date: \"Hace 2 horas\",\n      type: \"billing\",\n    },\n    {\n      id: 2,\n      title: \"Límite de preguntas\",\n      description: \"Has alcanzado el 80% de tu límite mensual de preguntas\",\n      date: \"Hace 1 día\",\n      type: \"warning\",\n    },\n    {\n      id: 3,\n      title: \"Soporte técnico\",\n      description:\n        \"Tu consulta #4582 ha sido respondida por el equipo de soporte\",\n      date: \"Hace 3 días\",\n      type: \"support\",\n    },\n  ];\n\n  return (\n    <div className=\"flex min-h-screen flex-col bg-gradient-to-br from-background via-background to-muted/20\">\n      <header className=\"sticky top-0 z-30 flex h-16 items-center gap-4 glass-effect border-b border-border/50 px-4 md:px-6\">\n        <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n          <SheetTrigger asChild className=\"md:hidden\">\n            <Button variant=\"outline\" size=\"icon\" className=\"mr-2 glass-effect\">\n              <Menu className=\"h-5 w-5\" />\n              <span className=\"sr-only\">Toggle menu</span>\n            </Button>\n          </SheetTrigger>\n          <SheetContent\n            side=\"left\"\n            className=\"w-72 sm:max-w-xs glass-effect text-white\"\n          >\n            <SheetHeader>\n              <SheetTitle className=\"text-white\">Menú</SheetTitle>\n            </SheetHeader>\n            <div className=\"flex h-full flex-col\">\n              <div className=\"flex items-center gap-2 border-b border-border/50 p-4\">\n                <div className=\"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-primary to-primary/80\">\n                  <Bot className=\"h-5 w-5 text-primary-foreground\" />\n                </div>\n                <span className=\"text-lg text-white font-bold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\">\n                  ChatBot Builder\n                </span>\n              </div>\n              <div className=\"flex-1 overflow-auto py-2\">\n                <nav className=\"grid gap-1 px-2\">\n                  {routes.map((route) => (\n                    <Link\n                      key={route.href}\n                      href={route.href}\n                      onClick={() => setIsMobileMenuOpen(false)}\n                      className={`flex items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium transition-all duration-200 ${\n                        route.active\n                          ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground shadow-lg neon-glow\"\n                          : \"hover:bg-gradient-to-r hover:from-muted/50 hover:to-muted/20\"\n                      }`}\n                    >\n                      <route.icon className=\"h-5 w-5\" />\n                      {route.label}\n                    </Link>\n                  ))}\n                </nav>\n              </div>\n              <div className=\"border-t border-border/50 p-4\">\n                <div className=\"flex items-center gap-3 flex-wrap\">\n                  {session?.user?.image && (\n                    <Image\n                      alt=\"profil\"\n                      src={session?.user?.image}\n                      className=\"mx-auto object-cover rounded-full w-11 h-11\"\n                      width={20}\n                      height={20}\n                    />\n                  )}\n                  <div className=\"flex flex-col min-w-0 flex-1\">\n                    <span className=\"text-sm font-medium truncate\">\n                      {session?.user?.name}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground truncate\">\n                      {session?.user?.email}\n                    </span>\n                  </div>\n                  <Button\n                    onClick={() => signOut()}\n                    size=\"icon\"\n                    className=\"ml-2 shrink-0 bg-primary\"\n                  >\n                    <LogOut className=\"h-5 w-5 text-white\" />\n                    <span className=\"sr-only\">Log out</span>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </SheetContent>\n        </Sheet>\n        <Link href=\"/dashboard\" className=\"flex items-center gap-2 font-bold\">\n          <div className=\"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-primary to-primary/80\">\n            <Bot className=\"h-5 w-5 text-primary-foreground\" />\n          </div>\n          <span className=\"hidden md:inline-block bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\">\n            ChatBot Builder\n          </span>\n        </Link>\n        <div className=\"relative ml-auto flex-1 md:grow-0 md:basis-72\">\n          <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n          <Input\n            type=\"search\"\n            placeholder={t(\"search\")}\n            className=\"w-full rounded-lg glass-effect border-border/50 pl-8 md:w-72 focus:ring-2 focus:ring-primary/20\"\n          />\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <TokenCounterCompact\n            inputTokens={tokenUsage.input}\n            outputTokens={tokenUsage.output}\n            maxTokens={tokenUsage.maxTokens}\n          />\n          <ModeToggle />\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"relative glass-effect\"\n              >\n                <Globe className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Cambiar idioma</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"glass-effect\">\n              <DropdownMenuItem\n                onClick={() => changeLanguageWithUrl(\"es\")}\n                className=\"flex items-center justify-between\"\n              >\n                <span className=\"flex items-center gap-2\">\n                  <span>🇪🇸</span>\n                  <span>Español</span>\n                </span>\n                {language === \"es\" && <Check className=\"h-4 w-4\" />}\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                onClick={() => changeLanguageWithUrl(\"en\")}\n                className=\"flex items-center justify-between\"\n              >\n                <span className=\"flex items-center gap-2\">\n                  <span>🇺🇸</span>\n                  <span>English</span>\n                </span>\n                {language === \"en\" && <Check className=\"h-4 w-4\" />}\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"relative glass-effect\"\n              >\n                <Bell className=\"h-5 w-5\" />\n                {hasNotifications && (\n                  <span className=\"absolute right-1 top-1 flex h-2 w-2 rounded-full bg-gradient-to-r from-primary to-primary/80\" />\n                )}\n                <span className=\"sr-only\">Notificaciones</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"w-80 glass-effect\">\n              <div className=\"flex items-center justify-between p-2 border-b border-border/50\">\n                <h4 className=\"font-medium\">Notificaciones</h4>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"text-xs h-auto py-1\"\n                >\n                  Marcar todas como leídas\n                </Button>\n              </div>\n              {notifications.map((notification) => (\n                <DropdownMenuItem key={notification.id} className=\"p-0\">\n                  <div className=\"flex flex-col w-full p-3 cursor-pointer hover:bg-muted/50 transition-colors\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"font-medium\">{notification.title}</span>\n                      <Badge\n                        variant={\n                          notification.type === \"billing\"\n                            ? \"default\"\n                            : notification.type === \"warning\"\n                            ? \"destructive\"\n                            : \"outline\"\n                        }\n                        className=\"text-xs\"\n                      >\n                        {notification.type === \"billing\"\n                          ? \"Facturación\"\n                          : notification.type === \"warning\"\n                          ? \"Advertencia\"\n                          : \"Soporte\"}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mt-1\">\n                      {notification.description}\n                    </p>\n                    <span className=\"text-xs text-muted-foreground mt-2\">\n                      {notification.date}\n                    </span>\n                  </div>\n                </DropdownMenuItem>\n              ))}\n              <div className=\"p-2 border-t border-border/50\">\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                  Ver todas las notificaciones\n                </Button>\n              </div>\n            </DropdownMenuContent>\n          </DropdownMenu>\n\n          {session?.user?.image && (\n            <Image\n              alt=\"profil\"\n              src={session?.user?.image}\n              className=\"mx-auto object-cover rounded-full w-11 h-11\"\n              width={20}\n              height={20}\n            />\n          )}\n        </div>\n      </header>\n      <div className=\"flex flex-1\">\n        {/* Navegador lateral mejorado */}\n        <aside className=\"hidden w-64 border-r border-border/50 bg-background/80 md:block\">\n          <div className=\"flex h-full flex-col\">\n            <div className=\"flex-1 overflow-auto py-4\">\n              <div className=\"px-3 pb-2\">\n                <h2 className=\"mb-2 px-4 text-lg font-semibold tracking-tight\">\n                  Navegación\n                </h2>\n                <div className=\"space-y-1\">\n                  {routes.map((route) => (\n                    <Link\n                      key={route.href}\n                      href={route.href}\n                      className={`flex items-center gap-3 rounded-lg px-4 py-3 text-sm font-medium transition-all duration-200 ${\n                        route.active\n                          ? \"bg-primary text-primary-foreground shadow-md\"\n                          : \"text-foreground hover:bg-muted\"\n                      }`}\n                    >\n                      <route.icon\n                        className={`h-5 w-5 ${\n                          route.active\n                            ? \"text-primary-foreground\"\n                            : \"text-muted-foreground\"\n                        }`}\n                      />\n                      {route.label}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"px-3 py-2\">\n                <h2 className=\"mb-2 px-4 text-lg font-semibold tracking-tight\">\n                  Acciones rápidas\n                </h2>\n                <div className=\"space-y-1\">\n                  <Button\n                    variant=\"ghost\"\n                    className=\"w-full justify-start px-4 py-2 h-auto\"\n                  >\n                    <Bot className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n                    Crear nuevo bot\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    className=\"w-full justify-start px-4 py-2 h-auto\"\n                  >\n                    <BarChart3 className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n                    Ver estadísticas\n                  </Button>\n                </div>\n              </div>\n            </div>\n            <div className=\"border-t p-4\">\n              <div className=\"rounded-lg bg-muted p-3\">\n                <div className=\"flex items-center gap-3 flex-wrap\">\n                  {session?.user?.image && (\n                    <Image\n                      alt=\"profil\"\n                      src={session?.user?.image}\n                      className=\"mx-auto object-cover rounded-full w-11 h-11\"\n                      width={20}\n                      height={20}\n                    />\n                  )}\n                  <div className=\"flex flex-col min-w-0 flex-1\">\n                    <span className=\"text-sm font-medium truncate\">\n                      {session?.user?.name}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground truncate\">\n                      {session?.user?.email}\n                    </span>\n                  </div>\n                  <Button\n                    onClick={() => signOut()}\n                    size=\"icon\"\n                    className=\"ml-2 shrink-0 bg-primary\"\n                  >\n                    <LogOut className=\"h-5 w-5 text-white\" />\n                    <span className=\"sr-only\">Log out</span>\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n        <main className=\"flex-1 overflow-auto max-h-[90vh]\">{children}</main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1808, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1889, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1921, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1949, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2038, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,qKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,8OAAC,qKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kJACA;YAED,GAAG,KAAK;;gBAER;8BACD,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,8OAAC;YAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;AAGjD,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2118, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2310, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2442, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2506, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/token-counter.tsx"],"sourcesContent":["\"use client\"\n\nimport { useLanguage } from \"@/contexts/language-context\"\n\ninterface TokenCounterProps {\n  count: number\n  limit?: number\n}\n\nexport function TokenCounter({ count, limit }: TokenCounterProps) {\n  const { language } = useLanguage()\n\n  // Determinar el color basado en el porcentaje del límite\n  const getColor = () => {\n    if (!limit) return \"text-muted-foreground\"\n\n    const percentage = (count / limit) * 100\n    if (percentage < 75) return \"text-muted-foreground\"\n    if (percentage < 90) return \"text-amber-500\"\n    return \"text-red-500\"\n  }\n\n  return (\n    <div className={`text-xs ${getColor()}`}>\n      {limit ? (\n        <span>\n          {count} / {limit} {language === \"en\" ? \"tokens\" : \"tokens\"}\n        </span>\n      ) : (\n        <span>\n          {count} {language === \"en\" ? \"tokens\" : \"tokens\"}\n        </span>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AASO,SAAS,aAAa,EAAE,KAAK,EAAE,KAAK,EAAqB;IAC9D,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD;IAE/B,yDAAyD;IACzD,MAAM,WAAW;QACf,IAAI,CAAC,OAAO,OAAO;QAEnB,MAAM,aAAa,AAAC,QAAQ,QAAS;QACrC,IAAI,aAAa,IAAI,OAAO;QAC5B,IAAI,aAAa,IAAI,OAAO;QAC5B,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,QAAQ,EAAE,YAAY;kBACpC,sBACC,8OAAC;;gBACE;gBAAM;gBAAI;gBAAM;gBAAE,aAAa,OAAO,WAAW;;;;;;iCAGpD,8OAAC;;gBACE;gBAAM;gBAAE,aAAa,OAAO,WAAW;;;;;;;;;;;;AAKlD","debugId":null}},
    {"offset": {"line": 2561, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2629, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/product-modal.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\"\nimport { InfoIcon, AlertCircle, FileJson, Database, HelpCircle, Search } from \"lucide-react\"\nimport { useLanguage } from \"@/contexts/language-context\"\nimport { TokenCounter } from \"@/components/token-counter\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\n\ninterface ProductModalProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onAddProduct: (product: any, method: \"manual\" | \"api\") => void\n}\n\nexport function ProductModal({ open, onOpenChange, onAddProduct }: ProductModalProps) {\n  const { t, language } = useLanguage()\n  const [method, setMethod] = useState<\"manual\" | \"api\">(\"manual\")\n  const [product, setProduct] = useState({\n    name: \"\",\n    price: \"\",\n    description: \"\",\n    available: true,\n    stock: \"\",\n    hasStock: false,\n  })\n  const [apiUrl, setApiUrl] = useState(\"\")\n  const [apiKey, setApiKey] = useState(\"\")\n  const [jsonExample, setJsonExample] = useState(`{\n  \"products\": [\n    {\n      \"name\": \"Producto 1\",\n      \"price\": \"$99.99\",\n      \"description\": \"Descripción del producto 1\",\n      \"available\": true,\n      \"stock\": 25\n    },\n    {\n      \"name\": \"Producto 2\",\n      \"price\": \"$49.99\",\n      \"description\": \"Descripción del producto 2\",\n      \"available\": false,\n      \"stock\": 0\n    }\n  ]\n}`)\n\n  // Nuevos estados para el mapeo de campos\n  const [nameField, setNameField] = useState(\"name\")\n  const [priceField, setPriceField] = useState(\"price\")\n  const [descriptionField, setDescriptionField] = useState(\"description\")\n  const [enableDetails, setEnableDetails] = useState(false)\n  const [detailsField, setDetailsField] = useState(\"details\")\n  const [enableStock, setEnableStock] = useState(false)\n  const [stockField, setStockField] = useState(\"stock\")\n  const [productsArrayFormat, setProductsArrayFormat] = useState(true)\n  const [productsArrayName, setProductsArrayName] = useState(\"products\")\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (method === \"manual\") {\n      const productToAdd = {\n        ...product,\n        stock: product.hasStock ? product.stock : undefined,\n      }\n      onAddProduct(productToAdd, \"manual\")\n      setProduct({\n        name: \"\",\n        price: \"\",\n        description: \"\",\n        available: true,\n        stock: \"\",\n        hasStock: false,\n      })\n    } else {\n      // En un caso real, aquí se haría la llamada a la API\n      onAddProduct(\n        {\n          apiUrl,\n          apiKey,\n          fieldMapping: {\n            name: nameField,\n            price: priceField,\n            description: descriptionField,\n            details: enableDetails ? detailsField : null,\n            stock: enableStock ? stockField : null,\n          },\n          format: {\n            isArray: productsArrayFormat,\n            arrayName: productsArrayFormat ? productsArrayName : null,\n          },\n        },\n        \"api\",\n      )\n    }\n    onOpenChange(false)\n  }\n\n  const handleMethodChange = (value: string) => {\n    setMethod(value as \"manual\" | \"api\")\n  }\n\n  // Calcular tokens aproximados para la descripción del producto\n  const descriptionTokens = product.description.length > 0 ? Math.ceil(product.description.length / 4) : 0\n\n  // Actualizar el ejemplo de JSON basado en las configuraciones\n  const updateJsonExample = () => {\n    const productExample = {\n      [nameField]: \"Producto Ejemplo\",\n      [priceField]: \"$99.99\",\n      [descriptionField]: \"Descripción del producto ejemplo\",\n    }\n\n    if (enableDetails) {\n      productExample[detailsField] = [\"Característica 1\", \"Característica 2\", \"Característica 3\"]\n    }\n\n    if (enableStock) {\n      productExample[stockField] = 25\n    }\n\n    if (productsArrayFormat) {\n      return JSON.stringify(\n        {\n          [productsArrayName]: [\n            productExample,\n            { ...productExample, [nameField]: \"Otro Producto\", ...(enableStock ? { [stockField]: 0 } : {}) },\n          ],\n        },\n        null,\n        2,\n      )\n    } else {\n      return JSON.stringify(\n        [\n          productExample,\n          { ...productExample, [nameField]: \"Otro Producto\", ...(enableStock ? { [stockField]: 0 } : {}) },\n        ],\n        null,\n        2,\n      )\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>{t(\"addProduct\")}</DialogTitle>\n          <DialogDescription>\n            {language === \"en\"\n              ? \"Add a product or service that your chatbot can recommend to users.\"\n              : \"Añade un producto o servicio que tu chatbot pueda recomendar a los usuarios.\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Tabs defaultValue=\"manual\" className=\"w-full\" onValueChange={handleMethodChange}>\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"manual\" className=\"flex items-center gap-2\">\n              <FileJson className=\"h-4 w-4\" />\n              {language === \"en\" ? \"Manual Entry\" : \"Entrada Manual\"}\n            </TabsTrigger>\n            <TabsTrigger value=\"api\" className=\"flex items-center gap-2\">\n              <Database className=\"h-4 w-4\" />\n              {language === \"en\" ? \"API Integration\" : \"Integración API\"}\n            </TabsTrigger>\n            <TabsTrigger value=\"search\" className=\"flex items-center gap-2\">\n              <Search className=\"h-4 w-4\" />\n              {language === \"en\" ? \"Search Integration\" : \"Integración de Búsqueda\"}\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"manual\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"grid gap-4 py-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"product-name\">{t(\"productName\")}</Label>\n                  <Input\n                    id=\"product-name\"\n                    value={product.name}\n                    onChange={(e) => setProduct({ ...product, name: e.target.value })}\n                    placeholder={language === \"en\" ? \"Premium Plan\" : \"Plan Premium\"}\n                    required\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"product-price\">{t(\"price\")}</Label>\n                  <Input\n                    id=\"product-price\"\n                    value={product.price}\n                    onChange={(e) => setProduct({ ...product, price: e.target.value })}\n                    placeholder=\"$99.99\"\n                    required\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"product-description\">{t(\"description\")}</Label>\n                    <TokenCounter count={descriptionTokens} />\n                  </div>\n                  <Textarea\n                    id=\"product-description\"\n                    value={product.description}\n                    onChange={(e) => setProduct({ ...product, description: e.target.value })}\n                    placeholder={\n                      language === \"en\"\n                        ? \"Our premium plan includes all features...\"\n                        : \"Nuestro plan premium incluye todas las características...\"\n                    }\n                    className=\"min-h-[100px]\"\n                    required\n                  />\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"product-available\"\n                    checked={product.available}\n                    onCheckedChange={(checked) => setProduct({ ...product, available: checked })}\n                  />\n                  <Label htmlFor=\"product-available\">{t(\"available\")}</Label>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"product-has-stock\"\n                      checked={product.hasStock}\n                      onCheckedChange={(checked) => setProduct({ ...product, hasStock: checked })}\n                    />\n                    <Label htmlFor=\"product-has-stock\">\n                      {language === \"en\" ? \"Track Stock (Optional)\" : \"Seguimiento de Stock (Opcional)\"}\n                    </Label>\n                  </div>\n                  {product.hasStock && (\n                    <div className=\"pt-2\">\n                      <Label htmlFor=\"product-stock\">\n                        {language === \"en\" ? \"Stock Quantity\" : \"Cantidad en Stock\"}\n                      </Label>\n                      <Input\n                        id=\"product-stock\"\n                        type=\"number\"\n                        min=\"0\"\n                        value={product.stock}\n                        onChange={(e) => setProduct({ ...product, stock: e.target.value })}\n                        placeholder=\"0\"\n                        className=\"mt-1\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n              <DialogFooter>\n                <Button type=\"submit\">{language === \"en\" ? \"Add Product\" : \"Añadir Producto\"}</Button>\n              </DialogFooter>\n            </form>\n          </TabsContent>\n\n          <TabsContent value=\"api\">\n            <ScrollArea className=\"h-[400px] pr-4\">\n              <div className=\"space-y-4 py-4\">\n                <Alert>\n                  <InfoIcon className=\"h-4 w-4\" />\n                  <AlertTitle>{language === \"en\" ? \"Product Limits\" : \"Límites de Productos\"}</AlertTitle>\n                  <AlertDescription>\n                    {language === \"en\"\n                      ? \"You can import up to 100 products via API. We recommend focusing on your best-selling products. Additional 100 products cost $10/month.\"\n                      : \"Puedes importar hasta 100 productos vía API. Recomendamos enfocarse en tus productos más vendidos. Cada 100 productos adicionales cuestan $10/mes.\"}\n                  </AlertDescription>\n                </Alert>\n\n                <form onSubmit={handleSubmit}>\n                  <div className=\"grid gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"api-url\">{language === \"en\" ? \"API Endpoint URL\" : \"URL del Endpoint API\"}</Label>\n                      <Input\n                        id=\"api-url\"\n                        value={apiUrl}\n                        onChange={(e) => setApiUrl(e.target.value)}\n                        placeholder=\"https://api.yourdomain.com/products\"\n                        required\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"api-key\">\n                        {language === \"en\" ? \"API Key (optional)\" : \"Clave API (opcional)\"}\n                      </Label>\n                      <Input\n                        id=\"api-key\"\n                        value={apiKey}\n                        onChange={(e) => setApiKey(e.target.value)}\n                        placeholder={language === \"en\" ? \"Your API key\" : \"Tu clave API\"}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    <div className=\"rounded-md border p-4 space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-sm\">\n                          {language === \"en\" ? \"JSON Format Configuration\" : \"Configuración de Formato JSON\"}\n                        </h4>\n                      </div>\n\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"products-array-format\"\n                          checked={productsArrayFormat}\n                          onCheckedChange={setProductsArrayFormat}\n                        />\n                        <Label htmlFor=\"products-array-format\" className=\"text-sm\">\n                          {language === \"en\"\n                            ? \"Products are in an array property\"\n                            : \"Los productos están en una propiedad de array\"}\n                        </Label>\n                        <TooltipProvider>\n                          <Tooltip>\n                            <TooltipTrigger asChild>\n                              <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 rounded-full p-0\" type=\"button\">\n                                <HelpCircle className=\"h-4 w-4\" />\n                                <span className=\"sr-only\">Help</span>\n                              </Button>\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              {language === \"en\"\n                                ? 'Enable if your JSON has a structure like {\"products\": [...]} instead of directly [...]'\n                                : 'Activa si tu JSON tiene una estructura como {\"productos\": [...]} en lugar de directamente [...]'}\n                            </TooltipContent>\n                          </Tooltip>\n                        </TooltipProvider>\n                      </div>\n\n                      {productsArrayFormat && (\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"products-array-name\" className=\"text-sm\">\n                            {language === \"en\" ? \"Array Property Name\" : \"Nombre de la Propiedad Array\"}\n                          </Label>\n                          <Input\n                            id=\"products-array-name\"\n                            value={productsArrayName}\n                            onChange={(e) => setProductsArrayName(e.target.value)}\n                            placeholder=\"products\"\n                            className=\"h-8 text-sm\"\n                            required={productsArrayFormat}\n                          />\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"rounded-md border p-4 space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-sm\">\n                          {language === \"en\" ? \"Field Mapping\" : \"Mapeo de Campos\"}\n                        </h4>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Map your API's field names to our standard fields. If your API uses different field names, specify them here.\"\n                          : \"Mapea los nombres de campos de tu API a nuestros campos estándar. Si tu API usa nombres diferentes, especifícalos aquí.\"}\n                      </p>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"name-field\" className=\"text-sm\">\n                            {language === \"en\" ? \"Product Name Field\" : \"Campo de Nombre del Producto\"}\n                          </Label>\n                          <span className=\"text-xs text-muted-foreground\">Standard: name</span>\n                        </div>\n                        <Input\n                          id=\"name-field\"\n                          value={nameField}\n                          onChange={(e) => setNameField(e.target.value)}\n                          placeholder=\"nombreProducto\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                        <p className=\"text-xs text-muted-foreground\">\n                          {language === \"en\"\n                            ? \"If your product names are very specific, consider using a more generic field.\"\n                            : \"Si los nombres de tus productos son muy específicos, considera usar un campo más genérico.\"}\n                        </p>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"price-field\" className=\"text-sm\">\n                            {language === \"en\" ? \"Price Field\" : \"Campo de Precio\"}\n                          </Label>\n                          <span className=\"text-xs text-muted-foreground\">Standard: price</span>\n                        </div>\n                        <Input\n                          id=\"price-field\"\n                          value={priceField}\n                          onChange={(e) => setPriceField(e.target.value)}\n                          placeholder=\"precio\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"description-field\" className=\"text-sm\">\n                            {language === \"en\" ? \"Description Field\" : \"Campo de Descripción\"}\n                          </Label>\n                          <span className=\"text-xs text-muted-foreground\">Standard: description</span>\n                        </div>\n                        <Input\n                          id=\"description-field\"\n                          value={descriptionField}\n                          onChange={(e) => setDescriptionField(e.target.value)}\n                          placeholder=\"descripcion\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch id=\"enable-stock\" checked={enableStock} onCheckedChange={setEnableStock} />\n                          <Label htmlFor=\"enable-stock\" className=\"text-sm\">\n                            {language === \"en\" ? \"Include Stock Information\" : \"Incluir Información de Stock\"}\n                          </Label>\n                        </div>\n\n                        {enableStock && (\n                          <div className=\"pt-2\">\n                            <div className=\"flex items-center justify-between\">\n                              <Label htmlFor=\"stock-field\" className=\"text-sm\">\n                                {language === \"en\" ? \"Stock Field\" : \"Campo de Stock\"}\n                              </Label>\n                              <span className=\"text-xs text-muted-foreground\">Standard: stock</span>\n                            </div>\n                            <Input\n                              id=\"stock-field\"\n                              value={stockField}\n                              onChange={(e) => setStockField(e.target.value)}\n                              placeholder=\"inventario\"\n                              className=\"h-8 text-sm mt-1\"\n                              required={enableStock}\n                            />\n                          </div>\n                        )}\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch id=\"enable-details\" checked={enableDetails} onCheckedChange={setEnableDetails} />\n                          <Label htmlFor=\"enable-details\" className=\"text-sm\">\n                            {language === \"en\" ? \"Include Product Details\" : \"Incluir Detalles del Producto\"}\n                          </Label>\n                        </div>\n\n                        {enableDetails && (\n                          <div className=\"pt-2\">\n                            <div className=\"flex items-center justify-between\">\n                              <Label htmlFor=\"details-field\" className=\"text-sm\">\n                                {language === \"en\" ? \"Details Field\" : \"Campo de Detalles\"}\n                              </Label>\n                              <span className=\"text-xs text-muted-foreground\">Standard: details</span>\n                            </div>\n                            <Input\n                              id=\"details-field\"\n                              value={detailsField}\n                              onChange={(e) => setDetailsField(e.target.value)}\n                              placeholder=\"detallesProducto\"\n                              className=\"h-8 text-sm mt-1\"\n                              required={enableDetails}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label>{language === \"en\" ? \"Expected JSON Format\" : \"Formato JSON Esperado\"}</Label>\n                      <div className=\"rounded-md bg-muted p-4\">\n                        <pre className=\"text-xs overflow-x-auto whitespace-pre-wrap\">{updateJsonExample()}</pre>\n                      </div>\n                    </div>\n\n                    <Alert variant=\"destructive\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertTitle>{language === \"en\" ? \"Important\" : \"Importante\"}</AlertTitle>\n                      <AlertDescription>\n                        {language === \"en\"\n                          ? \"Make sure your API endpoint is publicly accessible and returns data in the format shown above.\"\n                          : \"Asegúrate de que tu endpoint API sea accesible públicamente y devuelva datos en el formato mostrado arriba.\"}\n                      </AlertDescription>\n                    </Alert>\n                  </div>\n                  <DialogFooter className=\"mt-6\">\n                    <Button type=\"submit\">{language === \"en\" ? \"Connect API\" : \"Conectar API\"}</Button>\n                  </DialogFooter>\n                </form>\n              </div>\n            </ScrollArea>\n          </TabsContent>\n          <TabsContent value=\"search\">\n            <ScrollArea className=\"h-[400px] pr-4\">\n              <div className=\"space-y-4 py-4\">\n                <Alert>\n                  <InfoIcon className=\"h-4 w-4\" />\n                  <AlertTitle>{language === \"en\" ? \"Search Integration\" : \"Integración de Búsqueda\"}</AlertTitle>\n                  <AlertDescription>\n                    {language === \"en\"\n                      ? \"Connect your website's search API to allow the chatbot to find products in real-time when users ask about them.\"\n                      : \"Conecta la API de búsqueda de tu sitio web para permitir que el chatbot encuentre productos en tiempo real cuando los usuarios pregunten por ellos.\"}\n                  </AlertDescription>\n                </Alert>\n\n                <form onSubmit={handleSubmit}>\n                  <div className=\"grid gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"search-api-url\">\n                        {language === \"en\" ? \"Search API Endpoint URL\" : \"URL del Endpoint de la API de Búsqueda\"}\n                      </Label>\n                      <Input id=\"search-api-url\" placeholder=\"https://api.yourdomain.com/search?q={query}\" required />\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Use {query} as a placeholder where the search term will be inserted.\"\n                          : \"Usa {query} como marcador de posición donde se insertará el término de búsqueda.\"}\n                      </p>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"search-api-key\">\n                        {language === \"en\" ? \"API Key (optional)\" : \"Clave API (opcional)\"}\n                      </Label>\n                      <Input\n                        id=\"search-api-key\"\n                        placeholder={language === \"en\" ? \"Your API key\" : \"Tu clave API\"}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    <div className=\"rounded-md border p-4 space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-sm\">\n                          {language === \"en\" ? \"Response Mapping\" : \"Mapeo de Respuesta\"}\n                        </h4>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Map your search API's response fields to our standard product fields.\"\n                          : \"Mapea los campos de respuesta de tu API de búsqueda a nuestros campos estándar de producto.\"}\n                      </p>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-results-path\" className=\"text-sm\">\n                          {language === \"en\" ? \"Results Array Path\" : \"Ruta del Array de Resultados\"}\n                        </Label>\n                        <Input id=\"search-results-path\" placeholder=\"results\" className=\"h-8 text-sm\" required />\n                        <p className=\"text-xs text-muted-foreground\">\n                          {language === \"en\"\n                            ? \"The path to the array of search results in the API response (e.g., 'data.results', 'items')\"\n                            : \"La ruta al array de resultados de búsqueda en la respuesta de la API (ej., 'data.results', 'items')\"}\n                        </p>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-name-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Product Name Field\" : \"Campo de Nombre del Producto\"}\n                        </Label>\n                        <Input id=\"search-name-field\" placeholder=\"title\" className=\"h-8 text-sm\" required />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-price-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Price Field\" : \"Campo de Precio\"}\n                        </Label>\n                        <Input id=\"search-price-field\" placeholder=\"price\" className=\"h-8 text-sm\" required />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-description-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Description Field\" : \"Campo de Descripción\"}\n                        </Label>\n                        <Input\n                          id=\"search-description-field\"\n                          placeholder=\"description\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-image-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Image URL Field (optional)\" : \"Campo de URL de Imagen (opcional)\"}\n                        </Label>\n                        <Input id=\"search-image-field\" placeholder=\"image\" className=\"h-8 text-sm\" />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-url-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Product URL Field (optional)\" : \"Campo de URL del Producto (opcional)\"}\n                        </Label>\n                        <Input id=\"search-url-field\" placeholder=\"url\" className=\"h-8 text-sm\" />\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label>\n                        {language === \"en\" ? \"Example Search Scenario\" : \"Ejemplo de Escenario de Búsqueda\"}\n                      </Label>\n                      <div className=\"rounded-md bg-muted p-4\">\n                        <div className=\"space-y-2\">\n                          <p className=\"text-sm font-medium\">\n                            {language === \"en\" ? \"User Query:\" : \"Consulta del Usuario:\"}\n                          </p>\n                          <p className=\"text-sm italic\">\n                            \"{language === \"en\" ? \"I need clothes for cold weather\" : \"Necesito ropa para el frío\"}\"\n                          </p>\n\n                          <p className=\"text-sm font-medium mt-4\">\n                            {language === \"en\" ? \"Bot Search:\" : \"Búsqueda del Bot:\"}\n                          </p>\n                          <p className=\"text-sm italic\">\n                            \"\n                            {language === \"en\"\n                              ? \"sweaters for cold weather, winter jackets, thermal shirts\"\n                              : \"sudaderas para el frío, chaquetas de invierno, camisas térmicas\"}\n                            \"\n                          </p>\n\n                          <p className=\"text-sm font-medium mt-4\">{language === \"en\" ? \"Results:\" : \"Resultados:\"}</p>\n                          <p className=\"text-sm\">\n                            {language === \"en\"\n                              ? \"The bot will map the first 10 results from your search API and present them to the user in a structured format.\"\n                              : \"El bot mapeará los primeros 10 resultados de tu API de búsqueda y los presentará al usuario en un formato estructurado.\"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <Alert variant=\"destructive\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertTitle>{language === \"en\" ? \"Important\" : \"Importante\"}</AlertTitle>\n                      <AlertDescription>\n                        {language === \"en\"\n                          ? \"For this feature to work effectively, your search API must be intelligent enough to understand natural language queries. Otherwise, the bot may not find what the user is asking for. Consider implementing semantic search or AI-powered search for best results.\"\n                          : \"Para que esta función funcione de manera efectiva, tu API de búsqueda debe ser lo suficientemente inteligente para entender consultas en lenguaje natural. De lo contrario, el bot puede no encontrar lo que el usuario está pidiendo. Considera implementar búsqueda semántica o búsqueda potenciada por IA para obtener mejores resultados.\"}\n                      </AlertDescription>\n                    </Alert>\n                  </div>\n                  <DialogFooter className=\"mt-6\">\n                    <Button type=\"submit\">\n                      {language === \"en\" ? \"Connect Search API\" : \"Conectar API de Búsqueda\"}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </div>\n            </ScrollArea>\n          </TabsContent>\n        </Tabs>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4316, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/chat-widget-preview.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { MessageSquare, X, Send, Minimize2, Maximize2 } from \"lucide-react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\n\ntype ChatSettings = {\n  title: string\n  subtitle: string\n  primaryColor: string\n  buttonColor: string\n  bubbleColor: string\n  userBubbleColor: string\n  headerStyle: \"gradient\" | \"solid\"\n  logo?: string\n  showLogo: boolean\n  position: \"right\" | \"left\"\n  initialMessage: string\n  placeholderText: string\n}\n\ntype Message = {\n  id: string\n  content: string\n  sender: \"user\" | \"bot\"\n  timestamp: Date\n}\n\nexport function ChatWidgetPreview({ settings }: { settings?: ChatSettings }) {\n  // Update the ChatWidgetPreview component to always show the chat window by default\n  // Change the initial state of isOpen to true\n  const [isOpen, setIsOpen] = useState(true)\n\n  // Also update the isMinimized state to false by default\n  const [isMinimized, setIsMinimized] = useState(false)\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: \"1\",\n      content: settings?.initialMessage || \"Hello! How can I help you today?\",\n      sender: \"bot\",\n      timestamp: new Date(),\n    },\n  ])\n  const [input, setInput] = useState(\"\")\n\n  const defaultSettings: ChatSettings = {\n    title: \"ChatBot Support\",\n    subtitle: \"Virtual Assistant\",\n    primaryColor: \"#4f46e5\",\n    buttonColor: \"#4f46e5\",\n    bubbleColor: \"#f9fafb\",\n    userBubbleColor: \"#000000\",\n    headerStyle: \"gradient\",\n    showLogo: true,\n    position: \"right\",\n    initialMessage: \"Hello! How can I help you today?\",\n    placeholderText: \"Type your message...\",\n  }\n\n  const chatSettings = settings || defaultSettings\n\n  const handleSendMessage = () => {\n    if (!input.trim()) return\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: input,\n      sender: \"user\",\n      timestamp: new Date(),\n    }\n\n    setMessages((prev) => [...prev, userMessage])\n    setInput(\"\")\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botMessage: Message = {\n        id: Date.now().toString(),\n        content: \"This is a preview of how your chatbot will respond to user messages.\",\n        sender: \"bot\",\n        timestamp: new Date(),\n      }\n      setMessages((prev) => [...prev, botMessage])\n    }, 1000)\n  }\n\n  const headerStyle =\n    chatSettings.headerStyle === \"gradient\"\n      ? {\n          background: `linear-gradient(to right, ${chatSettings.primaryColor}, ${adjustColor(chatSettings.primaryColor, -30)})`,\n        }\n      : { background: chatSettings.primaryColor }\n\n  return (\n    <div className=\"chat-widget-preview\">\n      <div className=\"flex justify-between mb-2\">\n        <span className=\"text-sm font-medium\">Chat Widget Preview</span>\n        <Button variant=\"outline\" size=\"sm\" onClick={() => setIsOpen(!isOpen)}>\n          {isOpen ? \"Hide Chat\" : \"Show Chat\"}\n        </Button>\n      </div>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"chat-window bg-white dark:bg-gray-900 rounded-lg overflow-hidden border border-gray-200 dark:border-gray-800 shadow-md\"\n            style={{ maxWidth: \"300px\" }}\n          >\n            {/* Chat Header */}\n            <div className=\"p-3 flex justify-between items-center\" style={headerStyle}>\n              <div className=\"flex items-center\">\n                {chatSettings.showLogo && (\n                  <div className=\"bg-white/20 rounded-full p-1.5 mr-2\">\n                    {chatSettings.logo ? (\n                      <img src={chatSettings.logo || \"/placeholder.svg\"} alt=\"Logo\" className=\"h-4 w-4\" />\n                    ) : (\n                      <MessageSquare className=\"h-4 w-4 text-white\" />\n                    )}\n                  </div>\n                )}\n                <div>\n                  <h3 className=\"font-medium text-white text-sm\">{chatSettings.title}</h3>\n                  <p className=\"text-xs text-gray-200\">{chatSettings.subtitle}</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <button onClick={() => setIsMinimized(!isMinimized)} className=\"text-gray-200 hover:text-white p-1\">\n                  {isMinimized ? <Maximize2 size={14} /> : <Minimize2 size={14} />}\n                </button>\n                <button onClick={() => setIsOpen(false)} className=\"text-gray-200 hover:text-white p-1\">\n                  <X size={14} />\n                </button>\n              </div>\n            </div>\n\n            {/* Chat Messages */}\n            <AnimatePresence>\n              {!isMinimized && (\n                <motion.div\n                  initial={{ height: 0 }}\n                  animate={{ height: \"200px\" }}\n                  exit={{ height: 0 }}\n                  className=\"p-3 h-[200px] overflow-y-auto bg-gray-50 dark:bg-gray-950\"\n                >\n                  {messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`mb-3 flex ${message.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`}\n                    >\n                      {message.sender === \"bot\" && (\n                        <div className=\"mr-1.5 flex-shrink-0\">\n                          <div\n                            className=\"rounded-full h-6 w-6 flex items-center justify-center\"\n                            style={{ background: chatSettings.primaryColor }}\n                          >\n                            <MessageSquare className=\"h-3 w-3 text-white\" />\n                          </div>\n                        </div>\n                      )}\n                      <div\n                        className={`chat-bubble p-2 rounded-lg max-w-[75%] text-sm`}\n                        style={{\n                          background:\n                            message.sender === \"user\" ? chatSettings.userBubbleColor : chatSettings.bubbleColor,\n                          color: message.sender === \"user\" ? \"#fff\" : \"#000\",\n                        }}\n                      >\n                        <p className=\"text-xs\">{message.content}</p>\n                        <p className=\"text-[10px] mt-1 opacity-60\">\n                          {message.timestamp.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\n                        </p>\n                      </div>\n                      {message.sender === \"user\" && (\n                        <div className=\"ml-1.5 flex-shrink-0\">\n                          <div className=\"bg-gray-300 dark:bg-gray-700 rounded-full h-6 w-6 flex items-center justify-center\">\n                            <span className=\"text-[10px] font-medium text-gray-800 dark:text-white\">Tú</span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            {/* Chat Input */}\n            {!isMinimized && (\n              <div className=\"p-2 border-t border-gray-200 dark:border-gray-800\">\n                <div className=\"flex items-center\">\n                  <Input\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder={chatSettings.placeholderText}\n                    className=\"flex-grow mr-1 h-8 text-xs\"\n                    onKeyDown={(e) => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault()\n                        handleSendMessage()\n                      }\n                    }}\n                  />\n                  <Button\n                    type=\"button\"\n                    size=\"icon\"\n                    className=\"h-8 w-8\"\n                    style={{ background: chatSettings.buttonColor }}\n                    disabled={!input.trim()}\n                    onClick={() => handleSendMessage()}\n                  >\n                    <Send className=\"h-3 w-3 text-white\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Chat Button */}\n      {!isOpen && (\n        <div className=\"flex justify-center mt-4\">\n          <button\n            onClick={() => setIsOpen(true)}\n            type=\"button\"\n            className=\"rounded-full p-3 shadow-lg text-white\"\n            style={{ background: chatSettings.buttonColor }}\n          >\n            <MessageSquare className=\"h-5 w-5\" />\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\n// Helper function to adjust color brightness\nfunction adjustColor(color: string, amount: number): string {\n  return color\n  // In a real implementation, this would adjust the color brightness\n  // For simplicity in this preview, we're just returning the original color\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4775, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/function-modal.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Trash2, Plus, Eye, EyeOff, Key } from \"lucide-react\";\nimport { AlertTriangle, CheckCircle, Shield, Loader2 } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\n\ninterface FunctionModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onAddFunction: (functionData: any) => void;\n  language?: \"en\" | \"es\";\n}\n\nexport function FunctionModal({\n  open,\n  onOpenChange,\n  onAddFunction,\n  language = \"en\",\n}: FunctionModalProps) {\n  const [functionType, setFunctionType] = useState(\"api\");\n  const [functionName, setFunctionName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [apiUrl, setApiUrl] = useState(\"\");\n  const [method, setMethod] = useState(\"POST\");\n  const [headers, setHeaders] = useState([{ key: \"\", value: \"\" }]);\n  const [parameters, setParameters] = useState([\n    { name: \"\", type: \"string\", required: true, description: \"\" },\n  ]);\n  const [customCode, setCustomCode] = useState(\"\");\n  const [customCredentials, setCustomCredentials] = useState([\n    { name: \"\", value: \"\", description: \"\" },\n  ]);\n  const [showCredentials, setShowCredentials] = useState<{\n    [key: number]: boolean;\n  }>({});\n  const [requiresAuth, setRequiresAuth] = useState(false);\n  const [authType, setAuthType] = useState(\"bearer\");\n  const [authValue, setAuthValue] = useState(\"\");\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [verificationResult, setVerificationResult] = useState<{\n    status: \"pending\" | \"success\" | \"warning\" | \"error\";\n    message: string;\n  } | null>(null);\n  const [showVerificationAlert, setShowVerificationAlert] = useState(false);\n\n  const handleVerifyFunction = async () => {\n    if (!customCode.trim()) {\n      setVerificationResult({\n        status: \"error\",\n        message:\n          language === \"en\"\n            ? \"Please enter some code before verification\"\n            : \"Por favor ingresa código antes de verificar\",\n      });\n      return;\n    }\n\n    setShowVerificationAlert(true);\n  };\n\n  const confirmVerification = async () => {\n    setShowVerificationAlert(false);\n    setIsVerifying(true);\n    setVerificationResult(null);\n\n    try {\n      // Simulate AI verification API call\n      await new Promise((resolve) => setTimeout(resolve, 3000));\n\n      // Simulate verification result\n      const hasIssues = Math.random() < 0.2; // 20% chance of issues for demo\n\n      if (hasIssues) {\n        setVerificationResult({\n          status: \"warning\",\n          message:\n            language === \"en\"\n              ? \"Potential security concerns detected. Please review your code.\"\n              : \"Se detectaron posibles problemas de seguridad. Por favor revisa tu código.\",\n        });\n      } else {\n        setVerificationResult({\n          status: \"success\",\n          message:\n            language === \"en\"\n              ? \"Code verification passed! No security issues detected.\"\n              : \"¡Verificación exitosa! No se detectaron problemas de seguridad.\",\n        });\n      }\n    } catch (error) {\n      setVerificationResult({\n        status: \"error\",\n        message:\n          language === \"en\"\n            ? \"Verification failed. Please try again.\"\n            : \"La verificación falló. Por favor intenta de nuevo.\",\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  const handleSubmit = () => {\n    const functionData = {\n      name: functionName,\n      description,\n      type: functionType,\n      ...(functionType === \"api\" && {\n        api: {\n          url: apiUrl,\n          method,\n          headers: headers.filter((h) => h.key && h.value),\n          parameters: parameters.filter((p) => p.name),\n          auth: requiresAuth ? { type: authType, value: authValue } : null,\n        },\n      }),\n      ...(functionType === \"custom\" && {\n        code: customCode,\n        credentials: customCredentials.filter((c) => c.name && c.value),\n      }),\n    };\n\n    onAddFunction(functionData);\n    onOpenChange(false);\n\n    // Reset form\n    setFunctionName(\"\");\n    setDescription(\"\");\n    setApiUrl(\"\");\n    setMethod(\"POST\");\n    setHeaders([{ key: \"\", value: \"\" }]);\n    setParameters([\n      { name: \"\", type: \"string\", required: true, description: \"\" },\n    ]);\n    setCustomCode(\"\");\n    setCustomCredentials([{ name: \"\", value: \"\", description: \"\" }]);\n    setShowCredentials({});\n    setRequiresAuth(false);\n    setAuthValue(\"\");\n    setVerificationResult(null);\n    setIsVerifying(false);\n    setShowVerificationAlert(false);\n  };\n\n  const addHeader = () => {\n    setHeaders([...headers, { key: \"\", value: \"\" }]);\n  };\n\n  const removeHeader = (index: number) => {\n    setHeaders(headers.filter((_, i) => i !== index));\n  };\n\n  const updateHeader = (\n    index: number,\n    field: \"key\" | \"value\",\n    value: string\n  ) => {\n    const updatedHeaders = [...headers];\n    updatedHeaders[index][field] = value;\n    setHeaders(updatedHeaders);\n  };\n\n  const addParameter = () => {\n    setParameters([\n      ...parameters,\n      { name: \"\", type: \"string\", required: true, description: \"\" },\n    ]);\n  };\n\n  const removeParameter = (index: number) => {\n    setParameters(parameters.filter((_, i) => i !== index));\n  };\n\n  const updateParameter = (index: number, field: string, value: any) => {\n    const updatedParameters = [...parameters];\n    updatedParameters[index] = { ...updatedParameters[index], [field]: value };\n    setParameters(updatedParameters);\n  };\n\n  const addCustomCredential = () => {\n    setCustomCredentials([\n      ...customCredentials,\n      { name: \"\", value: \"\", description: \"\" },\n    ]);\n  };\n\n  const removeCustomCredential = (index: number) => {\n    setCustomCredentials(customCredentials.filter((_, i) => i !== index));\n    const newShowCredentials = { ...showCredentials };\n    delete newShowCredentials[index];\n    setShowCredentials(newShowCredentials);\n  };\n\n  const updateCustomCredential = (\n    index: number,\n    field: \"name\" | \"value\" | \"description\",\n    value: string\n  ) => {\n    const updatedCredentials = [...customCredentials];\n    updatedCredentials[index][field] = value;\n    setCustomCredentials(updatedCredentials);\n  };\n\n  const toggleCredentialVisibility = (index: number) => {\n    setShowCredentials((prev) => ({\n      ...prev,\n      [index]: !prev[index],\n    }));\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[700px] h-[80vh] flex flex-col\">\n        <DialogHeader className=\"flex-shrink-0\">\n          <DialogTitle>\n            {language === \"en\"\n              ? \"Add Custom Function\"\n              : \"Agregar Función Personalizada\"}\n          </DialogTitle>\n          <DialogDescription>\n            {language === \"en\"\n              ? \"Create a custom function that your bot can execute\"\n              : \"Crea una función personalizada que tu bot puede ejecutar\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"flex-1 overflow-y-auto p-3\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"function-name\">\n                {language === \"en\" ? \"Function Name\" : \"Nombre de la Función\"}\n              </Label>\n              <Input\n                id=\"function-name\"\n                value={functionName}\n                onChange={(e) => setFunctionName(e.target.value)}\n                placeholder={\n                  language === \"en\" ? \"e.g., Send Email\" : \"ej., Enviar Email\"\n                }\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"function-description\">\n                {language === \"en\" ? \"Description\" : \"Descripción\"}\n              </Label>\n              <Textarea\n                id=\"function-description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder={\n                  language === \"en\"\n                    ? \"Describe what this function does...\"\n                    : \"Describe qué hace esta función...\"\n                }\n                className=\"min-h-[80px]\"\n              />\n            </div>\n\n            <Tabs value={functionType} onValueChange={setFunctionType}>\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"api\">API Call</TabsTrigger>\n                <TabsTrigger value=\"custom\">\n                  {language === \"en\" ? \"Custom Code\" : \"Código Personalizado\"}\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"api\" className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">\n                      {language === \"en\"\n                        ? \"API Configuration\"\n                        : \"Configuración de API\"}\n                    </CardTitle>\n                    <CardDescription>\n                      {language === \"en\"\n                        ? \"Configure the API endpoint that will be called\"\n                        : \"Configura el endpoint de API que será llamado\"}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid grid-cols-4 gap-2\">\n                      <div className=\"space-y-2\">\n                        <Label>{language === \"en\" ? \"Method\" : \"Método\"}</Label>\n                        <Select value={method} onValueChange={setMethod}>\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"GET\">GET</SelectItem>\n                            <SelectItem value=\"POST\">POST</SelectItem>\n                            <SelectItem value=\"PUT\">PUT</SelectItem>\n                            <SelectItem value=\"DELETE\">DELETE</SelectItem>\n                            <SelectItem value=\"PATCH\">PATCH</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"col-span-3 space-y-2\">\n                        <Label htmlFor=\"api-url\">URL</Label>\n                        <Input\n                          id=\"api-url\"\n                          value={apiUrl}\n                          onChange={(e) => setApiUrl(e.target.value)}\n                          placeholder=\"https://api.example.com/endpoint\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"requires-auth\"\n                        checked={requiresAuth}\n                        onCheckedChange={setRequiresAuth}\n                      />\n                      <Label htmlFor=\"requires-auth\">\n                        {language === \"en\"\n                          ? \"Requires Authentication\"\n                          : \"Requiere Autenticación\"}\n                      </Label>\n                    </div>\n\n                    {requiresAuth && (\n                      <div className=\"grid grid-cols-3 gap-2\">\n                        <div className=\"space-y-2\">\n                          <Label>\n                            {language === \"en\" ? \"Auth Type\" : \"Tipo de Auth\"}\n                          </Label>\n                          <Select value={authType} onValueChange={setAuthType}>\n                            <SelectTrigger>\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"bearer\">\n                                Bearer Token\n                              </SelectItem>\n                              <SelectItem value=\"apikey\">API Key</SelectItem>\n                              <SelectItem value=\"basic\">Basic Auth</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div className=\"col-span-2 space-y-2\">\n                          <Label htmlFor=\"auth-value\">\n                            {language === \"en\" ? \"Auth Value\" : \"Valor de Auth\"}\n                          </Label>\n                          <Input\n                            id=\"auth-value\"\n                            type=\"password\"\n                            value={authValue}\n                            onChange={(e) => setAuthValue(e.target.value)}\n                            placeholder={\n                              language === \"en\"\n                                ? \"Enter token/key\"\n                                : \"Ingresa token/clave\"\n                            }\n                          />\n                        </div>\n                      </div>\n                    )}\n\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label>\n                          {language === \"en\" ? \"Headers\" : \"Encabezados\"}\n                        </Label>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={addHeader}\n                        >\n                          <Plus className=\"h-4 w-4 mr-1\" />\n                          {language === \"en\" ? \"Add Header\" : \"Agregar\"}\n                        </Button>\n                      </div>\n                      {headers.map((header, index) => (\n                        <div key={index} className=\"flex gap-2 items-center\">\n                          <Input\n                            placeholder={\n                              language === \"en\"\n                                ? \"Header name\"\n                                : \"Nombre del header\"\n                            }\n                            value={header.key}\n                            onChange={(e) =>\n                              updateHeader(index, \"key\", e.target.value)\n                            }\n                          />\n                          <Input\n                            placeholder={\n                              language === \"en\"\n                                ? \"Header value\"\n                                : \"Valor del header\"\n                            }\n                            value={header.value}\n                            onChange={(e) =>\n                              updateHeader(index, \"value\", e.target.value)\n                            }\n                          />\n                          <Button\n                            className=\"px-3\"\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"icon\"\n                            onClick={() => removeHeader(index)}\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label>\n                          {language === \"en\" ? \"Parameters\" : \"Parámetros\"}\n                        </Label>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={addParameter}\n                        >\n                          <Plus className=\"h-4 w-4 mr-1\" />\n                          {language === \"en\" ? \"Add Parameter\" : \"Agregar\"}\n                        </Button>\n                      </div>\n                      {parameters.map((param, index) => (\n                        <div key={index} className=\"flex justify-between\">\n                          <div className=\"flex\">\n                            <div className=\"mr-2\">\n                              <Input\n                                placeholder={\n                                  language === \"en\"\n                                    ? \"Parameter name\"\n                                    : \"Nombre\"\n                                }\n                                value={param.name}\n                                onChange={(e) =>\n                                  updateParameter(index, \"name\", e.target.value)\n                                }\n                              />\n                            </div>\n                            <div className=\"col-span-2\">\n                              <Select\n                                value={param.type}\n                                onValueChange={(value) =>\n                                  updateParameter(index, \"type\", value)\n                                }\n                              >\n                                <SelectTrigger>\n                                  <SelectValue />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value=\"string\">String</SelectItem>\n                                  <SelectItem value=\"number\">Number</SelectItem>\n                                  <SelectItem value=\"boolean\">\n                                    Boolean\n                                  </SelectItem>\n                                  <SelectItem value=\"array\">Array</SelectItem>\n                                  <SelectItem value=\"object\">Object</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </div>\n                          </div>\n\n                          <div className=\"col-span-2 flex items-center gap-2\">\n                            <Switch\n                              checked={param.required}\n                              onCheckedChange={(checked) =>\n                                updateParameter(index, \"required\", checked)\n                              }\n                            />\n                            <span className=\"text-xs\">\n                              {language === \"en\" ? \"Required\" : \"Requerido\"}\n                            </span>\n                          </div>\n                          <div className=\"col-span-1\">\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"icon\"\n                              onClick={() => removeParameter(index)}\n                            >\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"custom\" className=\"space-y-4\">\n                {/* Security Credentials Section */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\n                      <Key className=\"h-5 w-5\" />\n                      {language === \"en\"\n                        ? \"Security Credentials\"\n                        : \"Credenciales de Seguridad\"}\n                    </CardTitle>\n                    <CardDescription>\n                      {language === \"en\"\n                        ? \"Add secure credentials that can be referenced in your code without exposing them\"\n                        : \"Agrega credenciales seguras que pueden ser referenciadas en tu código sin exponerlas\"}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label>\n                          {language === \"en\" ? \"Credentials\" : \"Credenciales\"}\n                        </Label>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={addCustomCredential}\n                        >\n                          <Plus className=\"h-4 w-4 mr-1\" />\n                          {language === \"en\" ? \"Add Credential\" : \"Agregar\"}\n                        </Button>\n                      </div>\n                      {customCredentials.map((credential, index) => (\n                        <div\n                          key={index}\n                          className=\"grid grid-cols-12 gap-2 items-end\"\n                        >\n                          <div className=\"col-span-3\">\n                            <Input\n                              placeholder={\n                                language === \"en\" ? \"Credential name\" : \"Nombre\"\n                              }\n                              value={credential.name}\n                              onChange={(e) =>\n                                updateCustomCredential(\n                                  index,\n                                  \"name\",\n                                  e.target.value\n                                )\n                              }\n                            />\n                          </div>\n                          <div className=\"col-span-4 relative\">\n                            <Input\n                              type={\n                                showCredentials[index] ? \"text\" : \"password\"\n                              }\n                              placeholder={\n                                language === \"en\"\n                                  ? \"Token/API Key/Secret\"\n                                  : \"Token/API Key/Secreto\"\n                              }\n                              value={credential.value}\n                              onChange={(e) =>\n                                updateCustomCredential(\n                                  index,\n                                  \"value\",\n                                  e.target.value\n                                )\n                              }\n                              className=\"pr-10\"\n                            />\n                            <Button\n                              type=\"button\"\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              className=\"absolute right-0 top-0 h-full px-3\"\n                              onClick={() => toggleCredentialVisibility(index)}\n                            >\n                              {showCredentials[index] ? (\n                                <EyeOff className=\"h-4 w-4\" />\n                              ) : (\n                                <Eye className=\"h-4 w-4\" />\n                              )}\n                            </Button>\n                          </div>\n                          <div className=\"col-span-4\">\n                            <Input\n                              placeholder={\n                                language === \"en\"\n                                  ? \"Description\"\n                                  : \"Descripción\"\n                              }\n                              value={credential.description}\n                              onChange={(e) =>\n                                updateCustomCredential(\n                                  index,\n                                  \"description\",\n                                  e.target.value\n                                )\n                              }\n                            />\n                          </div>\n                          <div className=\"col-span-1\">\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"icon\"\n                              onClick={() => removeCustomCredential(index)}\n                            >\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    {customCredentials.some((c) => c.name) && (\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n                        <div className=\"flex items-center gap-2 text-blue-800 mb-2\">\n                          <Key className=\"h-4 w-4\" />\n                          <span className=\"font-medium text-sm\">\n                            {language === \"en\"\n                              ? \"How to use credentials in your code:\"\n                              : \"Cómo usar credenciales en tu código:\"}\n                          </span>\n                        </div>\n                        <div className=\"text-xs text-blue-700 font-mono bg-blue-100 p-2 rounded\">\n                          {customCredentials\n                            .filter((c) => c.name)\n                            .map(\n                              (c) => `const ${c.name} = credentials.${c.name};`\n                            )\n                            .join(\"\\n\") ||\n                            (language === \"en\"\n                              ? \"// Add credentials above to see examples\"\n                              : \"// Agrega credenciales arriba para ver ejemplos\")}\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Custom Code Section */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">\n                      {language === \"en\"\n                        ? \"Custom Code\"\n                        : \"Código Personalizado\"}\n                    </CardTitle>\n                    <CardDescription>\n                      {language === \"en\"\n                        ? \"Write custom JavaScript code that will be executed\"\n                        : \"Escribe código JavaScript personalizado que será ejecutado\"}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"custom-code\">\n                            {language === \"en\"\n                              ? \"JavaScript Code\"\n                              : \"Código JavaScript\"}\n                          </Label>\n                          <Button\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={handleVerifyFunction}\n                            disabled={isVerifying || !customCode.trim()}\n                            className=\"flex items-center gap-2\"\n                          >\n                            {isVerifying ? (\n                              <Loader2 className=\"h-4 w-4 animate-spin\" />\n                            ) : (\n                              <Shield className=\"h-4 w-4\" />\n                            )}\n                            {isVerifying\n                              ? language === \"en\"\n                                ? \"Verifying...\"\n                                : \"Verificando...\"\n                              : language === \"en\"\n                              ? \"Verify Function\"\n                              : \"Verificar Función\"}\n                          </Button>\n                        </div>\n                        <Textarea\n                          id=\"custom-code\"\n                          value={customCode}\n                          onChange={(e) => setCustomCode(e.target.value)}\n                          placeholder={`// ${\n                            language === \"en\"\n                              ? \"Example function with credentials\"\n                              : \"Función de ejemplo con credenciales\"\n                          }\nfunction executeFunction(params, credentials) {\n  // ${\n    language === \"en\"\n      ? \"Access your secure credentials\"\n      : \"Accede a tus credenciales seguras\"\n  }\n  const apiKey = credentials.myApiKey;\n  const token = credentials.authToken;\n  \n  // ${\n    language === \"en\"\n      ? \"Your custom logic here\"\n      : \"Tu lógica personalizada aquí\"\n  }\n  console.log('Function executed with params:', params);\n  \n  // ${\n    language === \"en\" ? \"Make secure API calls\" : \"Realiza llamadas API seguras\"\n  }\n  const response = fetch('https://api.example.com/data', {\n    headers: {\n      'Authorization': \\`Bearer \\${token}\\`,\n      'X-API-Key': apiKey\n    }\n  });\n  \n  return { success: true, message: 'Function completed' };\n}`}\n                          className=\"min-h-[250px] font-mono text-sm\"\n                        />\n                      </div>\n\n                      {verificationResult && (\n                        <Alert\n                          className={`${\n                            verificationResult.status === \"success\"\n                              ? \"border-green-200 bg-green-50\"\n                              : verificationResult.status === \"warning\"\n                              ? \"border-yellow-200 bg-yellow-50\"\n                              : \"border-red-200 bg-red-50\"\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-2\">\n                            {verificationResult.status === \"success\" && (\n                              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                            )}\n                            {verificationResult.status === \"warning\" && (\n                              <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n                            )}\n                            {verificationResult.status === \"error\" && (\n                              <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n                            )}\n                            <AlertDescription\n                              className={`${\n                                verificationResult.status === \"success\"\n                                  ? \"text-green-800\"\n                                  : verificationResult.status === \"warning\"\n                                  ? \"text-yellow-800\"\n                                  : \"text-red-800\"\n                              }`}\n                            >\n                              {verificationResult.message}\n                            </AlertDescription>\n                          </div>\n                        </Alert>\n                      )}\n\n                      <div className=\"mt-2 space-y-2\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {language === \"en\"\n                            ? \"Note: Code will be executed in a secure sandbox environment\"\n                            : \"Nota: El código se ejecutará en un entorno sandbox seguro\"}\n                        </Badge>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {language === \"en\"\n                            ? \"Credentials are encrypted and never exposed in logs\"\n                            : \"Las credenciales están encriptadas y nunca se exponen en logs\"}\n                        </Badge>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2 pt-4 border-t flex-shrink-0\">\n          {functionType === \"custom\" && !verificationResult?.status && (\n            <div className=\"flex items-center text-xs text-amber-600 mr-auto\">\n              <AlertTriangle className=\"h-3 w-3 mr-1\" />\n              {language === \"en\"\n                ? \"Please verify your code before adding the function\"\n                : \"Por favor verifica tu código antes de agregar la función\"}\n            </div>\n          )}\n          {functionType === \"custom\" &&\n            verificationResult?.status === \"warning\" && (\n              <div className=\"flex items-center text-xs text-amber-600 mr-auto\">\n                <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                {language === \"en\"\n                  ? \"Please fix the issues before adding the function\"\n                  : \"Por favor corrige los problemas antes de agregar la función\"}\n              </div>\n            )}\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n            {language === \"en\" ? \"Cancel\" : \"Cancelar\"}\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            disabled={\n              !functionName ||\n              !description ||\n              (functionType === \"custom\" &&\n                (!verificationResult ||\n                  verificationResult.status !== \"success\"))\n            }\n          >\n            {language === \"en\" ? \"Add Function\" : \"Agregar Función\"}\n          </Button>\n        </div>\n        {/* Verification Alert Dialog */}\n        {showVerificationAlert && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 max-w-md mx-4 space-y-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"p-2 bg-blue-100 rounded-full\">\n                  <Shield className=\"h-5 w-5 text-blue-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-lg\">\n                    {language === \"en\"\n                      ? \"AI Code Verification\"\n                      : \"Verificación de Código con IA\"}\n                  </h3>\n                </div>\n              </div>\n\n              <div className=\"space-y-3 text-sm text-gray-600\">\n                <p>\n                  {language === \"en\"\n                    ? \"Your code will be analyzed by our AI security model to detect potential malicious code or security vulnerabilities.\"\n                    : \"Tu código será analizado por nuestro modelo de IA de seguridad para detectar posible código malicioso o vulnerabilidades de seguridad.\"}\n                </p>\n\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                  <div className=\"flex items-center gap-2 text-yellow-800\">\n                    <AlertTriangle className=\"h-4 w-4\" />\n                    <span className=\"font-medium\">\n                      {language === \"en\"\n                        ? \"Token Usage Notice\"\n                        : \"Aviso de Uso de Tokens\"}\n                    </span>\n                  </div>\n                  <p className=\"text-yellow-700 text-xs mt-1\">\n                    {language === \"en\"\n                      ? \"This verification will consume approximately 50-100 tokens from your account balance.\"\n                      : \"Esta verificación consumirá aproximadamente 50-100 tokens de tu saldo de cuenta.\"}\n                  </p>\n                </div>\n\n                <p className=\"text-xs\">\n                  {language === \"en\"\n                    ? \"The verification helps ensure your bot functions safely and securely.\"\n                    : \"La verificación ayuda a asegurar que tu bot funcione de manera segura.\"}\n                </p>\n              </div>\n\n              <div className=\"flex gap-2 pt-2\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowVerificationAlert(false)}\n                  className=\"flex-1\"\n                >\n                  {language === \"en\" ? \"Cancel\" : \"Cancelar\"}\n                </Button>\n                <Button onClick={confirmVerification} className=\"flex-1\">\n                  {language === \"en\" ? \"Verify Code\" : \"Verificar Código\"}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6432, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/app/dashboard/bots/%5Bid%5D/edit/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { DashboardLayout } from \"@/components/dashboard-layout\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { ArrowLeft, Loader2, Trash2, Plus, Save, Sparkles, Send, MessageSquare } from \"lucide-react\"\nimport { useToast } from \"@/hooks/use-toast\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { useLanguage } from \"@/contexts/language-context\"\nimport { ProductModal } from \"@/components/product-modal\"\nimport { ChatWidgetPreview } from \"@/components/chat-widget-preview\"\nimport { FunctionModal } from \"@/components/function-modal\"\n\ninterface BotData {\n  id: string\n  name: string\n  type: \"web\" | \"whatsapp\"\n  status: \"online\" | \"offline\" | \"maintenance\"\n  description: string\n  welcomeMessage: string\n  primaryColor: string\n  faqs: Array<{ question: string; answer: string; category: string }>\n  products: Array<{ name: string; price: string; description: string; available: boolean; stock?: string }>\n  whatsappNumber?: string\n  apiKey?: string\n  useCase?: string\n  businessDescription?: string\n  chatSettings?: {\n    title: string\n    subtitle: string\n    primaryColor: string\n    buttonColor: string\n    bubbleColor: string\n    userBubbleColor: string\n    headerStyle: \"gradient\" | \"solid\"\n    logo?: string\n    showLogo: boolean\n    position: \"right\" | \"left\"\n    initialMessage: string\n    placeholderText: string\n  }\n}\n\nexport default function EditBotPage({ params }: { params: { id: string } }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isSaving, setIsSaving] = useState(false)\n  const [bot, setBot] = useState<BotData | null>(null)\n  const [isProductModalOpen, setIsProductModalOpen] = useState(false)\n  const [isGeneratingFaqs, setIsGeneratingFaqs] = useState(false)\n  const [isChatPreviewOpen, setIsChatPreviewOpen] = useState(false)\n  const [functions, setFunctions] = useState<any[]>([])\n  const [isFunctionModalOpen, setIsFunctionModalOpen] = useState(false)\n  const [isChatTestOpen, setIsChatTestOpen] = useState(false)\n  const [testMessages, setTestMessages] = useState([\n    {\n      id: \"1\",\n      content: bot?.welcomeMessage || \"Hello! How can I help you today?\",\n      sender: \"bot\" as const,\n      timestamp: new Date(),\n    },\n  ])\n  const [testInput, setTestInput] = useState(\"\")\n  const router = useRouter()\n  const { toast } = useToast()\n  const { t, language } = useLanguage()\n\n  // Simulate fetching bot data\n  useEffect(() => {\n    setIsLoading(true)\n    // Mock data - in a real app, you would fetch this from an API\n    setTimeout(() => {\n      setBot({\n        id: params.id,\n        name: params.id === \"1\" ? \"Support Bot\" : \"Sales Bot\",\n        type: \"web\",\n        status: \"online\",\n        description: \"Customer support chatbot for the website\",\n        welcomeMessage: \"Hello! How can I help you today?\",\n        primaryColor: \"#4f46e5\",\n        useCase: params.id === \"1\" ? \"customerSupport\" : \"onlineStore\",\n        businessDescription: \"\",\n        faqs: [\n          {\n            question: \"What are your business hours?\",\n            answer: \"Our business hours are Monday to Friday, 9am to 5pm.\",\n            category: \"General\",\n          },\n          {\n            question: \"How do I reset my password?\",\n            answer: \"You can reset your password by clicking on the 'Forgot Password' link on the login page.\",\n            category: \"Account\",\n          },\n        ],\n        products: [\n          {\n            name: \"Premium Plan\",\n            price: \"$99.99\",\n            description: \"Our premium plan includes all features and priority support.\",\n            available: true,\n            stock: \"150\",\n          },\n          {\n            name: \"Basic Plan\",\n            price: \"$49.99\",\n            description: \"Our basic plan includes essential features for small businesses.\",\n            available: true,\n          },\n        ],\n        chatSettings: {\n          title: \"ChatBot Support\",\n          subtitle: \"Virtual Assistant\",\n          primaryColor: \"#4f46e5\",\n          buttonColor: \"#4f46e5\",\n          bubbleColor: \"#f9fafb\",\n          userBubbleColor: \"#000000\",\n          headerStyle: \"gradient\",\n          showLogo: true,\n          position: \"right\",\n          initialMessage: \"Hello! How can I help you today?\",\n          placeholderText: \"Type your message...\",\n        },\n      })\n      setIsLoading(false)\n    }, 1000)\n  }, [params.id])\n\n  const handleAddFunction = (functionData: any) => {\n    setFunctions([...functions, functionData])\n  }\n\n  const handleRemoveFunction = (index: number) => {\n    const updatedFunctions = functions.filter((_, i) => i !== index)\n    setFunctions(updatedFunctions)\n  }\n\n  const handleSendTestMessage = () => {\n    if (!testInput.trim()) return\n\n    const userMessage = {\n      id: Date.now().toString(),\n      content: testInput,\n      sender: \"user\" as const,\n      timestamp: new Date(),\n    }\n\n    setTestMessages((prev) => [...prev, userMessage])\n    setTestInput(\"\")\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botMessage = {\n        id: (Date.now() + 1).toString(),\n        content:\n          \"This is a test response from your bot. In the live version, this would be processed by your AI model with the configured FAQs, products, and functions.\",\n        sender: \"bot\" as const,\n        timestamp: new Date(),\n      }\n      setTestMessages((prev) => [...prev, botMessage])\n    }, 1000)\n  }\n\n  const handleSave = async () => {\n    setIsSaving(true)\n    // Simulate saving\n    setTimeout(() => {\n      setIsSaving(false)\n      toast({\n        title: \"Changes saved\",\n        description: \"Your bot has been updated successfully.\",\n      })\n    }, 1500)\n  }\n\n  const handleAddFaq = () => {\n    if (!bot) return\n    setBot({\n      ...bot,\n      faqs: [\n        ...bot.faqs,\n        {\n          question: \"\",\n          answer: \"\",\n          category: \"General\",\n        },\n      ],\n    })\n  }\n\n  const handleUpdateFaq = (index: number, field: \"question\" | \"answer\" | \"category\", value: string) => {\n    if (!bot) return\n    const updatedFaqs = [...bot.faqs]\n    updatedFaqs[index] = { ...updatedFaqs[index], [field]: value }\n    setBot({ ...bot, faqs: updatedFaqs })\n  }\n\n  const handleRemoveFaq = (index: number) => {\n    if (!bot) return\n    const updatedFaqs = bot.faqs.filter((_, i) => i !== index)\n    setBot({ ...bot, faqs: updatedFaqs })\n  }\n\n  const handleAddProduct = (product: any, method: \"manual\" | \"api\") => {\n    if (!bot) return\n    if (method === \"manual\") {\n      setBot({\n        ...bot,\n        products: [...bot.products, product],\n      })\n    } else {\n      // En un caso real, aquí se procesaría la configuración de la API\n      toast({\n        title: language === \"en\" ? \"API Connected\" : \"API Conectada\",\n        description:\n          language === \"en\"\n            ? \"Your product API has been connected successfully. Products will be imported automatically.\"\n            : \"Tu API de productos ha sido conectada exitosamente. Los productos se importarán automáticamente.\",\n      })\n    }\n  }\n\n  const handleRemoveProduct = (index: number) => {\n    if (!bot) return\n    const updatedProducts = bot.products.filter((_, i) => i !== index)\n    setBot({ ...bot, products: updatedProducts })\n  }\n\n  const handleGenerateCode = () => {\n    toast({\n      title: \"Code generated\",\n      description: \"The code has been copied to your clipboard.\",\n    })\n  }\n\n  const handleGenerateFaqs = () => {\n    if (!bot || !bot.businessDescription) {\n      toast({\n        title: language === \"en\" ? \"Missing information\" : \"Información faltante\",\n        description:\n          language === \"en\"\n            ? \"Please provide a business description to generate FAQs.\"\n            : \"Por favor proporciona una descripción del negocio para generar preguntas frecuentes.\",\n        variant: \"destructive\",\n      })\n      return\n    }\n\n    setIsGeneratingFaqs(true)\n\n    // Simulate generating FAQs with AI\n    setTimeout(() => {\n      const generatedFaqs = [\n        {\n          question: language === \"en\" ? \"What makes your products unique?\" : \"¿Qué hace que tus productos sean únicos?\",\n          answer:\n            language === \"en\"\n              ? \"Our products are designed with cutting-edge technology and user-centric approach, making them intuitive and powerful.\"\n              : \"Nuestros productos están diseñados con tecnología de vanguardia y un enfoque centrado en el usuario, haciéndolos intuitivos y potentes.\",\n          category: \"Products\",\n        },\n        {\n          question: language === \"en\" ? \"Do you offer customer support?\" : \"¿Ofrecen soporte al cliente?\",\n          answer:\n            language === \"en\"\n              ? \"Yes, we provide 24/7 customer support through various channels including chat, email, and phone.\"\n              : \"Sí, proporcionamos soporte al cliente 24/7 a través de varios canales, incluyendo chat, correo electrónico y teléfono.\",\n          category: \"Support\",\n        },\n        {\n          question: language === \"en\" ? \"What payment methods do you accept?\" : \"¿Qué métodos de pago aceptan?\",\n          answer:\n            language === \"en\"\n              ? \"We accept all major credit cards, PayPal, and bank transfers. For enterprise clients, we also offer invoicing options.\"\n              : \"Aceptamos todas las tarjetas de crédito principales, PayPal y transferencias bancarias. Para clientes empresariales, también ofrecemos opciones de facturación.\",\n          category: \"Billing\",\n        },\n      ]\n\n      if (bot) {\n        setBot({\n          ...bot,\n          faqs: [...bot.faqs, ...generatedFaqs],\n        })\n      }\n\n      setIsGeneratingFaqs(false)\n\n      toast({\n        title: language === \"en\" ? \"FAQs Generated\" : \"Preguntas Frecuentes Generadas\",\n        description:\n          language === \"en\"\n            ? \"AI has generated new FAQs based on your business description.\"\n            : \"La IA ha generado nuevas preguntas frecuentes basadas en la descripción de tu negocio.\",\n      })\n    }, 2000)\n  }\n\n  const handleUpdateChatSettings = (field: string, value: any) => {\n    if (!bot) return\n    setBot({\n      ...bot,\n      chatSettings: {\n        ...bot.chatSettings!,\n        [field]: value,\n      },\n    })\n  }\n\n  function adjustColor(hex: string, amount: number) {\n    return (\n      \"#\" +\n      hex\n        .replace(/^#/, \"\")\n        .replace(/../g, (color) =>\n          (\"0\" + Math.min(255, Math.max(0, Number.parseInt(color, 16) + amount)).toString(16)).substr(-2),\n        )\n    )\n  }\n\n  if (isLoading) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex h-full items-center justify-center\">\n          <div className=\"flex flex-col items-center gap-2\">\n            <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n            <p>Loading bot data...</p>\n          </div>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  if (!bot) {\n    return (\n      <DashboardLayout>\n        <div className=\"flex h-full items-center justify-center\">\n          <div className=\"text-center\">\n            <h2 className=\"text-xl font-bold tracking-tight\">Bot not found</h2>\n            <p className=\"text-muted-foreground\">The bot you're looking for doesn't exist or you don't have access.</p>\n            <Button className=\"mt-4\" onClick={() => router.push(\"/dashboard/bots\")}>\n              Back to Bots\n            </Button>\n          </div>\n        </div>\n      </DashboardLayout>\n    )\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"flex flex-col gap-4 p-2 sm:p-4 md:gap-8 md:p-8\">\n        <div className=\"flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Button variant=\"outline\" size=\"icon\" onClick={() => router.back()} type=\"button\">\n              <ArrowLeft className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Back</span>\n            </Button>\n            <div>\n              <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                <h1 className=\"text-2xl sm:text-3xl font-bold tracking-tight\">{bot.name}</h1>\n                <Badge\n                  variant={bot.status === \"online\" ? \"default\" : bot.status === \"maintenance\" ? \"outline\" : \"secondary\"}\n                >\n                  {bot.status.charAt(0).toUpperCase() + bot.status.slice(1)}\n                </Badge>\n              </div>\n              <p className=\"text-muted-foreground text-sm\">Manage your chatbot settings, FAQs, and products.</p>\n            </div>\n          </div>\n          <div className=\"flex flex-col sm:flex-row gap-2 w-full sm:w-auto\">\n            <Button\n              variant=\"outline\"\n              onClick={() => router.push(`/dashboard/bots/${bot.id}/preview`)}\n              type=\"button\"\n              className=\"w-full sm:w-auto\"\n            >\n              Preview\n            </Button>\n            <Button onClick={handleSave} disabled={isSaving} type=\"button\" className=\"w-full sm:w-auto\">\n              {isSaving ? (\n                <>\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </>\n              )}\n            </Button>\n          </div>\n        </div>\n\n        <Tabs defaultValue=\"basic\" className=\"space-y-4\">\n          {/* Mobile-optimized TabsList */}\n          <div className=\"w-full overflow-hidden\">\n            <TabsList className=\"w-full h-auto p-1 grid grid-cols-3 md:grid-cols-6 gap-0.5 bg-muted rounded-lg\">\n              <TabsTrigger\n                value=\"basic\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Basic\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"faqs\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                FAQs\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"products\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Products\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"functions\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Functions\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"chat-customization\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Chat\n              </TabsTrigger>\n              <TabsTrigger\n                value=\"test-chat\"\n                className=\"text-xs sm:text-sm px-1 sm:px-3 py-2 rounded-md data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm transition-all\"\n              >\n                Test\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          <TabsContent value=\"basic\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Bot Information</CardTitle>\n                <CardDescription>Basic information about your chatbot.</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bot-name\">Bot Name</Label>\n                  <Input id=\"bot-name\" value={bot.name} onChange={(e) => setBot({ ...bot, name: e.target.value })} />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bot-description\">Description</Label>\n                  <Textarea\n                    id=\"bot-description\"\n                    value={bot.description}\n                    onChange={(e) => setBot({ ...bot, description: e.target.value })}\n                    className=\"min-h-[100px]\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"welcome-message\">Welcome Message</Label>\n                  <Textarea\n                    id=\"welcome-message\"\n                    value={bot.welcomeMessage}\n                    onChange={(e) => setBot({ ...bot, welcomeMessage: e.target.value })}\n                    className=\"min-h-[100px]\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"bot-status\">Status</Label>\n                  <Select\n                    value={bot.status}\n                    onValueChange={(value) => setBot({ ...bot, status: value as \"online\" | \"offline\" | \"maintenance\" })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"online\">Online</SelectItem>\n                      <SelectItem value=\"offline\">Offline</SelectItem>\n                      <SelectItem value=\"maintenance\">Maintenance</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                {bot.type === \"whatsapp\" && (\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"whatsapp-number\">WhatsApp Business Number</Label>\n                    <Input\n                      id=\"whatsapp-number\"\n                      value={bot.whatsappNumber || \"\"}\n                      onChange={(e) => setBot({ ...bot, whatsappNumber: e.target.value })}\n                      placeholder=\"+1234567890\"\n                    />\n                  </div>\n                )}\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"primary-color\">Primary Color</Label>\n                  <div className=\"flex gap-2\">\n                    <Input\n                      id=\"primary-color\"\n                      type=\"color\"\n                      value={bot.primaryColor}\n                      onChange={(e) => setBot({ ...bot, primaryColor: e.target.value })}\n                      className=\"w-12 h-10 p-1\"\n                    />\n                    <Input\n                      id=\"primary-color-hex\"\n                      value={bot.primaryColor}\n                      onChange={(e) => setBot({ ...bot, primaryColor: e.target.value })}\n                      className=\"flex-1\"\n                    />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"faqs\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n                <div>\n                  <CardTitle>Frequently Asked Questions</CardTitle>\n                  <CardDescription>Add questions and answers that your chatbot will respond to.</CardDescription>\n                </div>\n                <div className=\"flex flex-col sm:flex-row gap-2 w-full sm:w-auto\">\n                  <Button onClick={handleAddFaq} className=\"gap-1 w-full sm:w-auto\" type=\"button\">\n                    <Plus className=\"h-4 w-4\" />\n                    Add FAQ\n                  </Button>\n                  <Button\n                    onClick={handleGenerateFaqs}\n                    variant=\"outline\"\n                    className=\"gap-1 w-full sm:w-auto\"\n                    disabled={isGeneratingFaqs}\n                    type=\"button\"\n                  >\n                    {isGeneratingFaqs ? (\n                      <>\n                        <Loader2 className=\"h-4 w-4 animate-spin\" />\n                        Generating...\n                      </>\n                    ) : (\n                      <>\n                        <Sparkles className=\"h-4 w-4\" />\n                        Generate FAQs\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-4\">\n                  <Label htmlFor=\"business-description\">Business Description</Label>\n                  <Textarea\n                    id=\"business-description\"\n                    value={bot.businessDescription || \"\"}\n                    onChange={(e) => setBot({ ...bot, businessDescription: e.target.value })}\n                    placeholder={\n                      language === \"en\"\n                        ? \"Provide a clear description of your business to help generate relevant FAQs...\"\n                        : \"Proporciona una descripción clara de tu negocio para ayudar a generar preguntas frecuentes relevantes...\"\n                    }\n                    className=\"min-h-[100px]\"\n                  />\n                  <p className=\"text-sm text-muted-foreground\">\n                    {language === \"en\"\n                      ? \"A detailed description helps our AI generate more accurate and relevant FAQs for your business.\"\n                      : \"Una descripción detallada ayuda a nuestra IA a generar preguntas frecuentes más precisas y relevantes para tu negocio.\"}\n                  </p>\n                </div>\n\n                <Accordion type=\"multiple\" className=\"space-y-4\">\n                  {bot.faqs.map((faq, index) => (\n                    <AccordionItem key={index} value={`faq-${index}`} className=\"border rounded-md p-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <AccordionTrigger className=\"hover:no-underline flex-1 text-left\">\n                          {faq.question || \"New FAQ Item\"}\n                        </AccordionTrigger>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            handleRemoveFaq(index)\n                          }}\n                          className=\"h-8 w-8 text-muted-foreground hover:text-destructive flex-shrink-0\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">Remove FAQ</span>\n                        </Button>\n                      </div>\n                      <AccordionContent className=\"space-y-4 pt-2\">\n                        <div className=\"space-y-2\">\n                          <Label htmlFor={`faq-category-${index}`}>Category</Label>\n                          <Select\n                            value={faq.category}\n                            onValueChange={(value) => handleUpdateFaq(index, \"category\", value)}\n                          >\n                            <SelectTrigger id={`faq-category-${index}`}>\n                              <SelectValue placeholder=\"Select category\" />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"General\">General</SelectItem>\n                              <SelectItem value=\"Account\">Account</SelectItem>\n                              <SelectItem value=\"Billing\">Billing</SelectItem>\n                              <SelectItem value=\"Products\">Products</SelectItem>\n                              <SelectItem value=\"Shipping\">Shipping</SelectItem>\n                              <SelectItem value=\"Returns\">Returns</SelectItem>\n                              <SelectItem value=\"Support\">Support</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label htmlFor={`faq-question-${index}`}>Question</Label>\n                          <Input\n                            id={`faq-question-${index}`}\n                            value={faq.question}\n                            onChange={(e) => handleUpdateFaq(index, \"question\", e.target.value)}\n                            placeholder=\"What are your business hours?\"\n                          />\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label htmlFor={`faq-answer-${index}`}>Answer</Label>\n                          <Textarea\n                            id={`faq-answer-${index}`}\n                            value={faq.answer}\n                            onChange={(e) => handleUpdateFaq(index, \"answer\", e.target.value)}\n                            placeholder=\"Our business hours are Monday to Friday, 9am to 5pm.\"\n                            className=\"min-h-[100px]\"\n                          />\n                        </div>\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n                {bot.faqs.length === 0 && (\n                  <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                    <p className=\"text-muted-foreground\">No FAQs added yet.</p>\n                    <Button onClick={handleAddFaq} variant=\"outline\" className=\"mt-4 gap-1\" type=\"button\">\n                      <Plus className=\"h-4 w-4\" />\n                      Add Your First FAQ\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"products\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n                <div>\n                  <CardTitle>Products & Services</CardTitle>\n                  <CardDescription>Add products or services that your chatbot can recommend.</CardDescription>\n                </div>\n                <Button onClick={() => setIsProductModalOpen(true)} className=\"gap-1 w-full sm:w-auto\" type=\"button\">\n                  <Plus className=\"h-4 w-4\" />\n                  Add Product\n                </Button>\n              </CardHeader>\n              <CardContent>\n                <Accordion type=\"multiple\" className=\"space-y-4\">\n                  {bot.products.map((product, index) => (\n                    <AccordionItem key={index} value={`product-${index}`} className=\"border rounded-md p-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <AccordionTrigger className=\"hover:no-underline flex-1 text-left\">\n                          <div className=\"truncate\">\n                            {product.name || \"New Product\"}\n                            {product.price && ` - ${product.price}`}\n                            {product.stock && ` (Stock: ${product.stock})`}\n                          </div>\n                        </AccordionTrigger>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            handleRemoveProduct(index)\n                          }}\n                          className=\"h-8 w-8 text-muted-foreground hover:text-destructive flex-shrink-0\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                          <span className=\"sr-only\">Remove Product</span>\n                        </Button>\n                      </div>\n                      <AccordionContent className=\"space-y-4 pt-2\">\n                        <div className=\"grid gap-4 md:grid-cols-2\">\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`product-name-${index}`}>Product Name</Label>\n                            <Input\n                              id={`product-name-${index}`}\n                              value={product.name}\n                              onChange={(e) => {\n                                const updatedProducts = [...bot.products]\n                                updatedProducts[index] = { ...updatedProducts[index], name: e.target.value }\n                                setBot({ ...bot, products: updatedProducts })\n                              }}\n                              placeholder=\"Premium Plan\"\n                            />\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`product-price-${index}`}>Price</Label>\n                            <Input\n                              id={`product-price-${index}`}\n                              value={product.price}\n                              onChange={(e) => {\n                                const updatedProducts = [...bot.products]\n                                updatedProducts[index] = { ...updatedProducts[index], price: e.target.value }\n                                setBot({ ...bot, products: updatedProducts })\n                              }}\n                              placeholder=\"$99.99\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"space-y-2\">\n                          <Label htmlFor={`product-description-${index}`}>Description</Label>\n                          <Textarea\n                            id={`product-description-${index}`}\n                            value={product.description}\n                            onChange={(e) => {\n                              const updatedProducts = [...bot.products]\n                              updatedProducts[index] = { ...updatedProducts[index], description: e.target.value }\n                              setBot({ ...bot, products: updatedProducts })\n                            }}\n                            placeholder=\"Our premium plan includes all features...\"\n                            className=\"min-h-[100px]\"\n                          />\n                        </div>\n                        <div className=\"grid gap-4 md:grid-cols-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Switch\n                              id={`product-available-${index}`}\n                              checked={product.available}\n                              onCheckedChange={(checked) => {\n                                const updatedProducts = [...bot.products]\n                                updatedProducts[index] = { ...updatedProducts[index], available: checked }\n                                setBot({ ...bot, products: updatedProducts })\n                              }}\n                            />\n                            <Label htmlFor={`product-available-${index}`}>Available</Label>\n                          </div>\n                          <div className=\"space-y-2\">\n                            <Label htmlFor={`product-stock-${index}`}>Stock (Optional)</Label>\n                            <Input\n                              id={`product-stock-${index}`}\n                              type=\"number\"\n                              min=\"0\"\n                              value={product.stock || \"\"}\n                              onChange={(e) => {\n                                const updatedProducts = [...bot.products]\n                                updatedProducts[index] = { ...updatedProducts[index], stock: e.target.value }\n                                setBot({ ...bot, products: updatedProducts })\n                              }}\n                              placeholder=\"0\"\n                            />\n                          </div>\n                        </div>\n                      </AccordionContent>\n                    </AccordionItem>\n                  ))}\n                </Accordion>\n                {bot.products.length === 0 && (\n                  <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                    <p className=\"text-muted-foreground\">No products added yet.</p>\n                    <Button\n                      onClick={() => setIsProductModalOpen(true)}\n                      variant=\"outline\"\n                      className=\"mt-4 gap-1\"\n                      type=\"button\"\n                    >\n                      <Plus className=\"h-4 w-4\" />\n                      Add Your First Product\n                    </Button>\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"functions\" className=\"space-y-4\">\n            <Card>\n              <CardHeader className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-2 sm:space-y-0\">\n                <div>\n                  <CardTitle>Bot Functions & Services</CardTitle>\n                  <CardDescription>Add custom functions and services that your bot can execute.</CardDescription>\n                </div>\n                <Button onClick={() => setIsFunctionModalOpen(true)} className=\"gap-1 w-full sm:w-auto\" type=\"button\">\n                  <Plus className=\"h-4 w-4\" />\n                  Add Function\n                </Button>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {functions.length > 0 ? (\n                    <Accordion type=\"multiple\" className=\"space-y-4\">\n                      {functions.map((func, index) => (\n                        <AccordionItem key={index} value={`function-${index}`} className=\"border rounded-md p-2\">\n                          <div className=\"flex items-center justify-between\">\n                            <AccordionTrigger className=\"hover:no-underline flex-1 text-left\">\n                              <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                                <Badge variant={func.type === \"api\" ? \"default\" : \"secondary\"}>\n                                  {func.type === \"api\" ? \"API\" : \"Custom\"}\n                                </Badge>\n                                <span className=\"truncate\">{func.name}</span>\n                              </div>\n                            </AccordionTrigger>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              onClick={(e) => {\n                                e.stopPropagation()\n                                handleRemoveFunction(index)\n                              }}\n                              className=\"h-8 w-8 text-muted-foreground hover:text-destructive flex-shrink-0\"\n                              type=\"button\"\n                            >\n                              <Trash2 className=\"h-4 w-4\" />\n                              <span className=\"sr-only\">Remove Function</span>\n                            </Button>\n                          </div>\n                          <AccordionContent className=\"space-y-4 pt-2\">\n                            <div className=\"space-y-2\">\n                              <p className=\"text-sm text-muted-foreground\">{func.description}</p>\n                              {func.type === \"api\" && func.api && (\n                                <div className=\"space-y-2\">\n                                  <div className=\"flex flex-col sm:flex-row sm:items-center gap-2\">\n                                    <Badge variant=\"outline\">{func.api.method}</Badge>\n                                    <code className=\"text-xs bg-muted px-2 py-1 rounded break-all\">{func.api.url}</code>\n                                  </div>\n                                  {func.api.parameters && func.api.parameters.length > 0 && (\n                                    <div>\n                                      <p className=\"text-sm font-medium mb-1\">Parameters:</p>\n                                      <div className=\"flex flex-wrap gap-1\">\n                                        {func.api.parameters.map((param, paramIndex) => (\n                                          <Badge key={paramIndex} variant=\"outline\" className=\"text-xs\">\n                                            {param.name} ({param.type}){param.required && \"*\"}\n                                          </Badge>\n                                        ))}\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              )}\n                              {func.type === \"custom\" && (\n                                <div className=\"bg-muted p-3 rounded-md\">\n                                  <p className=\"text-xs font-medium mb-1\">Custom Code:</p>\n                                  <pre className=\"text-xs overflow-x-auto whitespace-pre-wrap\">\n                                    {func.code?.substring(0, 200)}\n                                    {func.code && func.code.length > 200 && \"...\"}\n                                  </pre>\n                                </div>\n                              )}\n                            </div>\n                          </AccordionContent>\n                        </AccordionItem>\n                      ))}\n                    </Accordion>\n                  ) : (\n                    <div className=\"flex flex-col items-center justify-center py-8 text-center\">\n                      <p className=\"text-muted-foreground\">No functions added yet.</p>\n                      <Button\n                        onClick={() => setIsFunctionModalOpen(true)}\n                        variant=\"outline\"\n                        className=\"mt-4 gap-1\"\n                        type=\"button\"\n                      >\n                        <Plus className=\"h-4 w-4\" />\n                        Add Your First Function\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"chat-customization\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Chat Widget Customization</CardTitle>\n                <CardDescription>Customize the appearance of your chat widget for your website.</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-6\">\n                <div className=\"grid gap-6 md:grid-cols-2\">\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"chat-title\">Chat Title</Label>\n                      <Input\n                        id=\"chat-title\"\n                        value={bot.chatSettings?.title || \"\"}\n                        onChange={(e) => handleUpdateChatSettings(\"title\", e.target.value)}\n                        placeholder=\"Support Chat\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"chat-subtitle\">Chat Subtitle</Label>\n                      <Input\n                        id=\"chat-subtitle\"\n                        value={bot.chatSettings?.subtitle || \"\"}\n                        onChange={(e) => handleUpdateChatSettings(\"subtitle\", e.target.value)}\n                        placeholder=\"Virtual Assistant\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"initial-message\">Initial Message</Label>\n                      <Textarea\n                        id=\"initial-message\"\n                        value={bot.chatSettings?.initialMessage || \"\"}\n                        onChange={(e) => handleUpdateChatSettings(\"initialMessage\", e.target.value)}\n                        placeholder=\"Hello! How can I help you today?\"\n                        className=\"min-h-[80px]\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"placeholder-text\">Input Placeholder</Label>\n                      <Input\n                        id=\"placeholder-text\"\n                        value={bot.chatSettings?.placeholderText || \"\"}\n                        onChange={(e) => handleUpdateChatSettings(\"placeholderText\", e.target.value)}\n                        placeholder=\"Type your message...\"\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"header-style\">Header Style</Label>\n                      <Select\n                        value={bot.chatSettings?.headerStyle || \"gradient\"}\n                        onValueChange={(value) => handleUpdateChatSettings(\"headerStyle\", value)}\n                      >\n                        <SelectTrigger id=\"header-style\">\n                          <SelectValue placeholder=\"Select style\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"gradient\">Gradient</SelectItem>\n                          <SelectItem value=\"solid\">Solid Color</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"position\">Widget Position</Label>\n                      <Select\n                        value={bot.chatSettings?.position || \"right\"}\n                        onValueChange={(value) => handleUpdateChatSettings(\"position\", value)}\n                      >\n                        <SelectTrigger id=\"position\">\n                          <SelectValue placeholder=\"Select position\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"right\">Bottom Right</SelectItem>\n                          <SelectItem value=\"left\">Bottom Left</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"show-logo\"\n                        checked={bot.chatSettings?.showLogo || false}\n                        onCheckedChange={(checked) => handleUpdateChatSettings(\"showLogo\", checked)}\n                      />\n                      <Label htmlFor=\"show-logo\">Show Logo</Label>\n                    </div>\n\n                    {bot.chatSettings?.showLogo && (\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"logo-url\">Logo URL</Label>\n                        <Input\n                          id=\"logo-url\"\n                          value={bot.chatSettings?.logo || \"\"}\n                          onChange={(e) => handleUpdateChatSettings(\"logo\", e.target.value)}\n                          placeholder=\"https://example.com/logo.png\"\n                        />\n                        <p className=\"text-xs text-muted-foreground\">\n                          {language === \"en\"\n                            ? \"Enter the URL of your logo image. Recommended size: 40x40px.\"\n                            : \"Ingresa la URL de tu imagen de logo. Tamaño recomendado: 40x40px.\"}\n                        </p>\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"primary-color\">Primary Color</Label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          id=\"primary-color\"\n                          type=\"color\"\n                          value={bot.chatSettings?.primaryColor || \"#4f46e5\"}\n                          onChange={(e) => handleUpdateChatSettings(\"primaryColor\", e.target.value)}\n                          className=\"w-12 h-10 p-1\"\n                        />\n                        <Input\n                          id=\"primary-color-hex\"\n                          value={bot.chatSettings?.primaryColor || \"#4f46e5\"}\n                          onChange={(e) => handleUpdateChatSettings(\"primaryColor\", e.target.value)}\n                          className=\"flex-1\"\n                        />\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Used for the header background and accent elements.\"\n                          : \"Usado para el fondo del encabezado y elementos de acento.\"}\n                      </p>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"button-color\">Button Color</Label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          id=\"button-color\"\n                          type=\"color\"\n                          value={bot.chatSettings?.buttonColor || \"#4f46e5\"}\n                          onChange={(e) => handleUpdateChatSettings(\"buttonColor\", e.target.value)}\n                          className=\"w-12 h-10 p-1\"\n                        />\n                        <Input\n                          id=\"button-color-hex\"\n                          value={bot.chatSettings?.buttonColor || \"#4f46e5\"}\n                          onChange={(e) => handleUpdateChatSettings(\"buttonColor\", e.target.value)}\n                          className=\"flex-1\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"bubble-color\">Bot Message Color</Label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          id=\"bubble-color\"\n                          type=\"color\"\n                          value={bot.chatSettings?.bubbleColor || \"#f9fafb\"}\n                          onChange={(e) => handleUpdateChatSettings(\"bubbleColor\", e.target.value)}\n                          className=\"w-12 h-10 p-1\"\n                        />\n                        <Input\n                          id=\"bubble-color-hex\"\n                          value={bot.chatSettings?.bubbleColor || \"#f9fafb\"}\n                          onChange={(e) => handleUpdateChatSettings(\"bubbleColor\", e.target.value)}\n                          className=\"flex-1\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"user-bubble-color\">User Message Color</Label>\n                      <div className=\"flex gap-2\">\n                        <Input\n                          id=\"user-bubble-color\"\n                          type=\"color\"\n                          value={bot.chatSettings?.userBubbleColor || \"#000000\"}\n                          onChange={(e) => handleUpdateChatSettings(\"userBubbleColor\", e.target.value)}\n                          className=\"w-12 h-10 p-1\"\n                        />\n                        <Input\n                          id=\"user-bubble-color-hex\"\n                          value={bot.chatSettings?.userBubbleColor || \"#000000\"}\n                          onChange={(e) => handleUpdateChatSettings(\"userBubbleColor\", e.target.value)}\n                          className=\"flex-1\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"mt-6\">\n                      <Button\n                        onClick={() => setIsChatPreviewOpen(!isChatPreviewOpen)}\n                        variant=\"outline\"\n                        className=\"w-full\"\n                        type=\"button\"\n                      >\n                        {isChatPreviewOpen ? \"Hide Preview\" : \"Show Preview\"}\n                      </Button>\n                    </div>\n\n                    {isChatPreviewOpen && (\n                      <div className=\"mt-4 border rounded-lg p-4 bg-gray-50 dark:bg-gray-900\">\n                        <ChatWidgetPreview settings={bot.chatSettings} />\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"test-chat\" className=\"space-y-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Test Your Bot</CardTitle>\n                <CardDescription>Test your bot's responses and functionality in real-time.</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"border rounded-lg overflow-hidden bg-background\">\n                  {/* Chat Header */}\n                  <div\n                    className=\"p-4 border-b\"\n                    style={{\n                      background:\n                        bot.chatSettings?.headerStyle === \"gradient\"\n                          ? `linear-gradient(to right, ${bot.chatSettings.primaryColor}, ${adjustColor(bot.chatSettings.primaryColor, -30)})`\n                          : bot.chatSettings?.primaryColor || \"#4f46e5\",\n                    }}\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      {bot.chatSettings?.showLogo && (\n                        <div className=\"bg-white/20 rounded-full p-2\">\n                          <MessageSquare className=\"h-5 w-5 text-white\" />\n                        </div>\n                      )}\n                      <div>\n                        <h3 className=\"font-medium text-white\">{bot.chatSettings?.title || \"Test Bot\"}</h3>\n                        <p className=\"text-sm text-gray-200\">{bot.chatSettings?.subtitle || \"Testing Mode\"}</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Chat Messages */}\n                  <div className=\"h-96 overflow-y-auto p-4 space-y-4 bg-gray-50 dark:bg-gray-950\">\n                    {testMessages.map((message) => (\n                      <div\n                        key={message.id}\n                        className={`flex ${message.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`}\n                      >\n                        {message.sender === \"bot\" && (\n                          <div className=\"mr-2 flex-shrink-0\">\n                            <div\n                              className=\"rounded-full h-8 w-8 flex items-center justify-center\"\n                              style={{ background: bot.chatSettings?.primaryColor || \"#4f46e5\" }}\n                            >\n                              <MessageSquare className=\"h-4 w-4 text-white\" />\n                            </div>\n                          </div>\n                        )}\n                        <div\n                          className={`max-w-[80%] sm:max-w-[70%] p-3 rounded-lg`}\n                          style={{\n                            background:\n                              message.sender === \"user\"\n                                ? bot.chatSettings?.userBubbleColor || \"#000000\"\n                                : bot.chatSettings?.bubbleColor || \"#f9fafb\",\n                            color: message.sender === \"user\" ? \"#fff\" : \"#000\",\n                          }}\n                        >\n                          <p className=\"text-sm\">{message.content}</p>\n                          <p className=\"text-xs mt-1 opacity-60\">\n                            {message.timestamp.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\n                          </p>\n                        </div>\n                        {message.sender === \"user\" && (\n                          <div className=\"ml-2 flex-shrink-0\">\n                            <div className=\"bg-gray-300 dark:bg-gray-700 rounded-full h-8 w-8 flex items-center justify-center\">\n                              <span className=\"text-xs font-medium text-gray-800 dark:text-white\">You</span>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n\n                  {/* Chat Input */}\n                  <div className=\"p-4 border-t bg-background\">\n                    <div className=\"flex gap-2\">\n                      <Input\n                        value={testInput}\n                        onChange={(e) => setTestInput(e.target.value)}\n                        placeholder={bot.chatSettings?.placeholderText || \"Type your message...\"}\n                        className=\"flex-1\"\n                        onKeyDown={(e) => {\n                          if (e.key === \"Enter\") {\n                            e.preventDefault()\n                            handleSendTestMessage()\n                          }\n                        }}\n                      />\n                      <Button\n                        type=\"button\"\n                        onClick={handleSendTestMessage}\n                        disabled={!testInput.trim()}\n                        style={{ background: bot.chatSettings?.buttonColor || \"#4f46e5\" }}\n                        className=\"text-white\"\n                      >\n                        <Send className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      <ProductModal open={isProductModalOpen} onOpenChange={setIsProductModalOpen} onAddProduct={handleAddProduct} />\n      <FunctionModal\n        open={isFunctionModalOpen}\n        onOpenChange={setIsFunctionModalOpen}\n        onAddFunction={handleAddFunction}\n        language={language as \"en\" | \"es\"}\n      />\n    </DashboardLayout>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}