{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,wKACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n      {children}\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,kKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,kKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,kKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,kKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;AAGT,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;kCAET,8OAAC,kKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;oBAE3B;;;;;;;;;;;;;AAIP,aAAa,WAAW,GAAG,kKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG,kKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG,kKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/mode-toggle.tsx"],"sourcesContent":["\"use client\"\nimport { Moon, Sun } from \"lucide-react\"\nimport { useTheme } from \"next-themes\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"@/components/ui/dropdown-menu\"\n\nexport function ModeToggle() {\n  const { setTheme } = useTheme()\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onClick={() => setTheme(\"light\")}>Light</DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"dark\")}>Dark</DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"system\")}>System</DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  )\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAEA;AACA;AALA;;;;;;AAOO,SAAS;IACd,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAE5B,qBACE,8OAAC,qIAAA,CAAA,eAAY;;0BACX,8OAAC,qIAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,8OAAC,2HAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,MAAK;;sCAC7B,8OAAC,gMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;sCACf,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAG9B,8OAAC,qIAAA,CAAA,sBAAmB;gBAAC,OAAM;;kCACzB,8OAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAU;;;;;;kCACpD,8OAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAS;;;;;;kCACnD,8OAAC,qIAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAW;;;;;;;;;;;;;;;;;;AAI7D","debugId":null}},
    {"offset": {"line": 640, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Portal>\n    <TooltipPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </TooltipPrimitive.Portal>\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,mKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,mKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,mKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,8OAAC,mKAAA,CAAA,SAAuB;kBACtB,cAAA,8OAAC,mKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,YAAY;YACZ,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uaACA;YAED,GAAG,KAAK;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,mKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/token-counter-compact.tsx"],"sourcesContent":["\"use client\"\n\nimport { Badge } from \"@/components/ui/badge\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\nimport { Zap } from \"lucide-react\"\n\ninterface TokenCounterCompactProps {\n  inputTokens: number\n  outputTokens: number\n  maxTokens: number\n}\n\nexport function TokenCounterCompact({ inputTokens, outputTokens, maxTokens }: TokenCounterCompactProps) {\n  const totalTokens = inputTokens + outputTokens\n  const percentage = (totalTokens / maxTokens) * 100\n\n  const getVariant = () => {\n    if (percentage >= 90) return \"destructive\"\n    if (percentage >= 70) return \"outline\"\n    return \"secondary\"\n  }\n\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <div className=\"flex items-center gap-1 cursor-help\">\n            <Zap className=\"h-4 w-4 text-primary\" />\n            <Badge variant={getVariant()} className=\"text-xs px-2 py-0 h-5\">\n              {Math.round(percentage)}%\n            </Badge>\n          </div>\n        </TooltipTrigger>\n        <TooltipContent side=\"bottom\" className=\"flex flex-col gap-1 p-2\">\n          <div className=\"text-xs font-medium\">Token Usage</div>\n          <div className=\"grid grid-cols-2 gap-x-3 gap-y-1 text-xs\">\n            <span className=\"text-muted-foreground\">Input:</span>\n            <span className=\"text-right\">{inputTokens.toLocaleString()}</span>\n            <span className=\"text-muted-foreground\">Output:</span>\n            <span className=\"text-right\">{outputTokens.toLocaleString()}</span>\n            <span className=\"text-muted-foreground\">Total:</span>\n            <span className=\"text-right\">{totalTokens.toLocaleString()}</span>\n            <span className=\"text-muted-foreground\">Limit:</span>\n            <span className=\"text-right\">{maxTokens.toLocaleString()}</span>\n          </div>\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYO,SAAS,oBAAoB,EAAE,WAAW,EAAE,YAAY,EAAE,SAAS,EAA4B;IACpG,MAAM,cAAc,cAAc;IAClC,MAAM,aAAa,AAAC,cAAc,YAAa;IAE/C,MAAM,aAAa;QACjB,IAAI,cAAc,IAAI,OAAO;QAC7B,IAAI,cAAc,IAAI,OAAO;QAC7B,OAAO;IACT;IAEA,qBACE,8OAAC,4HAAA,CAAA,kBAAe;kBACd,cAAA,8OAAC,4HAAA,CAAA,UAAO;;8BACN,8OAAC,4HAAA,CAAA,iBAAc;oBAAC,OAAO;8BACrB,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;0CACf,8OAAC,0HAAA,CAAA,QAAK;gCAAC,SAAS;gCAAc,WAAU;;oCACrC,KAAK,KAAK,CAAC;oCAAY;;;;;;;;;;;;;;;;;;8BAI9B,8OAAC,4HAAA,CAAA,iBAAc;oBAAC,MAAK;oBAAS,WAAU;;sCACtC,8OAAC;4BAAI,WAAU;sCAAsB;;;;;;sCACrC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,YAAY,cAAc;;;;;;8CACxD,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,aAAa,cAAc;;;;;;8CACzD,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,YAAY,cAAc;;;;;;8CACxD,8OAAC;oCAAK,WAAU;8CAAwB;;;;;;8CACxC,8OAAC;oCAAK,WAAU;8CAAc,UAAU,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMlE","debugId":null}},
    {"offset": {"line": 849, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/dashboard-layout.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\";\nimport { Globe, Check } from \"lucide-react\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname, useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n  Bot,\n  LayoutDashboard,\n  Settings,\n  HelpCircle,\n  BarChart3,\n  Bell,\n  LogOut,\n  Menu,\n  X,\n  Search,\n} from \"lucide-react\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTitle,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport { Input } from \"@/components/ui/input\";\nimport { ModeToggle } from \"@/components/mode-toggle\";\nimport { useLanguage } from \"@/contexts/language-context\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TokenCounterCompact } from \"@/components/token-counter-compact\";\nimport { signOut, useSession } from \"next-auth/react\";\n\ninterface DashboardLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function DashboardLayout({ children }: DashboardLayoutProps) {\n  const pathname = usePathname();\n  const router = useRouter();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [hasNotifications, setHasNotifications] = useState(true);\n  const { t, language, setLanguage } = useLanguage();\n  const { data: session } = useSession();\n\n  const [tokenUsage, setTokenUsage] = useState({\n    input: 1250,\n    output: 890,\n    maxTokens: 10000,\n  });\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const langParam = urlParams.get(\"lang\");\n\n    if (langParam === \"en\" || langParam === \"es\") {\n      setLanguage(langParam);\n    } else if (language !== \"es\") {\n      setLanguage(\"es\");\n    }\n  }, []);\n\n  const changeLanguageWithUrl = (lang: \"en\" | \"es\") => {\n    setLanguage(lang);\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(\"lang\", lang);\n    const newUrl = `${window.location.pathname}?${urlParams.toString()}`;\n    window.history.pushState({}, \"\", newUrl);\n  };\n\n  const routes = [\n    {\n      href: \"/dashboard\",\n      label: t(\"dashboard\"),\n      icon: LayoutDashboard,\n      active: pathname === \"/dashboard\",\n    },\n    {\n      href: \"/dashboard/bots\",\n      label: t(\"myBots\"),\n      icon: Bot,\n      active:\n        pathname === \"/dashboard/bots\" ||\n        pathname.startsWith(\"/dashboard/bots/\"),\n    },\n    {\n      href: \"/dashboard/analytics\",\n      label: t(\"analytics\"),\n      icon: BarChart3,\n      active: pathname === \"/dashboard/analytics\",\n    },\n    {\n      href: \"/dashboard/settings\",\n      label: t(\"settings\"),\n      icon: Settings,\n      active: pathname === \"/dashboard/settings\",\n    },\n    {\n      href: \"/dashboard/help\",\n      label: t(\"helpSupport\"),\n      icon: HelpCircle,\n      active: pathname === \"/dashboard/help\",\n    },\n  ];\n\n  const notifications = [\n    {\n      id: 1,\n      title: \"Factura pendiente\",\n      description:\n        \"Tienes una factura pendiente de $7.00 para el plan Profesional\",\n      date: \"Hace 2 horas\",\n      type: \"billing\",\n    },\n    {\n      id: 2,\n      title: \"Límite de preguntas\",\n      description: \"Has alcanzado el 80% de tu límite mensual de preguntas\",\n      date: \"Hace 1 día\",\n      type: \"warning\",\n    },\n    {\n      id: 3,\n      title: \"Soporte técnico\",\n      description:\n        \"Tu consulta #4582 ha sido respondida por el equipo de soporte\",\n      date: \"Hace 3 días\",\n      type: \"support\",\n    },\n  ];\n\n  return (\n    <div className=\"flex min-h-screen flex-col bg-gradient-to-br from-background via-background to-muted/20\">\n      <header className=\"sticky top-0 z-30 bg-white dark:bg-black flex h-16 items-center gap-4 glass-effect border-b border-border/50 px-4 md:px-6\">\n        <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n          <SheetTrigger asChild className=\"md:hidden\">\n            <Button variant=\"outline\" size=\"icon\" className=\"mr-2 glass-effect\">\n              <Menu className=\"h-5 w-5\" />\n              <span className=\"sr-only\">Toggle menu</span>\n            </Button>\n          </SheetTrigger>\n          <SheetContent side=\"left\" className=\"w-72 sm:max-w-xs glass-effect\">\n            <SheetTitle>Menu</SheetTitle>\n            <div className=\"flex h-full flex-col\">\n              <div className=\"flex items-center gap-2 border-b border-border/50 p-4\">\n                <div className=\"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-primary to-primary/80\">\n                  <Bot className=\"h-5 w-5 text-primary-foreground\" />\n                </div>\n                <span className=\"text-lg font-bold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\">\n                  ChatBot Builder\n                </span>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"ml-auto\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  <X className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">Close</span>\n                </Button>\n              </div>\n              <div className=\"flex-1 overflow-auto py-2\">\n                <nav className=\"grid gap-1 px-2\">\n                  {routes.map((route) => (\n                    <Link\n                      key={route.href}\n                      href={route.href}\n                      onClick={() => setIsMobileMenuOpen(false)}\n                      className={`flex items-center gap-3 rounded-lg px-3 py-2 text-sm font-medium transition-all duration-200 ${\n                        route.active\n                          ? \"bg-gradient-to-r from-primary to-primary/80 text-primary-foreground shadow-lg neon-glow\"\n                          : \"hover:bg-gradient-to-r hover:from-muted/50 hover:to-muted/20\"\n                      }`}\n                    >\n                      <route.icon className=\"h-5 w-5\" />\n                      {route.label}\n                    </Link>\n                  ))}\n                </nav>\n              </div>\n              <div className=\"border-t border-border/50 p-4\">\n                <div className=\"flex items-center gap-3 rounded-lg px-3 py-2\">\n                  <Avatar className=\"h-9 w-9 ring-2 ring-primary/20\">\n                    {session && (\n                      <AvatarImage\n                        src={session?.user?.image ?? undefined}\n                        alt=\"Avatar\"\n                      />\n                    )}\n                    <AvatarFallback className=\"bg-gradient-to-br from-primary/20 to-primary/10\">\n                      JD\n                    </AvatarFallback>\n                  </Avatar>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-sm font-medium\">\n                      {session?.user?.name}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground\">\n                      {session?.user?.email}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </SheetContent>\n        </Sheet>\n        <Link href=\"/dashboard\" className=\"flex items-center gap-2 font-bold\">\n          <div className=\"flex h-8 w-8 items-center justify-center rounded-lg bg-gradient-to-br from-primary to-primary/80\">\n            <Bot className=\"h-5 w-5 text-primary-foreground\" />\n          </div>\n          <span className=\"hidden md:inline-block bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\">\n            ChatBot Builder\n          </span>\n        </Link>\n        <div className=\"relative ml-auto flex-1 md:grow-0 md:basis-72\">\n          <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n          <Input\n            type=\"search\"\n            placeholder={t(\"search\")}\n            className=\"w-full rounded-lg glass-effect border-border/50 pl-8 md:w-72 focus:ring-2 focus:ring-primary/20\"\n          />\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <TokenCounterCompact\n            inputTokens={tokenUsage.input}\n            outputTokens={tokenUsage.output}\n            maxTokens={tokenUsage.maxTokens}\n          />\n          <ModeToggle />\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"relative glass-effect\"\n              >\n                <Globe className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Cambiar idioma</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"glass-effect\">\n              <DropdownMenuItem\n                onClick={() => changeLanguageWithUrl(\"es\")}\n                className=\"flex items-center justify-between\"\n              >\n                <span className=\"flex items-center gap-2\">\n                  <span>🇪🇸</span>\n                  <span>Español</span>\n                </span>\n                {language === \"es\" && <Check className=\"h-4 w-4\" />}\n              </DropdownMenuItem>\n              <DropdownMenuItem\n                onClick={() => changeLanguageWithUrl(\"en\")}\n                className=\"flex items-center justify-between\"\n              >\n                <span className=\"flex items-center gap-2\">\n                  <span>🇺🇸</span>\n                  <span>English</span>\n                </span>\n                {language === \"en\" && <Check className=\"h-4 w-4\" />}\n              </DropdownMenuItem>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button\n                variant=\"outline\"\n                size=\"icon\"\n                className=\"relative glass-effect\"\n              >\n                <Bell className=\"h-5 w-5\" />\n                {hasNotifications && (\n                  <span className=\"absolute right-1 top-1 flex h-2 w-2 rounded-full bg-gradient-to-r from-primary to-primary/80\" />\n                )}\n                <span className=\"sr-only\">Notificaciones</span>\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\" className=\"w-80 glass-effect\">\n              <div className=\"flex items-center justify-between p-2 border-b border-border/50\">\n                <h4 className=\"font-medium\">Notificaciones</h4>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"text-xs h-auto py-1\"\n                >\n                  Marcar todas como leídas\n                </Button>\n              </div>\n              {notifications.map((notification) => (\n                <DropdownMenuItem key={notification.id} className=\"p-0\">\n                  <div className=\"flex flex-col w-full p-3 cursor-pointer hover:bg-muted/50 transition-colors\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"font-medium\">{notification.title}</span>\n                      <Badge\n                        variant={\n                          notification.type === \"billing\"\n                            ? \"default\"\n                            : notification.type === \"warning\"\n                            ? \"destructive\"\n                            : \"outline\"\n                        }\n                        className=\"text-xs\"\n                      >\n                        {notification.type === \"billing\"\n                          ? \"Facturación\"\n                          : notification.type === \"warning\"\n                          ? \"Advertencia\"\n                          : \"Soporte\"}\n                      </Badge>\n                    </div>\n                    <p className=\"text-sm text-muted-foreground mt-1\">\n                      {notification.description}\n                    </p>\n                    <span className=\"text-xs text-muted-foreground mt-2\">\n                      {notification.date}\n                    </span>\n                  </div>\n                </DropdownMenuItem>\n              ))}\n              <div className=\"p-2 border-t border-border/50\">\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                  Ver todas las notificaciones\n                </Button>\n              </div>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          <Avatar className=\"h-9 w-9 ring-2 ring-primary/20\">\n            {session && (\n              <AvatarImage\n                src={session?.user?.image ?? undefined}\n                alt=\"Avatar\"\n              />\n            )}\n            <AvatarFallback className=\"bg-gradient-to-br from-primary/20 to-primary/10\">\n              JD\n            </AvatarFallback>\n          </Avatar>\n        </div>\n      </header>\n      <div className=\"flex flex-1\">\n        {/* Navegador lateral mejorado */}\n        <aside className=\"hidden w-64 border-r border-border/50 bg-background/80 md:block md:h-screen md:fixed md:left-0 md:top-0 md:z-20\">\n          <div className=\"flex h-full flex-col\">\n            <div className=\"flex-1 overflow-auto py-4 md:pt-20\">\n              <div className=\"px-3 pb-2\">\n                <h2 className=\"mb-2 px-4 text-lg font-semibold tracking-tight\">\n                  Navegación\n                </h2>\n                <div className=\"space-y-1\">\n                  {routes.map((route) => (\n                    <Link\n                      key={route.href}\n                      href={route.href}\n                      className={`flex items-center gap-3 rounded-lg px-4 py-3 text-sm font-medium transition-all duration-200 ${\n                        route.active\n                          ? \"bg-primary text-primary-foreground shadow-md\"\n                          : \"text-foreground hover:bg-muted\"\n                      }`}\n                    >\n                      <route.icon\n                        className={`h-5 w-5 ${\n                          route.active\n                            ? \"text-primary-foreground\"\n                            : \"text-muted-foreground\"\n                        }`}\n                      />\n                      {route.label}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"px-3 py-2\">\n                <h2 className=\"mb-2 px-4 text-lg font-semibold tracking-tight\">\n                  Acciones rápidas\n                </h2>\n                <div className=\"space-y-1\">\n                  <Button\n                    variant=\"ghost\"\n                    className=\"w-full justify-start px-4 py-2 h-auto\"\n                  >\n                    <Bot className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n                    Crear nuevo bot\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    className=\"w-full justify-start px-4 py-2 h-auto\"\n                  >\n                    <BarChart3 className=\"mr-2 h-5 w-5 text-muted-foreground\" />\n                    Ver estadísticas\n                  </Button>\n                </div>\n              </div>\n            </div>\n            <div className=\"border-t p-4 bg-background/95 backdrop-blur-sm\">\n              <div className=\"rounded-lg bg-muted p-3\">\n                <div className=\"flex items-center gap-3\">\n                  <Avatar className=\"h-9 w-9 ring-2 ring-primary/20\">\n                    {session && (\n                      <AvatarImage\n                        src={session?.user?.image ?? undefined}\n                        alt=\"Avatar\"\n                      />\n                    )}\n                    <AvatarFallback className=\"bg-gradient-to-br from-primary/20 to-primary/10\">\n                      AV\n                    </AvatarFallback>\n                  </Avatar>\n                  <div className=\"flex flex-col flex-1 min-w-0\">\n                    <span className=\"text-sm font-medium truncate\">\n                      {session?.user?.name}\n                    </span>\n                    <span className=\"text-xs text-muted-foreground truncate\">\n                      {session?.user?.email}\n                    </span>\n                  </div>\n                  <div className=\"flex-shrink-0\">\n                    <Button\n                      onClick={() => signOut()}\n                      size=\"icon\"\n                      className=\"bg-primary aspect-square h-9 w-9\"\n                    >\n                      <LogOut className=\"h-5 w-5\" />\n                      <span className=\"sr-only\">Log out</span>\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n        <main className=\"flex-1 overflow-auto md:ml-64\">{children}</main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1878, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yDACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1959, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1991, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2019, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,gMACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2079, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,6FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2132, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2324, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/accordion.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,YAAY,qKAAA,CAAA,OAAuB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QACzB,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG;AAE5B,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,SAAyB;QAAC,WAAU;kBACnC,cAAA,8OAAC,qKAAA,CAAA,UAA0B;YACzB,KAAK;YACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kJACA;YAED,GAAG,KAAK;;gBAER;8BACD,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW;AAErE,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,qKAAA,CAAA,UAA0B;QACzB,KAAK;QACL,WAAU;QACT,GAAG,KAAK;kBAET,cAAA,8OAAC;YAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,aAAa;sBAAa;;;;;;;;;;;AAGjD,iBAAiB,WAAW,GAAG,qKAAA,CAAA,UAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2404, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/switch.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAqB;QACpB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+XACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,8OAAC,kKAAA,CAAA,QAAsB;YACrB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2440, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/token-counter.tsx"],"sourcesContent":["\"use client\"\n\nimport { useLanguage } from \"@/contexts/language-context\"\n\ninterface TokenCounterProps {\n  count: number\n  limit?: number\n}\n\nexport function TokenCounter({ count, limit }: TokenCounterProps) {\n  const { language } = useLanguage()\n\n  // Determinar el color basado en el porcentaje del límite\n  const getColor = () => {\n    if (!limit) return \"text-muted-foreground\"\n\n    const percentage = (count / limit) * 100\n    if (percentage < 75) return \"text-muted-foreground\"\n    if (percentage < 90) return \"text-amber-500\"\n    return \"text-red-500\"\n  }\n\n  return (\n    <div className={`text-xs ${getColor()}`}>\n      {limit ? (\n        <span>\n          {count} / {limit} {language === \"en\" ? \"tokens\" : \"tokens\"}\n        </span>\n      ) : (\n        <span>\n          {count} {language === \"en\" ? \"tokens\" : \"tokens\"}\n        </span>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AASO,SAAS,aAAa,EAAE,KAAK,EAAE,KAAK,EAAqB;IAC9D,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD;IAE/B,yDAAyD;IACzD,MAAM,WAAW;QACf,IAAI,CAAC,OAAO,OAAO;QAEnB,MAAM,aAAa,AAAC,QAAQ,QAAS;QACrC,IAAI,aAAa,IAAI,OAAO;QAC5B,IAAI,aAAa,IAAI,OAAO;QAC5B,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,QAAQ,EAAE,YAAY;kBACpC,sBACC,8OAAC;;gBACE;gBAAM;gBAAI;gBAAM;gBAAE,aAAa,OAAO,WAAW;;;;;;iCAGpD,8OAAC;;gBACE;gBAAM;gBAAE,aAAa,OAAO,WAAW;;;;;;;;;;;;AAKlD","debugId":null}},
    {"offset": {"line": 2495, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,kKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,kKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;AAGb,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC;;0BACC,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,8OAAC,kKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,8OAAC,4LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,kBAAkB,WAAW,GAAG,kKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2627, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,2KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2691, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2759, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/product-modal.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\"\nimport { InfoIcon, AlertCircle, FileJson, Database, HelpCircle, Search } from \"lucide-react\"\nimport { useLanguage } from \"@/contexts/language-context\"\nimport { TokenCounter } from \"@/components/token-counter\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\"\n\ninterface ProductModalProps {\n  open: boolean\n  onOpenChange: (open: boolean) => void\n  onAddProduct: (product: any, method: \"manual\" | \"api\") => void\n}\n\nexport function ProductModal({ open, onOpenChange, onAddProduct }: ProductModalProps) {\n  const { t, language } = useLanguage()\n  const [method, setMethod] = useState<\"manual\" | \"api\">(\"manual\")\n  const [product, setProduct] = useState({\n    name: \"\",\n    price: \"\",\n    description: \"\",\n    available: true,\n    stock: \"\",\n    hasStock: false,\n  })\n  const [apiUrl, setApiUrl] = useState(\"\")\n  const [apiKey, setApiKey] = useState(\"\")\n  const [jsonExample, setJsonExample] = useState(`{\n  \"products\": [\n    {\n      \"name\": \"Producto 1\",\n      \"price\": \"$99.99\",\n      \"description\": \"Descripción del producto 1\",\n      \"available\": true,\n      \"stock\": 25\n    },\n    {\n      \"name\": \"Producto 2\",\n      \"price\": \"$49.99\",\n      \"description\": \"Descripción del producto 2\",\n      \"available\": false,\n      \"stock\": 0\n    }\n  ]\n}`)\n\n  // Nuevos estados para el mapeo de campos\n  const [nameField, setNameField] = useState(\"name\")\n  const [priceField, setPriceField] = useState(\"price\")\n  const [descriptionField, setDescriptionField] = useState(\"description\")\n  const [enableDetails, setEnableDetails] = useState(false)\n  const [detailsField, setDetailsField] = useState(\"details\")\n  const [enableStock, setEnableStock] = useState(false)\n  const [stockField, setStockField] = useState(\"stock\")\n  const [productsArrayFormat, setProductsArrayFormat] = useState(true)\n  const [productsArrayName, setProductsArrayName] = useState(\"products\")\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    if (method === \"manual\") {\n      const productToAdd = {\n        ...product,\n        stock: product.hasStock ? product.stock : undefined,\n      }\n      onAddProduct(productToAdd, \"manual\")\n      setProduct({\n        name: \"\",\n        price: \"\",\n        description: \"\",\n        available: true,\n        stock: \"\",\n        hasStock: false,\n      })\n    } else {\n      // En un caso real, aquí se haría la llamada a la API\n      onAddProduct(\n        {\n          apiUrl,\n          apiKey,\n          fieldMapping: {\n            name: nameField,\n            price: priceField,\n            description: descriptionField,\n            details: enableDetails ? detailsField : null,\n            stock: enableStock ? stockField : null,\n          },\n          format: {\n            isArray: productsArrayFormat,\n            arrayName: productsArrayFormat ? productsArrayName : null,\n          },\n        },\n        \"api\",\n      )\n    }\n    onOpenChange(false)\n  }\n\n  const handleMethodChange = (value: string) => {\n    setMethod(value as \"manual\" | \"api\")\n  }\n\n  // Calcular tokens aproximados para la descripción del producto\n  const descriptionTokens = product.description.length > 0 ? Math.ceil(product.description.length / 4) : 0\n\n  // Actualizar el ejemplo de JSON basado en las configuraciones\n  const updateJsonExample = () => {\n    const productExample = {\n      [nameField]: \"Producto Ejemplo\",\n      [priceField]: \"$99.99\",\n      [descriptionField]: \"Descripción del producto ejemplo\",\n    }\n\n    if (enableDetails) {\n      productExample[detailsField] = [\"Característica 1\", \"Característica 2\", \"Característica 3\"]\n    }\n\n    if (enableStock) {\n      productExample[stockField] = 25\n    }\n\n    if (productsArrayFormat) {\n      return JSON.stringify(\n        {\n          [productsArrayName]: [\n            productExample,\n            { ...productExample, [nameField]: \"Otro Producto\", ...(enableStock ? { [stockField]: 0 } : {}) },\n          ],\n        },\n        null,\n        2,\n      )\n    } else {\n      return JSON.stringify(\n        [\n          productExample,\n          { ...productExample, [nameField]: \"Otro Producto\", ...(enableStock ? { [stockField]: 0 } : {}) },\n        ],\n        null,\n        2,\n      )\n    }\n  }\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[600px]\">\n        <DialogHeader>\n          <DialogTitle>{t(\"addProduct\")}</DialogTitle>\n          <DialogDescription>\n            {language === \"en\"\n              ? \"Add a product or service that your chatbot can recommend to users.\"\n              : \"Añade un producto o servicio que tu chatbot pueda recomendar a los usuarios.\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <Tabs defaultValue=\"manual\" className=\"w-full\" onValueChange={handleMethodChange}>\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"manual\" className=\"flex items-center gap-2\">\n              <FileJson className=\"h-4 w-4\" />\n              {language === \"en\" ? \"Manual Entry\" : \"Entrada Manual\"}\n            </TabsTrigger>\n            <TabsTrigger value=\"api\" className=\"flex items-center gap-2\">\n              <Database className=\"h-4 w-4\" />\n              {language === \"en\" ? \"API Integration\" : \"Integración API\"}\n            </TabsTrigger>\n            <TabsTrigger value=\"search\" className=\"flex items-center gap-2\">\n              <Search className=\"h-4 w-4\" />\n              {language === \"en\" ? \"Search Integration\" : \"Integración de Búsqueda\"}\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"manual\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"grid gap-4 py-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"product-name\">{t(\"productName\")}</Label>\n                  <Input\n                    id=\"product-name\"\n                    value={product.name}\n                    onChange={(e) => setProduct({ ...product, name: e.target.value })}\n                    placeholder={language === \"en\" ? \"Premium Plan\" : \"Plan Premium\"}\n                    required\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"product-price\">{t(\"price\")}</Label>\n                  <Input\n                    id=\"product-price\"\n                    value={product.price}\n                    onChange={(e) => setProduct({ ...product, price: e.target.value })}\n                    placeholder=\"$99.99\"\n                    required\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between\">\n                    <Label htmlFor=\"product-description\">{t(\"description\")}</Label>\n                    <TokenCounter count={descriptionTokens} />\n                  </div>\n                  <Textarea\n                    id=\"product-description\"\n                    value={product.description}\n                    onChange={(e) => setProduct({ ...product, description: e.target.value })}\n                    placeholder={\n                      language === \"en\"\n                        ? \"Our premium plan includes all features...\"\n                        : \"Nuestro plan premium incluye todas las características...\"\n                    }\n                    className=\"min-h-[100px]\"\n                    required\n                  />\n                </div>\n                <div className=\"flex items-center space-x-2\">\n                  <Switch\n                    id=\"product-available\"\n                    checked={product.available}\n                    onCheckedChange={(checked) => setProduct({ ...product, available: checked })}\n                  />\n                  <Label htmlFor=\"product-available\">{t(\"available\")}</Label>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"product-has-stock\"\n                      checked={product.hasStock}\n                      onCheckedChange={(checked) => setProduct({ ...product, hasStock: checked })}\n                    />\n                    <Label htmlFor=\"product-has-stock\">\n                      {language === \"en\" ? \"Track Stock (Optional)\" : \"Seguimiento de Stock (Opcional)\"}\n                    </Label>\n                  </div>\n                  {product.hasStock && (\n                    <div className=\"pt-2\">\n                      <Label htmlFor=\"product-stock\">\n                        {language === \"en\" ? \"Stock Quantity\" : \"Cantidad en Stock\"}\n                      </Label>\n                      <Input\n                        id=\"product-stock\"\n                        type=\"number\"\n                        min=\"0\"\n                        value={product.stock}\n                        onChange={(e) => setProduct({ ...product, stock: e.target.value })}\n                        placeholder=\"0\"\n                        className=\"mt-1\"\n                      />\n                    </div>\n                  )}\n                </div>\n              </div>\n              <DialogFooter>\n                <Button type=\"submit\">{language === \"en\" ? \"Add Product\" : \"Añadir Producto\"}</Button>\n              </DialogFooter>\n            </form>\n          </TabsContent>\n\n          <TabsContent value=\"api\">\n            <ScrollArea className=\"h-[400px] pr-4\">\n              <div className=\"space-y-4 py-4\">\n                <Alert>\n                  <InfoIcon className=\"h-4 w-4\" />\n                  <AlertTitle>{language === \"en\" ? \"Product Limits\" : \"Límites de Productos\"}</AlertTitle>\n                  <AlertDescription>\n                    {language === \"en\"\n                      ? \"You can import up to 100 products via API. We recommend focusing on your best-selling products. Additional 100 products cost $10/month.\"\n                      : \"Puedes importar hasta 100 productos vía API. Recomendamos enfocarse en tus productos más vendidos. Cada 100 productos adicionales cuestan $10/mes.\"}\n                  </AlertDescription>\n                </Alert>\n\n                <form onSubmit={handleSubmit}>\n                  <div className=\"grid gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"api-url\">{language === \"en\" ? \"API Endpoint URL\" : \"URL del Endpoint API\"}</Label>\n                      <Input\n                        id=\"api-url\"\n                        value={apiUrl}\n                        onChange={(e) => setApiUrl(e.target.value)}\n                        placeholder=\"https://api.yourdomain.com/products\"\n                        required\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"api-key\">\n                        {language === \"en\" ? \"API Key (optional)\" : \"Clave API (opcional)\"}\n                      </Label>\n                      <Input\n                        id=\"api-key\"\n                        value={apiKey}\n                        onChange={(e) => setApiKey(e.target.value)}\n                        placeholder={language === \"en\" ? \"Your API key\" : \"Tu clave API\"}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    <div className=\"rounded-md border p-4 space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-sm\">\n                          {language === \"en\" ? \"JSON Format Configuration\" : \"Configuración de Formato JSON\"}\n                        </h4>\n                      </div>\n\n                      <div className=\"flex items-center space-x-2\">\n                        <Switch\n                          id=\"products-array-format\"\n                          checked={productsArrayFormat}\n                          onCheckedChange={setProductsArrayFormat}\n                        />\n                        <Label htmlFor=\"products-array-format\" className=\"text-sm\">\n                          {language === \"en\"\n                            ? \"Products are in an array property\"\n                            : \"Los productos están en una propiedad de array\"}\n                        </Label>\n                        <TooltipProvider>\n                          <Tooltip>\n                            <TooltipTrigger asChild>\n                              <Button variant=\"ghost\" size=\"icon\" className=\"h-6 w-6 rounded-full p-0\" type=\"button\">\n                                <HelpCircle className=\"h-4 w-4\" />\n                                <span className=\"sr-only\">Help</span>\n                              </Button>\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              {language === \"en\"\n                                ? 'Enable if your JSON has a structure like {\"products\": [...]} instead of directly [...]'\n                                : 'Activa si tu JSON tiene una estructura como {\"productos\": [...]} en lugar de directamente [...]'}\n                            </TooltipContent>\n                          </Tooltip>\n                        </TooltipProvider>\n                      </div>\n\n                      {productsArrayFormat && (\n                        <div className=\"space-y-2\">\n                          <Label htmlFor=\"products-array-name\" className=\"text-sm\">\n                            {language === \"en\" ? \"Array Property Name\" : \"Nombre de la Propiedad Array\"}\n                          </Label>\n                          <Input\n                            id=\"products-array-name\"\n                            value={productsArrayName}\n                            onChange={(e) => setProductsArrayName(e.target.value)}\n                            placeholder=\"products\"\n                            className=\"h-8 text-sm\"\n                            required={productsArrayFormat}\n                          />\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"rounded-md border p-4 space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-sm\">\n                          {language === \"en\" ? \"Field Mapping\" : \"Mapeo de Campos\"}\n                        </h4>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Map your API's field names to our standard fields. If your API uses different field names, specify them here.\"\n                          : \"Mapea los nombres de campos de tu API a nuestros campos estándar. Si tu API usa nombres diferentes, especifícalos aquí.\"}\n                      </p>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"name-field\" className=\"text-sm\">\n                            {language === \"en\" ? \"Product Name Field\" : \"Campo de Nombre del Producto\"}\n                          </Label>\n                          <span className=\"text-xs text-muted-foreground\">Standard: name</span>\n                        </div>\n                        <Input\n                          id=\"name-field\"\n                          value={nameField}\n                          onChange={(e) => setNameField(e.target.value)}\n                          placeholder=\"nombreProducto\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                        <p className=\"text-xs text-muted-foreground\">\n                          {language === \"en\"\n                            ? \"If your product names are very specific, consider using a more generic field.\"\n                            : \"Si los nombres de tus productos son muy específicos, considera usar un campo más genérico.\"}\n                        </p>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"price-field\" className=\"text-sm\">\n                            {language === \"en\" ? \"Price Field\" : \"Campo de Precio\"}\n                          </Label>\n                          <span className=\"text-xs text-muted-foreground\">Standard: price</span>\n                        </div>\n                        <Input\n                          id=\"price-field\"\n                          value={priceField}\n                          onChange={(e) => setPriceField(e.target.value)}\n                          placeholder=\"precio\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"description-field\" className=\"text-sm\">\n                            {language === \"en\" ? \"Description Field\" : \"Campo de Descripción\"}\n                          </Label>\n                          <span className=\"text-xs text-muted-foreground\">Standard: description</span>\n                        </div>\n                        <Input\n                          id=\"description-field\"\n                          value={descriptionField}\n                          onChange={(e) => setDescriptionField(e.target.value)}\n                          placeholder=\"descripcion\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch id=\"enable-stock\" checked={enableStock} onCheckedChange={setEnableStock} />\n                          <Label htmlFor=\"enable-stock\" className=\"text-sm\">\n                            {language === \"en\" ? \"Include Stock Information\" : \"Incluir Información de Stock\"}\n                          </Label>\n                        </div>\n\n                        {enableStock && (\n                          <div className=\"pt-2\">\n                            <div className=\"flex items-center justify-between\">\n                              <Label htmlFor=\"stock-field\" className=\"text-sm\">\n                                {language === \"en\" ? \"Stock Field\" : \"Campo de Stock\"}\n                              </Label>\n                              <span className=\"text-xs text-muted-foreground\">Standard: stock</span>\n                            </div>\n                            <Input\n                              id=\"stock-field\"\n                              value={stockField}\n                              onChange={(e) => setStockField(e.target.value)}\n                              placeholder=\"inventario\"\n                              className=\"h-8 text-sm mt-1\"\n                              required={enableStock}\n                            />\n                          </div>\n                        )}\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Switch id=\"enable-details\" checked={enableDetails} onCheckedChange={setEnableDetails} />\n                          <Label htmlFor=\"enable-details\" className=\"text-sm\">\n                            {language === \"en\" ? \"Include Product Details\" : \"Incluir Detalles del Producto\"}\n                          </Label>\n                        </div>\n\n                        {enableDetails && (\n                          <div className=\"pt-2\">\n                            <div className=\"flex items-center justify-between\">\n                              <Label htmlFor=\"details-field\" className=\"text-sm\">\n                                {language === \"en\" ? \"Details Field\" : \"Campo de Detalles\"}\n                              </Label>\n                              <span className=\"text-xs text-muted-foreground\">Standard: details</span>\n                            </div>\n                            <Input\n                              id=\"details-field\"\n                              value={detailsField}\n                              onChange={(e) => setDetailsField(e.target.value)}\n                              placeholder=\"detallesProducto\"\n                              className=\"h-8 text-sm mt-1\"\n                              required={enableDetails}\n                            />\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label>{language === \"en\" ? \"Expected JSON Format\" : \"Formato JSON Esperado\"}</Label>\n                      <div className=\"rounded-md bg-muted p-4\">\n                        <pre className=\"text-xs overflow-x-auto whitespace-pre-wrap\">{updateJsonExample()}</pre>\n                      </div>\n                    </div>\n\n                    <Alert variant=\"destructive\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertTitle>{language === \"en\" ? \"Important\" : \"Importante\"}</AlertTitle>\n                      <AlertDescription>\n                        {language === \"en\"\n                          ? \"Make sure your API endpoint is publicly accessible and returns data in the format shown above.\"\n                          : \"Asegúrate de que tu endpoint API sea accesible públicamente y devuelva datos en el formato mostrado arriba.\"}\n                      </AlertDescription>\n                    </Alert>\n                  </div>\n                  <DialogFooter className=\"mt-6\">\n                    <Button type=\"submit\">{language === \"en\" ? \"Connect API\" : \"Conectar API\"}</Button>\n                  </DialogFooter>\n                </form>\n              </div>\n            </ScrollArea>\n          </TabsContent>\n          <TabsContent value=\"search\">\n            <ScrollArea className=\"h-[400px] pr-4\">\n              <div className=\"space-y-4 py-4\">\n                <Alert>\n                  <InfoIcon className=\"h-4 w-4\" />\n                  <AlertTitle>{language === \"en\" ? \"Search Integration\" : \"Integración de Búsqueda\"}</AlertTitle>\n                  <AlertDescription>\n                    {language === \"en\"\n                      ? \"Connect your website's search API to allow the chatbot to find products in real-time when users ask about them.\"\n                      : \"Conecta la API de búsqueda de tu sitio web para permitir que el chatbot encuentre productos en tiempo real cuando los usuarios pregunten por ellos.\"}\n                  </AlertDescription>\n                </Alert>\n\n                <form onSubmit={handleSubmit}>\n                  <div className=\"grid gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"search-api-url\">\n                        {language === \"en\" ? \"Search API Endpoint URL\" : \"URL del Endpoint de la API de Búsqueda\"}\n                      </Label>\n                      <Input id=\"search-api-url\" placeholder=\"https://api.yourdomain.com/search?q={query}\" required />\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Use {query} as a placeholder where the search term will be inserted.\"\n                          : \"Usa {query} como marcador de posición donde se insertará el término de búsqueda.\"}\n                      </p>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"search-api-key\">\n                        {language === \"en\" ? \"API Key (optional)\" : \"Clave API (opcional)\"}\n                      </Label>\n                      <Input\n                        id=\"search-api-key\"\n                        placeholder={language === \"en\" ? \"Your API key\" : \"Tu clave API\"}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    <div className=\"rounded-md border p-4 space-y-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"font-medium text-sm\">\n                          {language === \"en\" ? \"Response Mapping\" : \"Mapeo de Respuesta\"}\n                        </h4>\n                      </div>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Map your search API's response fields to our standard product fields.\"\n                          : \"Mapea los campos de respuesta de tu API de búsqueda a nuestros campos estándar de producto.\"}\n                      </p>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-results-path\" className=\"text-sm\">\n                          {language === \"en\" ? \"Results Array Path\" : \"Ruta del Array de Resultados\"}\n                        </Label>\n                        <Input id=\"search-results-path\" placeholder=\"results\" className=\"h-8 text-sm\" required />\n                        <p className=\"text-xs text-muted-foreground\">\n                          {language === \"en\"\n                            ? \"The path to the array of search results in the API response (e.g., 'data.results', 'items')\"\n                            : \"La ruta al array de resultados de búsqueda en la respuesta de la API (ej., 'data.results', 'items')\"}\n                        </p>\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-name-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Product Name Field\" : \"Campo de Nombre del Producto\"}\n                        </Label>\n                        <Input id=\"search-name-field\" placeholder=\"title\" className=\"h-8 text-sm\" required />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-price-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Price Field\" : \"Campo de Precio\"}\n                        </Label>\n                        <Input id=\"search-price-field\" placeholder=\"price\" className=\"h-8 text-sm\" required />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-description-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Description Field\" : \"Campo de Descripción\"}\n                        </Label>\n                        <Input\n                          id=\"search-description-field\"\n                          placeholder=\"description\"\n                          className=\"h-8 text-sm\"\n                          required\n                        />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-image-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Image URL Field (optional)\" : \"Campo de URL de Imagen (opcional)\"}\n                        </Label>\n                        <Input id=\"search-image-field\" placeholder=\"image\" className=\"h-8 text-sm\" />\n                      </div>\n\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"search-url-field\" className=\"text-sm\">\n                          {language === \"en\" ? \"Product URL Field (optional)\" : \"Campo de URL del Producto (opcional)\"}\n                        </Label>\n                        <Input id=\"search-url-field\" placeholder=\"url\" className=\"h-8 text-sm\" />\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <Label>\n                        {language === \"en\" ? \"Example Search Scenario\" : \"Ejemplo de Escenario de Búsqueda\"}\n                      </Label>\n                      <div className=\"rounded-md bg-muted p-4\">\n                        <div className=\"space-y-2\">\n                          <p className=\"text-sm font-medium\">\n                            {language === \"en\" ? \"User Query:\" : \"Consulta del Usuario:\"}\n                          </p>\n                          <p className=\"text-sm italic\">\n                            \"{language === \"en\" ? \"I need clothes for cold weather\" : \"Necesito ropa para el frío\"}\"\n                          </p>\n\n                          <p className=\"text-sm font-medium mt-4\">\n                            {language === \"en\" ? \"Bot Search:\" : \"Búsqueda del Bot:\"}\n                          </p>\n                          <p className=\"text-sm italic\">\n                            \"\n                            {language === \"en\"\n                              ? \"sweaters for cold weather, winter jackets, thermal shirts\"\n                              : \"sudaderas para el frío, chaquetas de invierno, camisas térmicas\"}\n                            \"\n                          </p>\n\n                          <p className=\"text-sm font-medium mt-4\">{language === \"en\" ? \"Results:\" : \"Resultados:\"}</p>\n                          <p className=\"text-sm\">\n                            {language === \"en\"\n                              ? \"The bot will map the first 10 results from your search API and present them to the user in a structured format.\"\n                              : \"El bot mapeará los primeros 10 resultados de tu API de búsqueda y los presentará al usuario en un formato estructurado.\"}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n\n                    <Alert variant=\"destructive\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertTitle>{language === \"en\" ? \"Important\" : \"Importante\"}</AlertTitle>\n                      <AlertDescription>\n                        {language === \"en\"\n                          ? \"For this feature to work effectively, your search API must be intelligent enough to understand natural language queries. Otherwise, the bot may not find what the user is asking for. Consider implementing semantic search or AI-powered search for best results.\"\n                          : \"Para que esta función funcione de manera efectiva, tu API de búsqueda debe ser lo suficientemente inteligente para entender consultas en lenguaje natural. De lo contrario, el bot puede no encontrar lo que el usuario está pidiendo. Considera implementar búsqueda semántica o búsqueda potenciada por IA para obtener mejores resultados.\"}\n                      </AlertDescription>\n                    </Alert>\n                  </div>\n                  <DialogFooter className=\"mt-6\">\n                    <Button type=\"submit\">\n                      {language === \"en\" ? \"Connect Search API\" : \"Conectar API de Búsqueda\"}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </div>\n            </ScrollArea>\n          </TabsContent>\n        </Tabs>\n      </DialogContent>\n    </Dialog>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4446, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/use-case-selector.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Utensils,\n  ShoppingBag,\n  HeadphonesIcon,\n  Home,\n  Calendar,\n  Building2,\n  Briefcase,\n  GraduationCap,\n  ShoppingCart,\n  Truck,\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface UseCaseOption {\n  value: string;\n  label: string;\n  icon: React.ElementType;\n  description: string;\n}\n\ninterface UseCaseSelectorProps {\n  value: string;\n  onChange: (value: string) => void;\n  language?: \"en\" | \"es\";\n}\n\nexport function UseCaseSelector({\n  value,\n  onChange,\n  language = \"en\",\n}: UseCaseSelectorProps) {\n  const [open, setOpen] = useState(false);\n\n  const useCases: UseCaseOption[] = [\n    {\n      value: \"restaurant\",\n      label: language === \"en\" ? \"Restaurant\" : \"Restaurante\",\n      icon: Utensils,\n      description:\n        language === \"en\"\n          ? \"For restaurants, cafes, and food delivery services\"\n          : \"Para restaurantes, cafeterías y servicios de entrega de comida\",\n    },\n    {\n      value: \"onlineStore\",\n      label: language === \"en\" ? \"Online Store\" : \"Tienda Online\",\n      icon: ShoppingBag,\n      description:\n        language === \"en\"\n          ? \"For e-commerce and online retail businesses\"\n          : \"Para comercio electrónico y negocios minoristas en línea\",\n    },\n    {\n      value: \"customerSupport\",\n      label: language === \"en\" ? \"Customer Support\" : \"Atención al Cliente\",\n      icon: HeadphonesIcon,\n      description:\n        language === \"en\"\n          ? \"For customer service and support teams\"\n          : \"Para equipos de servicio y soporte al cliente\",\n    },\n    {\n      value: \"realEstate\",\n      label: language === \"en\" ? \"Real Estate\" : \"Bienes Raíces\",\n      icon: Home,\n      description:\n        language === \"en\"\n          ? \"For real estate agencies and property management\"\n          : \"Para agencias inmobiliarias y administración de propiedades\",\n    },\n    {\n      value: \"appointments\",\n      label: language === \"en\" ? \"Appointments\" : \"Gestión de Citas\",\n      icon: Calendar,\n      description:\n        language === \"en\"\n          ? \"For healthcare, salons, and service scheduling\"\n          : \"Para salud, salones y programación de servicios\",\n    },\n    {\n      value: \"corporate\",\n      label: language === \"en\" ? \"Corporate\" : \"Corporativo\",\n      icon: Building2,\n      description:\n        language === \"en\"\n          ? \"For corporate websites and business services\"\n          : \"Para sitios web corporativos y servicios empresariales\",\n    },\n    {\n      value: \"professional\",\n      label:\n        language === \"en\" ? \"Professional Services\" : \"Servicios Profesionales\",\n      icon: Briefcase,\n      description:\n        language === \"en\"\n          ? \"For lawyers, consultants, and other professionals\"\n          : \"Para abogados, consultores y otros profesionales\",\n    },\n    {\n      value: \"education\",\n      label: language === \"en\" ? \"Education\" : \"Educación\",\n      icon: GraduationCap,\n      description:\n        language === \"en\"\n          ? \"For schools, universities, and online courses\"\n          : \"Para escuelas, universidades y cursos en línea\",\n    },\n    {\n      value: \"retail\",\n      label: language === \"en\" ? \"Retail\" : \"Comercio Minorista\",\n      icon: ShoppingCart,\n      description:\n        language === \"en\"\n          ? \"For physical retail stores and showrooms\"\n          : \"Para tiendas físicas y salas de exposición\",\n    },\n    {\n      value: \"logistics\",\n      label: language === \"en\" ? \"Logistics\" : \"Logística\",\n      icon: Truck,\n      description:\n        language === \"en\"\n          ? \"For shipping, delivery, and logistics services\"\n          : \"Para servicios de envío, entrega y logística\",\n    },\n  ];\n\n  const selectedUseCase =\n    useCases.find((useCase) => useCase.value === value) || useCases[0];\n\n  const handleSelect = (useCaseValue: string) => {\n    onChange(useCaseValue);\n    setOpen(false);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        <Button\n          variant=\"outline\"\n          className=\"w-full justify-start text-left font-normal h-auto py-3\"\n        >\n          <div className=\"flex items-center gap-2\">\n            <div className=\"flex h-9 w-9 items-center justify-center rounded-md border bg-muted\">\n              <selectedUseCase.icon className=\"h-5 w-5\" />\n            </div>\n            <div className=\"flex flex-col\">\n              <span className=\"text-sm font-medium\">\n                {selectedUseCase.label}\n              </span>\n              <span className=\"text-xs text-muted-foreground\">\n                {selectedUseCase.description}\n              </span>\n            </div>\n          </div>\n        </Button>\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[600px] h-[500px] flex flex-col border-0 bg-white dark:bg-black\">\n        <DialogHeader className=\"flex-shrink-0 text-center pb-6\">\n          <DialogTitle className=\"text-2xl font-bold bg-gradient-to-r from-foreground to-muted-foreground bg-clip-text text-transparent\">\n            {language === \"en\" ? \"Select Use Case\" : \"Seleccionar Caso de Uso\"}\n          </DialogTitle>\n        </DialogHeader>\n        <div className=\"flex-1 overflow-y-auto\">\n          <div className=\"grid grid-cols-3 gap-4 p-2\">\n            {useCases.map((useCase) => (\n              <Button\n                key={useCase.value}\n                variant=\"ghost\"\n                className={cn(\n                  \"h-24 flex flex-col items-center justify-center gap-3 p-4 rounded-xl transition-all duration-300 hover:scale-105 hover:shadow-lg border border-transparent\",\n                  value === useCase.value\n                    ? \"bg-gradient-to-br from-primary/10 to-primary/5 border-primary/20 shadow-md\"\n                    : \"hover:bg-gradient-to-br hover:from-muted/50 hover:to-muted/20 hover:border-muted-foreground/10\"\n                )}\n                onClick={() => handleSelect(useCase.value)}\n              >\n                <div\n                  className={cn(\n                    \"flex h-10 w-10 items-center justify-center rounded-full transition-all duration-300\",\n                    value === useCase.value\n                      ? \"bg-gradient-to-br from-primary to-primary/80 text-primary-foreground shadow-lg\"\n                      : \"bg-gradient-to-br from-muted to-muted/80 text-muted-foreground\"\n                  )}\n                >\n                  <useCase.icon className=\"h-5 w-5\" />\n                </div>\n                <span\n                  className={cn(\n                    \"text-sm font-medium text-center leading-tight transition-colors duration-300\",\n                    value === useCase.value ? \"text-primary\" : \"text-foreground\"\n                  )}\n                >\n                  {useCase.label}\n                </span>\n              </Button>\n            ))}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4691, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/calendar-integration.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { Calendar, Clock, Check, X, CalendarDays, CalendarClock, Users } from \"lucide-react\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n\ninterface CalendarIntegrationProps {\n  language?: \"en\" | \"es\"\n}\n\nexport function CalendarIntegration({ language = \"en\" }: CalendarIntegrationProps) {\n  const [isConnected, setIsConnected] = useState(false)\n  const [apiKey, setApiKey] = useState(\"\")\n  const [calendarId, setCalendarId] = useState(\"\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [availableCalendars, setAvailableCalendars] = useState<string[]>([])\n  const [settings, setSettings] = useState({\n    allowBooking: true,\n    allowRescheduling: true,\n    allowCancellation: true,\n    minAdvanceHours: \"24\",\n    maxAdvanceDays: \"30\",\n    confirmationRequired: true,\n    reminderEnabled: true,\n    reminderHours: \"24\",\n  })\n\n  const handleConnect = () => {\n    if (!apiKey) return\n\n    setIsLoading(true)\n\n    // Simulate API connection\n    setTimeout(() => {\n      setIsConnected(true)\n      setIsLoading(false)\n      setAvailableCalendars([\"Main Calendar\", \"Work Calendar\", \"Personal Calendar\"])\n    }, 1500)\n  }\n\n  const handleDisconnect = () => {\n    setIsConnected(false)\n    setApiKey(\"\")\n    setCalendarId(\"\")\n    setAvailableCalendars([])\n  }\n\n  const updateSetting = (key: string, value: any) => {\n    setSettings((prev) => ({\n      ...prev,\n      [key]: value,\n    }))\n  }\n\n  const businessHours = [\n    { day: language === \"en\" ? \"Monday\" : \"Lunes\", hours: \"9:00 AM - 5:00 PM\" },\n    { day: language === \"en\" ? \"Tuesday\" : \"Martes\", hours: \"9:00 AM - 5:00 PM\" },\n    { day: language === \"en\" ? \"Wednesday\" : \"Miércoles\", hours: \"9:00 AM - 5:00 PM\" },\n    { day: language === \"en\" ? \"Thursday\" : \"Jueves\", hours: \"9:00 AM - 5:00 PM\" },\n    { day: language === \"en\" ? \"Friday\" : \"Viernes\", hours: \"9:00 AM - 5:00 PM\" },\n    { day: language === \"en\" ? \"Saturday\" : \"Sábado\", hours: \"10:00 AM - 2:00 PM\" },\n    { day: language === \"en\" ? \"Sunday\" : \"Domingo\", hours: language === \"en\" ? \"Closed\" : \"Cerrado\" },\n  ]\n\n  const appointmentTypes = [\n    { name: language === \"en\" ? \"Initial Consultation\" : \"Consulta Inicial\", duration: \"30 min\" },\n    { name: language === \"en\" ? \"Follow-up Session\" : \"Sesión de Seguimiento\", duration: \"45 min\" },\n    { name: language === \"en\" ? \"Comprehensive Evaluation\" : \"Evaluación Integral\", duration: \"60 min\" },\n    { name: language === \"en\" ? \"Emergency Session\" : \"Sesión de Emergencia\", duration: \"30 min\" },\n  ]\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>\n              {language === \"en\" ? \"MyNeuroCalendar Integration\" : \"Integración con MyNeuroCalendar\"}\n            </CardTitle>\n            <CardDescription>\n              {language === \"en\"\n                ? \"Connect your chatbot to MyNeuroCalendar to manage appointments\"\n                : \"Conecte su chatbot a MyNeuroCalendar para gestionar citas\"}\n            </CardDescription>\n          </div>\n          {isConnected && (\n            <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n              <Check className=\"h-3 w-3 text-green-500\" />\n              {language === \"en\" ? \"Connected\" : \"Conectado\"}\n            </Badge>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent>\n        {!isConnected ? (\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"api-key\">\n                {language === \"en\" ? \"MyNeuroCalendar API Key\" : \"Clave API de MyNeuroCalendar\"}\n              </Label>\n              <Input\n                id=\"api-key\"\n                value={apiKey}\n                onChange={(e) => setApiKey(e.target.value)}\n                placeholder={language === \"en\" ? \"Enter your API key\" : \"Ingrese su clave API\"}\n              />\n              <p className=\"text-sm text-muted-foreground\">\n                {language === \"en\"\n                  ? \"You can find your API key in your MyNeuroCalendar account settings\"\n                  : \"Puede encontrar su clave API en la configuración de su cuenta de MyNeuroCalendar\"}\n              </p>\n            </div>\n            <Button onClick={handleConnect} disabled={!apiKey || isLoading} className=\"w-full\">\n              {isLoading ? (\n                <>\n                  <Clock className=\"mr-2 h-4 w-4 animate-spin\" />\n                  {language === \"en\" ? \"Connecting...\" : \"Conectando...\"}\n                </>\n              ) : (\n                <>\n                  <Calendar className=\"mr-2 h-4 w-4\" />\n                  {language === \"en\" ? \"Connect to MyNeuroCalendar\" : \"Conectar a MyNeuroCalendar\"}\n                </>\n              )}\n            </Button>\n          </div>\n        ) : (\n          <div className=\"space-y-6\">\n            <Tabs defaultValue=\"settings\">\n              <TabsList className=\"grid w-full grid-cols-3\">\n                <TabsTrigger value=\"settings\">{language === \"en\" ? \"Settings\" : \"Configuración\"}</TabsTrigger>\n                <TabsTrigger value=\"hours\">{language === \"en\" ? \"Business Hours\" : \"Horario Laboral\"}</TabsTrigger>\n                <TabsTrigger value=\"types\">{language === \"en\" ? \"Appointment Types\" : \"Tipos de Citas\"}</TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"settings\" className=\"space-y-4 pt-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"calendar-id\">\n                    {language === \"en\" ? \"Select Calendar\" : \"Seleccionar Calendario\"}\n                  </Label>\n                  <Select value={calendarId} onValueChange={setCalendarId}>\n                    <SelectTrigger id=\"calendar-id\">\n                      <SelectValue placeholder={language === \"en\" ? \"Select a calendar\" : \"Seleccione un calendario\"} />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {availableCalendars.map((calendar) => (\n                        <SelectItem key={calendar} value={calendar}>\n                          {calendar}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-0.5\">\n                      <Label htmlFor=\"allow-booking\">{language === \"en\" ? \"Allow Booking\" : \"Permitir Reservas\"}</Label>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Let the chatbot schedule new appointments\"\n                          : \"Permitir que el chatbot programe nuevas citas\"}\n                      </p>\n                    </div>\n                    <Switch\n                      id=\"allow-booking\"\n                      checked={settings.allowBooking}\n                      onCheckedChange={(checked) => updateSetting(\"allowBooking\", checked)}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-0.5\">\n                      <Label htmlFor=\"allow-rescheduling\">\n                        {language === \"en\" ? \"Allow Rescheduling\" : \"Permitir Reprogramación\"}\n                      </Label>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Let the chatbot reschedule existing appointments\"\n                          : \"Permitir que el chatbot reprograme citas existentes\"}\n                      </p>\n                    </div>\n                    <Switch\n                      id=\"allow-rescheduling\"\n                      checked={settings.allowRescheduling}\n                      onCheckedChange={(checked) => updateSetting(\"allowRescheduling\", checked)}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-0.5\">\n                      <Label htmlFor=\"allow-cancellation\">\n                        {language === \"en\" ? \"Allow Cancellation\" : \"Permitir Cancelación\"}\n                      </Label>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Let the chatbot cancel appointments\"\n                          : \"Permitir que el chatbot cancele citas\"}\n                      </p>\n                    </div>\n                    <Switch\n                      id=\"allow-cancellation\"\n                      checked={settings.allowCancellation}\n                      onCheckedChange={(checked) => updateSetting(\"allowCancellation\", checked)}\n                    />\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"min-advance-hours\">\n                        {language === \"en\" ? \"Minimum Advance Hours\" : \"Horas Mínimas de Anticipación\"}\n                      </Label>\n                      <Input\n                        id=\"min-advance-hours\"\n                        type=\"number\"\n                        value={settings.minAdvanceHours}\n                        onChange={(e) => updateSetting(\"minAdvanceHours\", e.target.value)}\n                      />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"max-advance-days\">\n                        {language === \"en\" ? \"Maximum Advance Days\" : \"Días Máximos de Anticipación\"}\n                      </Label>\n                      <Input\n                        id=\"max-advance-days\"\n                        type=\"number\"\n                        value={settings.maxAdvanceDays}\n                        onChange={(e) => updateSetting(\"maxAdvanceDays\", e.target.value)}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-0.5\">\n                      <Label htmlFor=\"confirmation-required\">\n                        {language === \"en\" ? \"Confirmation Required\" : \"Confirmación Requerida\"}\n                      </Label>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Require manual confirmation for appointments\"\n                          : \"Requerir confirmación manual para las citas\"}\n                      </p>\n                    </div>\n                    <Switch\n                      id=\"confirmation-required\"\n                      checked={settings.confirmationRequired}\n                      onCheckedChange={(checked) => updateSetting(\"confirmationRequired\", checked)}\n                    />\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"space-y-0.5\">\n                      <Label htmlFor=\"reminder-enabled\">\n                        {language === \"en\" ? \"Send Reminders\" : \"Enviar Recordatorios\"}\n                      </Label>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {language === \"en\"\n                          ? \"Send appointment reminders to clients\"\n                          : \"Enviar recordatorios de citas a los clientes\"}\n                      </p>\n                    </div>\n                    <Switch\n                      id=\"reminder-enabled\"\n                      checked={settings.reminderEnabled}\n                      onCheckedChange={(checked) => updateSetting(\"reminderEnabled\", checked)}\n                    />\n                  </div>\n\n                  {settings.reminderEnabled && (\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"reminder-hours\">\n                        {language === \"en\" ? \"Reminder Hours Before\" : \"Horas de Recordatorio Antes\"}\n                      </Label>\n                      <Input\n                        id=\"reminder-hours\"\n                        type=\"number\"\n                        value={settings.reminderHours}\n                        onChange={(e) => updateSetting(\"reminderHours\", e.target.value)}\n                      />\n                    </div>\n                  )}\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"hours\" className=\"pt-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-sm font-medium\">{language === \"en\" ? \"Business Hours\" : \"Horario Laboral\"}</h3>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <CalendarClock className=\"mr-2 h-4 w-4\" />\n                      {language === \"en\" ? \"Edit Hours\" : \"Editar Horario\"}\n                    </Button>\n                  </div>\n\n                  <div className=\"rounded-md border\">\n                    <div className=\"grid grid-cols-2 border-b bg-muted/50 p-2 text-sm font-medium\">\n                      <div>{language === \"en\" ? \"Day\" : \"Día\"}</div>\n                      <div>{language === \"en\" ? \"Hours\" : \"Horario\"}</div>\n                    </div>\n                    <div className=\"divide-y\">\n                      {businessHours.map((item) => (\n                        <div key={item.day} className=\"grid grid-cols-2 p-2 text-sm\">\n                          <div>{item.day}</div>\n                          <div>{item.hours}</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"types\" className=\"pt-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-sm font-medium\">\n                      {language === \"en\" ? \"Appointment Types\" : \"Tipos de Citas\"}\n                    </h3>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <Users className=\"mr-2 h-4 w-4\" />\n                      {language === \"en\" ? \"Manage Types\" : \"Gestionar Tipos\"}\n                    </Button>\n                  </div>\n\n                  <div className=\"rounded-md border\">\n                    <div className=\"grid grid-cols-2 border-b bg-muted/50 p-2 text-sm font-medium\">\n                      <div>{language === \"en\" ? \"Type\" : \"Tipo\"}</div>\n                      <div>{language === \"en\" ? \"Duration\" : \"Duración\"}</div>\n                    </div>\n                    <div className=\"divide-y\">\n                      {appointmentTypes.map((item) => (\n                        <div key={item.name} className=\"grid grid-cols-2 p-2 text-sm\">\n                          <div>{item.name}</div>\n                          <div>{item.duration}</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n        )}\n      </CardContent>\n      {isConnected && (\n        <CardFooter className=\"flex justify-between\">\n          <Button variant=\"outline\" onClick={handleDisconnect}>\n            <X className=\"mr-2 h-4 w-4\" />\n            {language === \"en\" ? \"Disconnect\" : \"Desconectar\"}\n          </Button>\n          <Button>\n            <CalendarDays className=\"mr-2 h-4 w-4\" />\n            {language === \"en\" ? \"Save Settings\" : \"Guardar Configuración\"}\n          </Button>\n        </CardFooter>\n      )}\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5663, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/ui/simple-alert.tsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function SimpleAlert({ message }: { message: string }) {\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div\r\n      className={`container relative rounded-sm flex items-center px-4 py-3 text-sm font-bold text-white bg-orange-500 my-5`}\r\n      role=\"alert\"\r\n    >\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        strokeWidth={1.5}\r\n        stroke=\"currentColor\"\r\n        className=\"size-6 mr-3\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z\"\r\n        />\r\n      </svg>\r\n\r\n      <p>{message}</p>\r\n      <button\r\n        className=\"absolute top-0 bottom-0 right-0 px-4 py-3\"\r\n        onClick={() => setVisible(false)}\r\n        aria-label=\"Cerrar alerta\"\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"16\"\r\n          height=\"16\"\r\n          fill=\"currentColor\"\r\n          className=\"w-6 h-6 text-white\"\r\n          viewBox=\"0 0 1792 1792\"\r\n        >\r\n          <path d=\"M1490 1322q0 40-28 68l-136 136q-28 28-68 28t-68-28l-294-294-294 294q-28 28-68 28t-68-28l-136-136q-28-28-28-68t28-68l294-294-294-294q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 294 294-294q28-28 68-28t68 28l136 136q28 28 28 68t-28 68l-294 294 294 294q28 28 28 68z\"></path>\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,YAAY,EAAE,OAAO,EAAuB;IAClE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,8OAAC;QACC,WAAW,CAAC,yGAAyG,CAAC;QACtH,MAAK;;0BAEL,8OAAC;gBACC,OAAM;gBACN,MAAK;gBACL,SAAQ;gBACR,aAAa;gBACb,QAAO;gBACP,WAAU;0BAEV,cAAA,8OAAC;oBACC,eAAc;oBACd,gBAAe;oBACf,GAAE;;;;;;;;;;;0BAIN,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,WAAW;gBAC1B,cAAW;0BAEX,cAAA,8OAAC;oBACC,OAAM;oBACN,OAAM;oBACN,QAAO;oBACP,MAAK;oBACL,WAAU;oBACV,SAAQ;8BAER,cAAA,8OAAC;wBAAK,GAAE;;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}},
    {"offset": {"line": 5746, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/function-modal.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Trash2, Plus, Eye, EyeOff, Key } from \"lucide-react\";\nimport { AlertTriangle, CheckCircle, Shield, Loader2 } from \"lucide-react\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport SimpleAlert from \"./ui/simple-alert\";\n\ninterface FunctionModalProps {\n  open: boolean;\n  onOpenChange: (open: boolean) => void;\n  onAddFunction: (functionData: any) => void;\n  language?: \"en\" | \"es\";\n}\n\nexport function FunctionModal({\n  open,\n  onOpenChange,\n  onAddFunction,\n  language = \"en\",\n}: FunctionModalProps) {\n  const [functionType, setFunctionType] = useState(\"api\");\n  const [functionName, setFunctionName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [apiUrl, setApiUrl] = useState(\"\");\n  const [method, setMethod] = useState(\"POST\");\n  const [headers, setHeaders] = useState([{ key: \"\", value: \"\" }]);\n  const [parameters, setParameters] = useState([\n    { name: \"\", type: \"string\", required: true, description: \"\" },\n  ]);\n  const [customCode, setCustomCode] = useState(\"\");\n  const [customCredentials, setCustomCredentials] = useState([\n    { name: \"\", value: \"\", description: \"\" },\n  ]);\n  const [showCredentials, setShowCredentials] = useState<{\n    [key: number]: boolean;\n  }>({});\n  const [requiresAuth, setRequiresAuth] = useState(false);\n  const [authType, setAuthType] = useState(\"bearer\");\n  const [authValue, setAuthValue] = useState(\"\");\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [verificationResult, setVerificationResult] = useState<{\n    status: \"pending\" | \"success\" | \"warning\" | \"error\";\n    message: string;\n  } | null>(null);\n  const [showVerificationAlert, setShowVerificationAlert] = useState(false);\n\n  const handleVerifyFunction = async () => {\n    if (!customCode.trim()) {\n      setVerificationResult({\n        status: \"error\",\n        message:\n          language === \"en\"\n            ? \"Please enter some code before verification\"\n            : \"Por favor ingresa código antes de verificar\",\n      });\n      return;\n    }\n\n    setShowVerificationAlert(true);\n  };\n\n  const confirmVerification = async () => {\n    setShowVerificationAlert(false);\n    setIsVerifying(true);\n    setVerificationResult(null);\n\n    try {\n      // Simulate AI verification API call\n      await new Promise((resolve) => setTimeout(resolve, 3000));\n\n      // Simulate verification result\n      const hasIssues = Math.random() < 0.2; // 20% chance of issues for demo\n\n      if (hasIssues) {\n        setVerificationResult({\n          status: \"warning\",\n          message:\n            language === \"en\"\n              ? \"Potential security concerns detected. Please review your code.\"\n              : \"Se detectaron posibles problemas de seguridad. Por favor revisa tu código.\",\n        });\n      } else {\n        setVerificationResult({\n          status: \"success\",\n          message:\n            language === \"en\"\n              ? \"Code verification passed! No security issues detected.\"\n              : \"¡Verificación exitosa! No se detectaron problemas de seguridad.\",\n        });\n      }\n    } catch (error) {\n      setVerificationResult({\n        status: \"error\",\n        message:\n          language === \"en\"\n            ? \"Verification failed. Please try again.\"\n            : \"La verificación falló. Por favor intenta de nuevo.\",\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  const handleSubmit = () => {\n    const functionData = {\n      name: functionName,\n      description,\n      type: functionType,\n      ...(functionType === \"api\" && {\n        api: {\n          url: apiUrl,\n          method,\n          headers: headers.filter((h) => h.key && h.value),\n          parameters: parameters.filter((p) => p.name),\n          auth: requiresAuth ? { type: authType, value: authValue } : null,\n        },\n      }),\n      ...(functionType === \"custom\" && {\n        code: customCode,\n        credentials: customCredentials.filter((c) => c.name && c.value),\n      }),\n    };\n\n    onAddFunction(functionData);\n    onOpenChange(false);\n\n    // Reset form\n    setFunctionName(\"\");\n    setDescription(\"\");\n    setApiUrl(\"\");\n    setMethod(\"POST\");\n    setHeaders([{ key: \"\", value: \"\" }]);\n    setParameters([\n      { name: \"\", type: \"string\", required: true, description: \"\" },\n    ]);\n    setCustomCode(\"\");\n    setCustomCredentials([{ name: \"\", value: \"\", description: \"\" }]);\n    setShowCredentials({});\n    setRequiresAuth(false);\n    setAuthValue(\"\");\n    setVerificationResult(null);\n    setIsVerifying(false);\n    setShowVerificationAlert(false);\n  };\n\n  const addHeader = () => {\n    setHeaders([...headers, { key: \"\", value: \"\" }]);\n  };\n\n  const removeHeader = (index: number) => {\n    setHeaders(headers.filter((_, i) => i !== index));\n  };\n\n  const updateHeader = (\n    index: number,\n    field: \"key\" | \"value\",\n    value: string\n  ) => {\n    const updatedHeaders = [...headers];\n    updatedHeaders[index][field] = value;\n    setHeaders(updatedHeaders);\n  };\n\n  const addParameter = () => {\n    setParameters([\n      ...parameters,\n      { name: \"\", type: \"string\", required: true, description: \"\" },\n    ]);\n  };\n\n  const removeParameter = (index: number) => {\n    setParameters(parameters.filter((_, i) => i !== index));\n  };\n\n  const updateParameter = (index: number, field: string, value: any) => {\n    const updatedParameters = [...parameters];\n    updatedParameters[index] = { ...updatedParameters[index], [field]: value };\n    setParameters(updatedParameters);\n  };\n\n  const addCustomCredential = () => {\n    setCustomCredentials([\n      ...customCredentials,\n      { name: \"\", value: \"\", description: \"\" },\n    ]);\n  };\n\n  const removeCustomCredential = (index: number) => {\n    setCustomCredentials(customCredentials.filter((_, i) => i !== index));\n    const newShowCredentials = { ...showCredentials };\n    delete newShowCredentials[index];\n    setShowCredentials(newShowCredentials);\n  };\n\n  const updateCustomCredential = (\n    index: number,\n    field: \"name\" | \"value\" | \"description\",\n    value: string\n  ) => {\n    const updatedCredentials = [...customCredentials];\n    updatedCredentials[index][field] = value;\n    setCustomCredentials(updatedCredentials);\n  };\n\n  const toggleCredentialVisibility = (index: number) => {\n    setShowCredentials((prev) => ({\n      ...prev,\n      [index]: !prev[index],\n    }));\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[700px] h-[80vh] flex flex-col\">\n        <DialogHeader className=\"flex-shrink-0\">\n          <DialogTitle>\n            {language === \"en\"\n              ? \"Add Custom Function\"\n              : \"Agregar Función Personalizada\"}\n          </DialogTitle>\n          <DialogDescription>\n            {language === \"en\"\n              ? \"Create a custom function that your bot can execute\"\n              : \"Crea una función personalizada que tu bot puede ejecutar\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"flex-1 overflow-y-auto p-3\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"function-name\">\n                {language === \"en\" ? \"Function Name\" : \"Nombre de la Función\"}\n              </Label>\n              <Input\n                id=\"function-name\"\n                value={functionName}\n                onChange={(e) => setFunctionName(e.target.value)}\n                placeholder={\n                  language === \"en\" ? \"e.g., Send Email\" : \"ej., Enviar Email\"\n                }\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"function-name\">\n                {language === \"en\"\n                  ? \"Write the function format: [FUNCTION:param1, param2, ...]\"\n                  : \"Escribe el formato de la función: [FUNCION:param1, param2, ...]\"}\n              </Label>\n              <Input\n                id=\"function-name\"\n                value={functionName}\n                onChange={(e) => setFunctionName(e.target.value)}\n                placeholder={\n                  language === \"en\"\n                    ? \"e.g., [SEND_EMAIL:email, subject, message]\"\n                    : \"ej., [ENVIAR_CORREO:email, asunto, mensaje]\"\n                }\n              />\n            </div>\n            <SimpleAlert\n              message={\n                language === \"en\"\n                  ? \"The function must be written inside brackets like this: [FUNCTION:param1, param2, ...]. For example: [SEND_EMAIL:email, subject, message]\"\n                  : \"La función debe escribirse entre corchetes así: [FUNCION:param1, param2, ...]. Por ejemplo: [ENVIAR_CORREO:email, asunto, mensaje]\"\n              }\n            />\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"function-description\">\n                {language === \"en\" ? \"Description\" : \"Descripción\"}\n              </Label>\n              <Textarea\n                id=\"function-description\"\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n                placeholder={\n                  language === \"en\"\n                    ? \"Describe what this function does...\"\n                    : \"Describe qué hace esta función...\"\n                }\n                className=\"min-h-[80px]\"\n              />\n            </div>\n\n            <Tabs value={functionType} onValueChange={setFunctionType}>\n              <TabsList className=\"grid w-full grid-cols-2\">\n                <TabsTrigger value=\"api\">API Call</TabsTrigger>\n                <TabsTrigger value=\"custom\">\n                  {language === \"en\" ? \"Custom Code\" : \"Código Personalizado\"}\n                </TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"api\" className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">\n                      {language === \"en\"\n                        ? \"API Configuration\"\n                        : \"Configuración de API\"}\n                    </CardTitle>\n                    <CardDescription>\n                      {language === \"en\"\n                        ? \"Configure the API endpoint that will be called\"\n                        : \"Configura el endpoint de API que será llamado\"}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"grid grid-cols-4 gap-2\">\n                      <div className=\"space-y-2\">\n                        <Label>{language === \"en\" ? \"Method\" : \"Método\"}</Label>\n                        <Select value={method} onValueChange={setMethod}>\n                          <SelectTrigger>\n                            <SelectValue />\n                          </SelectTrigger>\n                          <SelectContent>\n                            <SelectItem value=\"GET\">GET</SelectItem>\n                            <SelectItem value=\"POST\">POST</SelectItem>\n                            <SelectItem value=\"PUT\">PUT</SelectItem>\n                            <SelectItem value=\"DELETE\">DELETE</SelectItem>\n                            <SelectItem value=\"PATCH\">PATCH</SelectItem>\n                          </SelectContent>\n                        </Select>\n                      </div>\n                      <div className=\"col-span-3 space-y-2\">\n                        <Label htmlFor=\"api-url\">URL</Label>\n                        <Input\n                          id=\"api-url\"\n                          value={apiUrl}\n                          onChange={(e) => setApiUrl(e.target.value)}\n                          placeholder=\"https://api.example.com/endpoint\"\n                        />\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"requires-auth\"\n                        checked={requiresAuth}\n                        onCheckedChange={setRequiresAuth}\n                      />\n                      <Label htmlFor=\"requires-auth\">\n                        {language === \"en\"\n                          ? \"Requires Authentication\"\n                          : \"Requiere Autenticación\"}\n                      </Label>\n                    </div>\n\n                    {requiresAuth && (\n                      <div className=\"grid grid-cols-3 gap-2\">\n                        <div className=\"space-y-2\">\n                          <Label>\n                            {language === \"en\" ? \"Auth Type\" : \"Tipo de Auth\"}\n                          </Label>\n                          <Select value={authType} onValueChange={setAuthType}>\n                            <SelectTrigger>\n                              <SelectValue />\n                            </SelectTrigger>\n                            <SelectContent>\n                              <SelectItem value=\"bearer\">\n                                Bearer Token\n                              </SelectItem>\n                              <SelectItem value=\"apikey\">API Key</SelectItem>\n                              <SelectItem value=\"basic\">Basic Auth</SelectItem>\n                            </SelectContent>\n                          </Select>\n                        </div>\n                        <div className=\"col-span-2 space-y-2\">\n                          <Label htmlFor=\"auth-value\">\n                            {language === \"en\" ? \"Auth Value\" : \"Valor de Auth\"}\n                          </Label>\n                          <Input\n                            id=\"auth-value\"\n                            type=\"password\"\n                            value={authValue}\n                            onChange={(e) => setAuthValue(e.target.value)}\n                            placeholder={\n                              language === \"en\"\n                                ? \"Enter token/key\"\n                                : \"Ingresa token/clave\"\n                            }\n                          />\n                        </div>\n                      </div>\n                    )}\n\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label>\n                          {language === \"en\" ? \"Headers\" : \"Encabezados\"}\n                        </Label>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={addHeader}\n                        >\n                          <Plus className=\"h-4 w-4 mr-1\" />\n                          {language === \"en\" ? \"Add Header\" : \"Agregar\"}\n                        </Button>\n                      </div>\n                      {headers.map((header, index) => (\n                        <div key={index} className=\"flex gap-2 items-center\">\n                          <Input\n                            placeholder={\n                              language === \"en\"\n                                ? \"Header name\"\n                                : \"Nombre del header\"\n                            }\n                            value={header.key}\n                            onChange={(e) =>\n                              updateHeader(index, \"key\", e.target.value)\n                            }\n                          />\n                          <Input\n                            placeholder={\n                              language === \"en\"\n                                ? \"Header value\"\n                                : \"Valor del header\"\n                            }\n                            value={header.value}\n                            onChange={(e) =>\n                              updateHeader(index, \"value\", e.target.value)\n                            }\n                          />\n                          <Button\n                            className=\"px-3\"\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"icon\"\n                            onClick={() => removeHeader(index)}\n                          >\n                            <Trash2 className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      ))}\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label>\n                          {language === \"en\" ? \"Parameters\" : \"Parámetros\"}\n                        </Label>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={addParameter}\n                        >\n                          <Plus className=\"h-4 w-4 mr-1\" />\n                          {language === \"en\" ? \"Add Parameter\" : \"Agregar\"}\n                        </Button>\n                      </div>\n                      {parameters.map((param, index) => (\n                        <div key={index} className=\"flex justify-between\">\n                          <div className=\"flex\">\n                            <div className=\"mr-2\">\n                              <Input\n                                placeholder={\n                                  language === \"en\"\n                                    ? \"Parameter name\"\n                                    : \"Nombre\"\n                                }\n                                value={param.name}\n                                onChange={(e) =>\n                                  updateParameter(index, \"name\", e.target.value)\n                                }\n                              />\n                            </div>\n                            <div className=\"col-span-2\">\n                              <Select\n                                value={param.type}\n                                onValueChange={(value) =>\n                                  updateParameter(index, \"type\", value)\n                                }\n                              >\n                                <SelectTrigger>\n                                  <SelectValue />\n                                </SelectTrigger>\n                                <SelectContent>\n                                  <SelectItem value=\"string\">String</SelectItem>\n                                  <SelectItem value=\"number\">Number</SelectItem>\n                                  <SelectItem value=\"boolean\">\n                                    Boolean\n                                  </SelectItem>\n                                  <SelectItem value=\"array\">Array</SelectItem>\n                                  <SelectItem value=\"object\">Object</SelectItem>\n                                </SelectContent>\n                              </Select>\n                            </div>\n                          </div>\n\n                          <div className=\"col-span-2 flex items-center gap-2\">\n                            <Switch\n                              checked={param.required}\n                              onCheckedChange={(checked) =>\n                                updateParameter(index, \"required\", checked)\n                              }\n                            />\n                            <span className=\"text-xs\">\n                              {language === \"en\" ? \"Required\" : \"Requerido\"}\n                            </span>\n                          </div>\n                          <div className=\"col-span-1\">\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"icon\"\n                              onClick={() => removeParameter(index)}\n                            >\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"custom\" className=\"space-y-4\">\n                {/* Security Credentials Section */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\n                      <Key className=\"h-5 w-5\" />\n                      {language === \"en\"\n                        ? \"Security Credentials\"\n                        : \"Credenciales de Seguridad\"}\n                    </CardTitle>\n                    <CardDescription>\n                      {language === \"en\"\n                        ? \"Add secure credentials that can be referenced in your code without exposing them\"\n                        : \"Agrega credenciales seguras que pueden ser referenciadas en tu código sin exponerlas\"}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between\">\n                        <Label>\n                          {language === \"en\" ? \"Credentials\" : \"Credenciales\"}\n                        </Label>\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={addCustomCredential}\n                        >\n                          <Plus className=\"h-4 w-4 mr-1\" />\n                          {language === \"en\" ? \"Add Credential\" : \"Agregar\"}\n                        </Button>\n                      </div>\n                      {customCredentials.map((credential, index) => (\n                        <div\n                          key={index}\n                          className=\"grid grid-cols-12 gap-2 items-end\"\n                        >\n                          <div className=\"col-span-3\">\n                            <Input\n                              placeholder={\n                                language === \"en\" ? \"Credential name\" : \"Nombre\"\n                              }\n                              value={credential.name}\n                              onChange={(e) =>\n                                updateCustomCredential(\n                                  index,\n                                  \"name\",\n                                  e.target.value\n                                )\n                              }\n                            />\n                          </div>\n                          <div className=\"col-span-4 relative\">\n                            <Input\n                              type={\n                                showCredentials[index] ? \"text\" : \"password\"\n                              }\n                              placeholder={\n                                language === \"en\"\n                                  ? \"Token/API Key/Secret\"\n                                  : \"Token/API Key/Secreto\"\n                              }\n                              value={credential.value}\n                              onChange={(e) =>\n                                updateCustomCredential(\n                                  index,\n                                  \"value\",\n                                  e.target.value\n                                )\n                              }\n                              className=\"pr-10\"\n                            />\n                            <Button\n                              type=\"button\"\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              className=\"absolute right-0 top-0 h-full px-3\"\n                              onClick={() => toggleCredentialVisibility(index)}\n                            >\n                              {showCredentials[index] ? (\n                                <EyeOff className=\"h-4 w-4\" />\n                              ) : (\n                                <Eye className=\"h-4 w-4\" />\n                              )}\n                            </Button>\n                          </div>\n                          <div className=\"col-span-4\">\n                            <Input\n                              placeholder={\n                                language === \"en\"\n                                  ? \"Description\"\n                                  : \"Descripción\"\n                              }\n                              value={credential.description}\n                              onChange={(e) =>\n                                updateCustomCredential(\n                                  index,\n                                  \"description\",\n                                  e.target.value\n                                )\n                              }\n                            />\n                          </div>\n                          <div className=\"col-span-1\">\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"icon\"\n                              onClick={() => removeCustomCredential(index)}\n                            >\n                              <Trash2 className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n\n                    {customCredentials.some((c) => c.name) && (\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n                        <div className=\"flex items-center gap-2 text-blue-800 mb-2\">\n                          <Key className=\"h-4 w-4\" />\n                          <span className=\"font-medium text-sm\">\n                            {language === \"en\"\n                              ? \"How to use credentials in your code:\"\n                              : \"Cómo usar credenciales en tu código:\"}\n                          </span>\n                        </div>\n                        <div className=\"text-xs text-blue-700 font-mono bg-blue-100 p-2 rounded\">\n                          {customCredentials\n                            .filter((c) => c.name)\n                            .map(\n                              (c) => `const ${c.name} = credentials.${c.name};`\n                            )\n                            .join(\"\\n\") ||\n                            (language === \"en\"\n                              ? \"// Add credentials above to see examples\"\n                              : \"// Agrega credenciales arriba para ver ejemplos\")}\n                        </div>\n                      </div>\n                    )}\n                  </CardContent>\n                </Card>\n\n                {/* Custom Code Section */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-lg\">\n                      {language === \"en\"\n                        ? \"Custom Code\"\n                        : \"Código Personalizado\"}\n                    </CardTitle>\n                    <CardDescription>\n                      {language === \"en\"\n                        ? \"Write custom JavaScript code that will be executed\"\n                        : \"Escribe código JavaScript personalizado que será ejecutado\"}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <div className=\"flex items-center justify-between\">\n                          <Label htmlFor=\"custom-code\">\n                            {language === \"en\"\n                              ? \"JavaScript Code\"\n                              : \"Código JavaScript\"}\n                          </Label>\n                          <Button\n                            type=\"button\"\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={handleVerifyFunction}\n                            disabled={isVerifying || !customCode.trim()}\n                            className=\"flex items-center gap-2\"\n                          >\n                            {isVerifying ? (\n                              <Loader2 className=\"h-4 w-4 animate-spin\" />\n                            ) : (\n                              <Shield className=\"h-4 w-4\" />\n                            )}\n                            {isVerifying\n                              ? language === \"en\"\n                                ? \"Verifying...\"\n                                : \"Verificando...\"\n                              : language === \"en\"\n                              ? \"Verify Function\"\n                              : \"Verificar Función\"}\n                          </Button>\n                        </div>\n                        <Textarea\n                          id=\"custom-code\"\n                          value={customCode}\n                          onChange={(e) => setCustomCode(e.target.value)}\n                          placeholder={`// ${\n                            language === \"en\"\n                              ? \"Example function with credentials\"\n                              : \"Función de ejemplo con credenciales\"\n                          }\nfunction executeFunction(params, credentials) {\n  // ${\n    language === \"en\"\n      ? \"Access your secure credentials\"\n      : \"Accede a tus credenciales seguras\"\n  }\n  const apiKey = credentials.myApiKey;\n  const token = credentials.authToken;\n  \n  // ${\n    language === \"en\"\n      ? \"Your custom logic here\"\n      : \"Tu lógica personalizada aquí\"\n  }\n  console.log('Function executed with params:', params);\n  \n  // ${\n    language === \"en\" ? \"Make secure API calls\" : \"Realiza llamadas API seguras\"\n  }\n  const response = fetch('https://api.example.com/data', {\n    headers: {\n      'Authorization': \\`Bearer \\${token}\\`,\n      'X-API-Key': apiKey\n    }\n  });\n  \n  return { success: true, message: 'Function completed' };\n}`}\n                          className=\"min-h-[250px] font-mono text-sm\"\n                        />\n                      </div>\n\n                      {verificationResult && (\n                        <Alert\n                          className={`${\n                            verificationResult.status === \"success\"\n                              ? \"border-green-200 bg-green-50\"\n                              : verificationResult.status === \"warning\"\n                              ? \"border-yellow-200 bg-yellow-50\"\n                              : \"border-red-200 bg-red-50\"\n                          }`}\n                        >\n                          <div className=\"flex items-center gap-2\">\n                            {verificationResult.status === \"success\" && (\n                              <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                            )}\n                            {verificationResult.status === \"warning\" && (\n                              <AlertTriangle className=\"h-4 w-4 text-yellow-600\" />\n                            )}\n                            {verificationResult.status === \"error\" && (\n                              <AlertTriangle className=\"h-4 w-4 text-red-600\" />\n                            )}\n                            <AlertDescription\n                              className={`${\n                                verificationResult.status === \"success\"\n                                  ? \"text-green-800\"\n                                  : verificationResult.status === \"warning\"\n                                  ? \"text-yellow-800\"\n                                  : \"text-red-800\"\n                              }`}\n                            >\n                              {verificationResult.message}\n                            </AlertDescription>\n                          </div>\n                        </Alert>\n                      )}\n\n                      <div className=\"mt-2 space-y-2\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {language === \"en\"\n                            ? \"Note: Code will be executed in a secure sandbox environment\"\n                            : \"Nota: El código se ejecutará en un entorno sandbox seguro\"}\n                        </Badge>\n                        <Badge variant=\"secondary\" className=\"text-xs\">\n                          {language === \"en\"\n                            ? \"Credentials are encrypted and never exposed in logs\"\n                            : \"Las credenciales están encriptadas y nunca se exponen en logs\"}\n                        </Badge>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end gap-2 pt-4 border-t flex-shrink-0\">\n          {functionType === \"custom\" && !verificationResult?.status && (\n            <div className=\"flex items-center text-xs text-amber-600 mr-auto\">\n              <AlertTriangle className=\"h-3 w-3 mr-1\" />\n              {language === \"en\"\n                ? \"Please verify your code before adding the function\"\n                : \"Por favor verifica tu código antes de agregar la función\"}\n            </div>\n          )}\n          {functionType === \"custom\" &&\n            verificationResult?.status === \"warning\" && (\n              <div className=\"flex items-center text-xs text-amber-600 mr-auto\">\n                <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                {language === \"en\"\n                  ? \"Please fix the issues before adding the function\"\n                  : \"Por favor corrige los problemas antes de agregar la función\"}\n              </div>\n            )}\n          <Button variant=\"outline\" onClick={() => onOpenChange(false)}>\n            {language === \"en\" ? \"Cancel\" : \"Cancelar\"}\n          </Button>\n          <Button\n            onClick={handleSubmit}\n            disabled={\n              !functionName ||\n              !description ||\n              (functionType === \"custom\" &&\n                (!verificationResult ||\n                  verificationResult.status !== \"success\"))\n            }\n          >\n            {language === \"en\" ? \"Add Function\" : \"Agregar Función\"}\n          </Button>\n        </div>\n        {/* Verification Alert Dialog */}\n        {showVerificationAlert && (\n          <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 max-w-md mx-4 space-y-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"p-2 bg-blue-100 rounded-full\">\n                  <Shield className=\"h-5 w-5 text-blue-600\" />\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-lg\">\n                    {language === \"en\"\n                      ? \"AI Code Verification\"\n                      : \"Verificación de Código con IA\"}\n                  </h3>\n                </div>\n              </div>\n\n              <div className=\"space-y-3 text-sm text-gray-600\">\n                <p>\n                  {language === \"en\"\n                    ? \"Your code will be analyzed by our AI security model to detect potential malicious code or security vulnerabilities.\"\n                    : \"Tu código será analizado por nuestro modelo de IA de seguridad para detectar posible código malicioso o vulnerabilidades de seguridad.\"}\n                </p>\n\n                <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                  <div className=\"flex items-center gap-2 text-yellow-800\">\n                    <AlertTriangle className=\"h-4 w-4\" />\n                    <span className=\"font-medium\">\n                      {language === \"en\"\n                        ? \"Token Usage Notice\"\n                        : \"Aviso de Uso de Tokens\"}\n                    </span>\n                  </div>\n                  <p className=\"text-yellow-700 text-xs mt-1\">\n                    {language === \"en\"\n                      ? \"This verification will consume approximately 50-100 tokens from your account balance.\"\n                      : \"Esta verificación consumirá aproximadamente 50-100 tokens de tu saldo de cuenta.\"}\n                  </p>\n                </div>\n\n                <p className=\"text-xs\">\n                  {language === \"en\"\n                    ? \"The verification helps ensure your bot functions safely and securely.\"\n                    : \"La verificación ayuda a asegurar que tu bot funcione de manera segura.\"}\n                </p>\n              </div>\n\n              <div className=\"flex gap-2 pt-2\">\n                <Button\n                  variant=\"outline\"\n                  onClick={() => setShowVerificationAlert(false)}\n                  className=\"flex-1\"\n                >\n                  {language === \"en\" ? \"Cancel\" : \"Cancelar\"}\n                </Button>\n                <Button onClick={confirmVerification} className=\"flex-1\">\n                  {language === \"en\" ? \"Verify Code\" : \"Verificar Código\"}\n                </Button>\n              </div>\n            </div>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7439, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/chat-widget-preview.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { MessageSquare, X, Send, Minimize2, Maximize2 } from \"lucide-react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\ntype ChatSettings = {\n  title: string;\n  subtitle: string;\n  primaryColor: string;\n  buttonColor: string;\n  bubbleColor: string;\n  userBubbleColor: string;\n  userTextColor?: string; // Nuevo parámetro\n  botTextColor?: string; // Nuevo parámetro\n  headerStyle: \"gradient\" | \"solid\";\n  logo?: string;\n  showLogo: boolean;\n  position: \"right\" | \"left\";\n  initialMessage: string;\n  placeholderText: string;\n};\n\ntype Message = {\n  id: string;\n  content: string;\n  sender: \"user\" | \"bot\";\n  timestamp: Date;\n};\n\nexport function ChatWidgetPreview({ settings }: { settings?: ChatSettings }) {\n  const [isOpen, setIsOpen] = useState(true);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: \"1\",\n      content: settings?.initialMessage || \"Hello! How can I help you today?\",\n      sender: \"bot\",\n      timestamp: new Date(),\n    },\n  ]);\n  const [input, setInput] = useState(\"\");\n\n  const defaultSettings: ChatSettings = {\n    title: \"ChatBot Support\",\n    subtitle: \"Virtual Assistant\",\n    primaryColor: \"#4f46e5\",\n    buttonColor: \"#4f46e5\",\n    bubbleColor: \"#f9fafb\",\n    userBubbleColor: \"#000000\",\n    userTextColor: \"#fff\", // Valor por defecto\n    botTextColor: \"#000\", // Valor por defecto\n    headerStyle: \"gradient\",\n    showLogo: true,\n    position: \"right\",\n    initialMessage: \"Hello! How can I help you today?\",\n    placeholderText: \"Type your message...\",\n  };\n\n  const chatSettings = { ...defaultSettings, ...settings };\n\n  const handleSendMessage = () => {\n    if (!input.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: input,\n      sender: \"user\",\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n\n    // Simulate bot response\n    setTimeout(() => {\n      const botMessage: Message = {\n        id: Date.now().toString(),\n        content:\n          \"This is a preview of how your chatbot will respond to user messages.\",\n        sender: \"bot\",\n        timestamp: new Date(),\n      };\n      setMessages((prev) => [...prev, botMessage]);\n    }, 1000);\n  };\n\n  const headerStyle =\n    chatSettings.headerStyle === \"gradient\"\n      ? {\n          background: `linear-gradient(to right, ${\n            chatSettings.primaryColor\n          }, ${adjustColor(chatSettings.primaryColor, -30)})`,\n        }\n      : { background: chatSettings.primaryColor };\n\n  return (\n    <div className=\"chat-widget-preview\">\n      <div className=\"flex justify-between mb-2\">\n        <span className=\"text-sm font-medium\">Chat Widget Preview</span>\n        <Button variant=\"outline\" size=\"sm\" onClick={() => setIsOpen(!isOpen)}>\n          {isOpen ? \"Hide Chat\" : \"Show Chat\"}\n        </Button>\n      </div>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ scale: 0.9, opacity: 0 }}\n            animate={{ scale: 1, opacity: 1 }}\n            exit={{ scale: 0.9, opacity: 0 }}\n            className=\"chat-window bg-white dark:bg-gray-900 rounded-lg overflow-hidden border border-gray-200 dark:border-gray-800 shadow-md\"\n            style={{ maxWidth: \"300px\" }}\n          >\n            {/* Chat Header */}\n            <div\n              className=\"p-3 flex justify-between items-center\"\n              style={headerStyle}\n            >\n              <div className=\"flex items-center\">\n                {chatSettings.showLogo && (\n                  <div className=\"bg-white/20 rounded-full p-1.5 mr-2\">\n                    {chatSettings.logo ? (\n                      <img\n                        src={chatSettings.logo || \"/placeholder.svg\"}\n                        alt=\"Logo\"\n                        className=\"h-4 w-4\"\n                      />\n                    ) : (\n                      <MessageSquare className=\"h-4 w-4 text-white\" />\n                    )}\n                  </div>\n                )}\n                <div>\n                  <h3 className=\"font-medium text-white text-sm\">\n                    {chatSettings.title}\n                  </h3>\n                  <p className=\"text-xs text-gray-200\">\n                    {chatSettings.subtitle}\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-1\">\n                <button\n                  onClick={() => setIsMinimized(!isMinimized)}\n                  className=\"text-gray-200 hover:text-white p-1\"\n                >\n                  {isMinimized ? (\n                    <Maximize2 size={14} />\n                  ) : (\n                    <Minimize2 size={14} />\n                  )}\n                </button>\n                <button\n                  onClick={() => setIsOpen(false)}\n                  className=\"text-gray-200 hover:text-white p-1\"\n                >\n                  <X size={14} />\n                </button>\n              </div>\n            </div>\n\n            {/* Chat Messages */}\n            <AnimatePresence>\n              {!isMinimized && (\n                <motion.div\n                  initial={{ height: 0 }}\n                  animate={{ height: \"200px\" }}\n                  exit={{ height: 0 }}\n                  className=\"p-3 h-[200px] overflow-y-auto bg-gray-50 dark:bg-gray-950\"\n                >\n                  {messages.map((message) => (\n                    <div\n                      key={message.id}\n                      className={`mb-3 flex ${\n                        message.sender === \"user\"\n                          ? \"justify-end\"\n                          : \"justify-start\"\n                      }`}\n                    >\n                      {message.sender === \"bot\" && (\n                        <div className=\"mr-1.5 flex-shrink-0\">\n                          <div\n                            className=\"rounded-full h-6 w-6 flex items-center justify-center\"\n                            style={{ background: chatSettings.primaryColor }}\n                          >\n                            <MessageSquare className=\"h-3 w-3 text-white\" />\n                          </div>\n                        </div>\n                      )}\n                      <div\n                        className={`chat-bubble p-2 rounded-lg max-w-[75%] text-sm`}\n                        style={{\n                          background:\n                            message.sender === \"user\"\n                              ? chatSettings.userBubbleColor\n                              : chatSettings.bubbleColor,\n                          color:\n                            message.sender === \"user\"\n                              ? chatSettings.userTextColor || \"#fff\"\n                              : chatSettings.botTextColor || \"#000\",\n                        }}\n                      >\n                        <p className=\"text-xs\">{message.content}</p>\n                        <p className=\"text-[10px] mt-1 opacity-60\">\n                          {message.timestamp.toLocaleTimeString([], {\n                            hour: \"2-digit\",\n                            minute: \"2-digit\",\n                          })}\n                        </p>\n                      </div>\n                      {message.sender === \"user\" && (\n                        <div className=\"ml-1.5 flex-shrink-0\">\n                          <div className=\"bg-gray-300 dark:bg-gray-700 rounded-full h-6 w-6 flex items-center justify-center\">\n                            <span className=\"text-[10px] font-medium text-gray-800 dark:text-white\">\n                              Tú\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            {/* Chat Input */}\n            {!isMinimized && (\n              <div className=\"p-2 border-t border-gray-200 dark:border-gray-800\">\n                <div className=\"flex items-center\">\n                  <Input\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder={chatSettings.placeholderText}\n                    className=\"flex-grow mr-1 h-8 text-xs\"\n                    onKeyDown={(e) => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        handleSendMessage();\n                      }\n                    }}\n                  />\n                  <Button\n                    type=\"button\"\n                    size=\"icon\"\n                    className=\"h-8 w-8\"\n                    style={{ background: chatSettings.buttonColor }}\n                    disabled={!input.trim()}\n                    onClick={() => handleSendMessage()}\n                  >\n                    <Send className=\"h-3 w-3 text-white\" />\n                  </Button>\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* Chat Button */}\n      {!isOpen && (\n        <div className=\"flex justify-center mt-4\">\n          <button\n            onClick={() => setIsOpen(true)}\n            type=\"button\"\n            className=\"rounded-full p-3 shadow-lg text-white\"\n            style={{ background: chatSettings.buttonColor }}\n          >\n            <MessageSquare className=\"h-5 w-5\" />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Helper function to adjust color brightness\nfunction adjustColor(color: string, amount: number): string {\n  return color;\n  // En una implementación real, aquí se ajustaría el brillo del color\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 7899, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aronc/Home/bot_saas_gpt/chat-bot-saas/components/chat_cuztomization/chat-widget-customization.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { ChatWidgetPreview } from \"@/components/chat-widget-preview\";\nimport { MuiColorInput } from \"mui-color-input\";\n\ntype ChatSettings = {\n  title: string;\n  subtitle: string;\n  primaryColor: string;\n  buttonColor: string;\n  bubbleColor: string;\n  userBubbleColor: string;\n  headerStyle: \"gradient\" | \"solid\";\n  showLogo: boolean;\n  position: \"right\" | \"left\";\n  initialMessage: string;\n  placeholderText: string;\n  userTextColor?: string;\n  botTextColor?: string;\n};\n\ninterface ChatWidgetCustomizationProps {\n  language: \"en\" | \"es\";\n  chatSettings: ChatSettings;\n  onSettingsChange: (settings: ChatSettings) => void;\n}\n\nexport function ChatWidgetCustomization({\n  language,\n  chatSettings,\n  onSettingsChange,\n}: ChatWidgetCustomizationProps) {\n  const [selectedTheme, setSelectedTheme] = useState(\"default\");\n  const [customThemeName, setCustomThemeName] = useState(\"\");\n\n  const chatThemes: Record<string, ChatSettings> = {\n    default: {\n      title: \"ChatBot Support\",\n      subtitle: \"Virtual Assistant\",\n      primaryColor: \"#4f46e5\",\n      buttonColor: \"#4f46e5\",\n      bubbleColor: \"#f9fafb\",\n      userBubbleColor: \"#000000\",\n      userTextColor: \"#ffffff\",\n      botTextColor: \"#000000\",\n      headerStyle: \"gradient\",\n      showLogo: true,\n      position: \"right\",\n      initialMessage: \"Hello! How can I help you today?\",\n      placeholderText: \"Type your message...\",\n    },\n    dark: {\n      title: \"Support Chat\",\n      subtitle: \"AI Assistant\",\n      primaryColor: \"#1f2937\",\n      buttonColor: \"#1f2937\",\n      bubbleColor: \"#374151\",\n      userBubbleColor: \"#111827\",\n      userTextColor: \"rgb(255, 255, 255)\",\n      botTextColor: \"rgb(255, 255, 255)\",\n      headerStyle: \"solid\",\n      showLogo: true,\n      position: \"right\",\n      initialMessage: \"Hi! Need any assistance?\",\n      placeholderText: \"Ask me anything...\",\n    },\n    light: {\n      title: \"Help Center\",\n      subtitle: \"Chat Support\",\n      primaryColor: \"#60a5fa\",\n      buttonColor: \"#3b82f6\",\n      bubbleColor: \"#f3f4f6\",\n      userBubbleColor: \"#dbeafe\",\n      userTextColor: \"#000000\",\n      botTextColor: \"#000000\",\n      headerStyle: \"gradient\",\n      showLogo: true,\n      position: \"right\",\n      initialMessage: \"Welcome! How can I assist you?\",\n      placeholderText: \"Write a message...\",\n    },\n    green: {\n      title: \"Customer Support\",\n      subtitle: \"We're here to help\",\n      primaryColor: \"#10b981\",\n      buttonColor: \"#059669\",\n      bubbleColor: \"#ecfdf5\",\n      userBubbleColor: \"#d1fae5\",\n      userTextColor: \"#064e3b\",\n      botTextColor: \"#065f46\",\n      headerStyle: \"gradient\",\n      showLogo: true,\n      position: \"right\",\n      initialMessage: \"Hey there! How can we help?\",\n      placeholderText: \"Start chatting...\",\n    },\n    orange: {\n      title: \"Chat with us\",\n      subtitle: \"Quick Support\",\n      primaryColor: \"#f97316\",\n      buttonColor: \"#ea580c\",\n      bubbleColor: \"#fff7ed\",\n      userBubbleColor: \"#ffedd5\",\n      userTextColor: \"#7c2d12\",\n      botTextColor: \"#9a3412\",\n      headerStyle: \"gradient\",\n      showLogo: true,\n      position: \"right\",\n      initialMessage: \"Need help? We’re here!\",\n      placeholderText: \"Send a message...\",\n    },\n  };\n\n  const applyTheme = (theme: string) => {\n    setSelectedTheme(theme);\n    if (theme !== \"custom\") {\n      const themeSettings = chatThemes[theme as keyof typeof chatThemes];\n      onSettingsChange({\n        ...chatSettings,\n        ...themeSettings,\n      });\n      setCustomThemeName(\"\"); // Limpiar nombre personalizado cuando se selecciona tema predefinido\n    }\n  };\n\n  const handleCustomSettingChange = (field: string, value: any) => {\n    // Si el usuario está modificando configuraciones y no está en modo custom, cambiar a custom\n    if (selectedTheme !== \"custom\") {\n      setSelectedTheme(\"custom\");\n    }\n    onSettingsChange({\n      ...chatSettings,\n      [field]: value,\n    });\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          {language === \"en\"\n            ? \"Chat Widget Customization\"\n            : \"Personalización del Widget de Chat\"}\n        </CardTitle>\n        <CardDescription>\n          {language === \"en\"\n            ? \"Customize the appearance of your chat widget for your website.\"\n            : \"Personaliza la apariencia del widget de chat para tu sitio web.\"}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        <div className=\"grid gap-6 md:grid-cols-2\">\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"theme-selector\">\n                {language === \"en\" ? \"Select Theme\" : \"Seleccionar Tema\"}\n              </Label>\n              <Select value={selectedTheme} onValueChange={applyTheme}>\n                <SelectTrigger id=\"theme-selector\">\n                  <SelectValue\n                    placeholder={\n                      language === \"en\"\n                        ? \"Select a theme\"\n                        : \"Seleccionar un tema\"\n                    }\n                  />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"default\">\n                    {language === \"en\"\n                      ? \"Default (Purple)\"\n                      : \"Predeterminado (Morado)\"}\n                  </SelectItem>\n                  <SelectItem value=\"dark\">\n                    {language === \"en\" ? \"Dark\" : \"Oscuro\"}\n                  </SelectItem>\n                  <SelectItem value=\"light\">\n                    {language === \"en\" ? \"Light (Blue)\" : \"Claro (Azul)\"}\n                  </SelectItem>\n                  <SelectItem value=\"green\">\n                    {language === \"en\" ? \"Green\" : \"Verde\"}\n                  </SelectItem>\n                  <SelectItem value=\"orange\">\n                    {language === \"en\" ? \"Orange\" : \"Naranja\"}\n                  </SelectItem>\n                  <SelectItem value=\"custom\">\n                    {language === \"en\" ? \"Custom\" : \"Personalizado\"}\n                    {customThemeName && ` (${customThemeName})`}\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n              <p className=\"text-xs text-muted-foreground\">\n                {language === \"en\"\n                  ? \"Choose a predefined theme or customize below\"\n                  : \"Elige un tema predefinido o personaliza a continuación\"}\n              </p>\n            </div>\n\n            {selectedTheme === \"custom\" && (\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"custom-theme-name\">\n                  {language === \"en\"\n                    ? \"Custom Theme Name\"\n                    : \"Nombre del Tema Personalizado\"}\n                </Label>\n                <Input\n                  id=\"custom-theme-name\"\n                  value={customThemeName}\n                  onChange={(e) => setCustomThemeName(e.target.value)}\n                  placeholder={\n                    language === \"en\"\n                      ? \"Enter your theme name...\"\n                      : \"Ingresa el nombre de tu tema...\"\n                  }\n                />\n                <p className=\"text-xs text-muted-foreground\">\n                  {language === \"en\"\n                    ? \"Give your custom theme a unique name\"\n                    : \"Dale a tu tema personalizado un nombre único\"}\n                </p>\n              </div>\n            )}\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"chat-title\">\n                {language === \"en\" ? \"Chat Title\" : \"Título del Chat\"}\n              </Label>\n              <Input\n                id=\"chat-title\"\n                value={chatSettings.title}\n                onChange={(e) =>\n                  handleCustomSettingChange(\"title\", e.target.value)\n                }\n                placeholder=\"Support Chat\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"chat-subtitle\">\n                {language === \"en\" ? \"Chat Subtitle\" : \"Subtítulo del Chat\"}\n              </Label>\n              <Input\n                id=\"chat-subtitle\"\n                value={chatSettings.subtitle}\n                onChange={(e) =>\n                  handleCustomSettingChange(\"subtitle\", e.target.value)\n                }\n                placeholder=\"Virtual Assistant\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"initial-message\">\n                {language === \"en\" ? \"Initial Message\" : \"Mensaje Inicial\"}\n              </Label>\n              <Textarea\n                id=\"initial-message\"\n                value={chatSettings.initialMessage}\n                onChange={(e) =>\n                  handleCustomSettingChange(\"initialMessage\", e.target.value)\n                }\n                placeholder=\"Hello! How can I help you today?\"\n                className=\"min-h-[80px]\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"placeholder-text\">\n                {language === \"en\"\n                  ? \"Input Placeholder\"\n                  : \"Placeholder del Input\"}\n              </Label>\n              <Input\n                id=\"placeholder-text\"\n                value={chatSettings.placeholderText}\n                onChange={(e) =>\n                  handleCustomSettingChange(\"placeholderText\", e.target.value)\n                }\n                placeholder=\"Type your message...\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"header-style\">\n                {language === \"en\" ? \"Header Style\" : \"Estilo del Encabezado\"}\n              </Label>\n              <Select\n                value={chatSettings.headerStyle}\n                onValueChange={(value) =>\n                  handleCustomSettingChange(\"headerStyle\", value)\n                }\n              >\n                <SelectTrigger id=\"header-style\">\n                  <SelectValue placeholder=\"Select style\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"gradient\">\n                    {language === \"en\" ? \"Gradient\" : \"Degradado\"}\n                  </SelectItem>\n                  <SelectItem value=\"solid\">\n                    {language === \"en\" ? \"Solid Color\" : \"Color Sólido\"}\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"position\">\n                {language === \"en\" ? \"Widget Position\" : \"Posición del Widget\"}\n              </Label>\n              <Select\n                value={chatSettings.position}\n                onValueChange={(value) =>\n                  handleCustomSettingChange(\"position\", value)\n                }\n              >\n                <SelectTrigger id=\"position\">\n                  <SelectValue placeholder=\"Select position\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"right\">\n                    {language === \"en\" ? \"Bottom Right\" : \"Abajo a la Derecha\"}\n                  </SelectItem>\n                  <SelectItem value=\"left\">\n                    {language === \"en\" ? \"Bottom Left\" : \"Abajo a la Izquierda\"}\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id=\"show-logo\"\n                checked={chatSettings.showLogo}\n                onCheckedChange={(checked) =>\n                  handleCustomSettingChange(\"showLogo\", checked)\n                }\n              />\n              <Label htmlFor=\"show-logo\">\n                {language === \"en\" ? \"Show Logo\" : \"Mostrar Logo\"}\n              </Label>\n            </div>\n            <div className=\"flex justify-between\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"user-text-color-chat\">\n                  {language === \"en\"\n                    ? \"User Text Color\"\n                    : \"Color del Texto del Usuario\"}\n                </Label>\n                <div className=\"flex gap-2\">\n                  <MuiColorInput\n                    id=\"user-text-color-chat\"\n                    value={chatSettings.userTextColor ?? \"\"}\n                    onChange={(color) =>\n                      handleCustomSettingChange(\"userTextColor\", color)\n                    }\n                  />\n                </div>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"aiden-text-color-chat\">\n                  {language === \"en\"\n                    ? \"AIDEN Text Color\"\n                    : \"Color del Texto de AIDEN\"}\n                </Label>\n                <div className=\"flex gap-2\">\n                  <MuiColorInput\n                    id=\"aiden-text-color-chat\"\n                    value={chatSettings.botTextColor ?? \"\"}\n                    onChange={(color) =>\n                      handleCustomSettingChange(\"botTextColor\", color)\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"primary-color-chat\">\n                {language === \"en\" ? \"Primary Color\" : \"Color Primario\"}\n              </Label>\n              <div className=\"flex gap-2\">\n                <MuiColorInput\n                  id=\"primary-color-chat\"\n                  value={chatSettings.primaryColor}\n                  onChange={(color) =>\n                    handleCustomSettingChange(\"primaryColor\", color)\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"button-color-chat\">\n                {language === \"en\" ? \"Button Color\" : \"Color del Botón\"}\n              </Label>\n              <div className=\"flex gap-2\">\n                <MuiColorInput\n                  id=\"button-color-chat\"\n                  value={chatSettings.buttonColor}\n                  onChange={(color) =>\n                    handleCustomSettingChange(\"buttonColor\", color)\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"bubble-color-chat\">\n                {language === \"en\"\n                  ? \"Bot Message Color\"\n                  : \"Color de Mensajes del Bot\"}\n              </Label>\n              <div className=\"flex gap-2\">\n                <MuiColorInput\n                  id=\"bubble-color-chat\"\n                  value={chatSettings.bubbleColor}\n                  onChange={(color) =>\n                    handleCustomSettingChange(\"bubbleColor\", color)\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"user-bubble-color-chat\">\n                {language === \"en\"\n                  ? \"User Message Color\"\n                  : \"Color de Mensajes del Usuario\"}\n              </Label>\n              <div className=\"flex gap-2\">\n                <MuiColorInput\n                  id=\"user-bubble-color-chat\"\n                  value={chatSettings.userBubbleColor}\n                  onChange={(color) =>\n                    handleCustomSettingChange(\"userBubbleColor\", color)\n                  }\n                />\n              </div>\n            </div>\n\n            <div className=\"mt-4 border rounded-lg p-4 bg-gray-50 dark:bg-gray-900\">\n              <p className=\"text-sm font-medium mb-2\">\n                {language === \"en\" ? \"Preview\" : \"Vista previa\"}\n              </p>\n              <ChatWidgetPreview settings={chatSettings} />\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}