{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/constants/routes.js"],"sourcesContent":["const ROUTES = {\r\n  PUBLIC: {\r\n    LOGIN: \"/login\",\r\n    REGISTER: \"/register\",\r\n    HOME: \"/\",\r\n    HELP: \"/help\",\r\n  },\r\n  PROTECTED: {\r\n    DASHBOARD: \"/dashboard\", //dashboard y perfil\r\n  },\r\n};\r\n\r\nexport default ROUTES;\r\n"],"names":[],"mappings":";;;AAAA,MAAM,SAAS;IACb,QAAQ;QACN,OAAO;QACP,UAAU;QACV,MAAM;QACN,MAAM;IACR;IACA,WAAW;QACT,WAAW;IACb;AACF;uCAEe"}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { getToken } from \"next-auth/jwt\";\r\nimport ROUTES from \"./constants/routes\";\r\n\r\nexport async function middleware(req: NextRequest) {\r\n  // Obtén el token de sesión de NextAuth\r\n  const token = await getToken({ req, secret: process.env.NEXTAUTH_SECRET });\r\n  const url = req.nextUrl.clone();\r\n\r\n  // Rutas públicas que deben ocultarse si el usuario está autenticado\r\n  const hiddenForAuthenticated = [ROUTES.PUBLIC.LOGIN, ROUTES.PUBLIC.REGISTER];\r\n\r\n  // Rutas protegidas que requieren autenticación\r\n  const protectedRoutes = Object.values(ROUTES.PROTECTED);\r\n\r\n  // Si el usuario está autenticado y accede a una ruta pública, redirige al dashboard\r\n  if (\r\n    token &&\r\n    hiddenForAuthenticated.some((route) => url.pathname.startsWith(route))\r\n  ) {\r\n    url.pathname = ROUTES.PROTECTED.DASHBOARD;\r\n    return NextResponse.redirect(url);\r\n  }\r\n\r\n  // Si el usuario no está autenticado y accede a una ruta protegida, redirige al login\r\n  if (\r\n    !token &&\r\n    protectedRoutes.some((route) => url.pathname.startsWith(route))\r\n  ) {\r\n    url.pathname = ROUTES.PUBLIC.LOGIN;\r\n    return NextResponse.redirect(url);\r\n  }\r\n\r\n  // Si no se cumplen las condiciones anteriores, permite continuar\r\n  return NextResponse.next();\r\n}\r\n\r\nexport const config = {\r\n  // Define las rutas donde se aplicará el middleware\r\n  matcher: [\"/login\", \"/register\", \"/dashboard/:path*\", \"/dashboard/:path*\"],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AACA;;;;AAEO,eAAe,WAAW,GAAgB;IAC/C,uCAAuC;IACvC,MAAM,QAAQ,MAAM,CAAA,GAAA,oJAAA,CAAA,WAAQ,AAAD,EAAE;QAAE;QAAK,QAAQ,QAAQ,GAAG,CAAC,eAAe;IAAC;IACxE,MAAM,MAAM,IAAI,OAAO,CAAC,KAAK;IAE7B,oEAAoE;IACpE,MAAM,yBAAyB;QAAC,2HAAA,CAAA,UAAM,CAAC,MAAM,CAAC,KAAK;QAAE,2HAAA,CAAA,UAAM,CAAC,MAAM,CAAC,QAAQ;KAAC;IAE5E,+CAA+C;IAC/C,MAAM,kBAAkB,OAAO,MAAM,CAAC,2HAAA,CAAA,UAAM,CAAC,SAAS;IAEtD,oFAAoF;IACpF,IACE,SACA,uBAAuB,IAAI,CAAC,CAAC,QAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,SAC/D;QACA,IAAI,QAAQ,GAAG,2HAAA,CAAA,UAAM,CAAC,SAAS,CAAC,SAAS;QACzC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,qFAAqF;IACrF,IACE,CAAC,SACD,gBAAgB,IAAI,CAAC,CAAC,QAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,SACxD;QACA,IAAI,QAAQ,GAAG,2HAAA,CAAA,UAAM,CAAC,MAAM,CAAC,KAAK;QAClC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,iEAAiE;IACjE,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IACpB,mDAAmD;IACnD,SAAS;QAAC;QAAU;QAAa;QAAqB;KAAoB;AAC5E"}}]
}